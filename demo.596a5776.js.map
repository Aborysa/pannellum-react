{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./demo/src/components/VideoDemo.js","webpack:///./node_modules/nwb/polyfills.js","webpack:///./node_modules/react-dom/cjs/react-dom.production.min.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/asap/browser-raw.js","webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./src/pannellum/js/RequestAnimationFrame.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/mux.js/lib/aac/probe.js","webpack:///./node_modules/object-assign/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./demo/src/images/video.mp4","webpack:///./src/pannellum/js/videojs-pannellum-plugin.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/react/index.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/schedule/cjs/schedule.production.min.js","webpack:///./node_modules/schedule/index.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/promise/lib/es6-extensions.js","webpack:///./node_modules/react-dom/index.js","webpack:///./demo/src/images/milan.jpg","webpack:///./src/elements/Pannellum.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./demo/src/components/Header.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/promise/lib/rejection-tracking.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./demo/src/index.js","webpack:///./demo/src/components/ImageDemo.js","webpack:///./src/elements/PannellumVideo.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./src/pannellum/js/pannellum.js","webpack:///./src/index.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./src/pannellum/js/libpannellum.js","webpack:///./demo/src/images/alma.jpg","webpack:///./node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/promise/lib/core.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/react/cjs/react.production.min.js","webpack:///./demo/src/images/jfk.mp4","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js"],"names":["inspectMp4","textifyMp4","parseType","__webpack_require__","parseMp4Date","seconds","Date","parseSampleFlags","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","parse","avc1","data","view","DataView","buffer","byteOffset","byteLength","dataReferenceIndex","getUint16","width","height","horizresolution","vertresolution","frameCount","depth","config","subarray","avcC","numOfPictureParameterSets","nalSize","offset","i","result","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","push","Uint8Array","btrt","bufferSizeDB","getUint32","maxBitrate","avgBitrate","esds","version","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","length","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","boxes","dref","dataReferences","hdlr","getUint8","handlerType","name","String","fromCharCode","decodeURIComponent","escape","mdat","nals","avcStream","avcView","nalParse","mdhd","language","creationTime","modificationTime","timescale","duration","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","samples","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","tfdt","baseMediaDecodeTime","Math","pow","tfhd","trackId","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","tkhd","layer","alternateGroup","traf","trak","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","trun","sample","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","getInt32","size","compositionTimeOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","type","end","box","ab","ArrayBuffer","v","z","inspectedMp4","indent","Array","join","map","index","Object","keys","filter","key","prefix","value","bytes","prototype","slice","call","byte","toString","match","line","JSON","stringify","split","module","exports","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","componentName","props","_classCallCheck","this","_this","_possibleConstructorReturn","_Component","hanldeClick","path","console","log","setState","mediaVideo","myVideo","title","scene","hanldeClickCheck","myVideo2","state","ref","React","createRef","componentDidMount","current","render","_this2","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","className","onClick","video","pause","play","__WEBPACK_IMPORTED_MODULE_1__src__","loop","autoplay","pitch","yaw","hfov","minHfov","maxHfov","hotSpotDebug","mouseZoom","controls","Hotspot","handleClick","evt","args","handleClickArg","text","URL","data-language","Component","Promise","enable","window","assign","aa","n","ba","t","b","arguments","c","d","encodeURIComponent","e","f","g","h","Error","k","l","replace","framesToPop","ca","ea","fa","ha","ia","ja","onError","ka","apply","m","ma","na","oa","indexOf","pa","extractEvents","eventTypes","qa","hasOwnProperty","phasedRegistrationNames","ra","registrationName","sa","ta","dependencies","ua","va","wa","xa","currentTarget","la","ya","isArray","concat","za","forEach","Aa","Ba","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","constructor","release","Ca","Da","Ea","injectEventPluginOrder","injectEventPluginsByName","Fa","stateNode","disabled","Ga","Ha","random","Ia","Ja","Ka","parentNode","La","Ma","Na","Oa","return","Pa","dispatchConfig","Qa","_targetInst","Ra","Ta","Ua","Va","document","Wa","toLowerCase","Ya","animationend","animationiteration","animationstart","transitionend","Za","$a","style","animation","transition","bb","cb","db","eb","fb","gb","hb","ib","jb","textContent","kb","lb","nativeEvent","Interface","target","isDefaultPrevented","defaultPrevented","returnValue","nb","eventPool","pop","ob","destructor","mb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","extend","pb","qb","rb","sb","tb","documentMode","ub","vb","wb","xb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","yb","zb","keyCode","Ab","detail","Bb","Eb","locale","which","Cb","ctrlKey","altKey","metaKey","char","Db","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","Pb","Qb","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","time","url","week","Rb","nodeName","Sb","srcElement","correspondingUseElement","nodeType","Tb","setAttribute","Ub","Wb","_valueTracker","getOwnPropertyDescriptor","get","set","defineProperty","configurable","enumerable","getValue","setValue","stopTracking","Vb","Xb","checked","Yb","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Zb","C","Symbol","for","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","iterator","kc","lc","displayName","$$typeof","then","_reactStatus","_reactResult","mc","_debugOwner","_debugSource","fileName","lineNumber","nc","pc","qc","rc","D","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","E","vc","wc","toUpperCase","xc","tc","isNaN","uc","test","sc","removeAttribute","setAttributeNS","yc","zc","defaultChecked","defaultValue","_wrapperState","initialChecked","Bc","initialValue","controlled","Cc","Dc","Ec","Fc","ownerDocument","activeElement","tabIndex","Gc","change","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","detachEvent","Pc","Qc","attachEvent","Rc","Sc","Tc","Uc","_isInputEventSupported","Vc","Wc","Alt","Control","Meta","Shift","Xc","getModifierState","Yc","Zc","$c","ad","bd","cd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","dd","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","ed","mouseEnter","mouseLeave","pointerEnter","pointerLeave","fd","defaultView","parentWindow","alternate","gd","hd","id","jd","effectTag","kd","md","child","sibling","ld","nd","animationName","elapsedTime","pseudoElement","od","clipboardData","pd","qd","charCode","rd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","sd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","td","location","repeat","ud","dataTransfer","vd","touches","targetTouches","changedTouches","wd","xd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","yd","zd","Ad","Bd","isInteractive","Cd","isInteractiveTopLevelEventType","Dd","Ed","Fd","targetInst","ancestors","containerInfo","topLevelType","Gd","F","Hd","Id","bind","addEventListener","Jd","Kd","Ld","Md","Nd","Od","body","Qd","firstChild","Rd","node","nextSibling","Td","HTMLIFrameElement","contentDocument","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","ae","start","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","be","onSelect","de","children","Children","ce","ee","options","selected","defaultSelected","fe","dangerouslySetInnerHTML","ge","he","ie","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","je","html","mathml","svg","ke","le","me","ne","namespaceURI","innerHTML","removeChild","appendChild","MSApp","execUnsafeLocalFunction","oe","lastChild","nodeValue","pe","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qe","re","trim","setProperty","charAt","substring","se","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","te","ue","is","ve","blur","focus","we","xe","ye","ze","autoFocus","Ae","__html","Be","Ce","Set","De","Ee","G","H","Fe","I","J","Ge","He","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","K","childContextTypes","Ie","Je","Ke","Le","getChildContext","Me","__reactInternalMemoizedMergedChildContext","Ne","Oe","Pe","Qe","Se","pendingProps","firstContextDependency","memoizedState","updateQueue","memoizedProps","mode","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Te","isReactComponent","Ue","Ve","We","Xe","Ye","pendingChildren","implementation","Ze","didError","earliestPendingTime","latestPendingTime","$e","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","nextExpirationTimeToWorkOn","af","bf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","cf","df","payload","callback","next","ef","ff","gf","hf","jf","kf","r","lf","mf","nf","stack","of","pf","qf","rf","sf","_context","_currentValue","tf","uf","vf","context","observedBits","wf","L","xf","yf","zf","Af","documentElement","tagName","Bf","Cf","Df","Ef","refs","Ff","Jf","isMounted","_reactInternalFiber","enqueueSetState","Gf","Hf","If","enqueueReplaceState","enqueueForceUpdate","Kf","shouldComponentUpdate","isPureReactComponent","Lf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Mf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","Nf","Of","_owner","_stringRef","Pf","Qf","Map","A","S","B","p","u","q","delete","P","done","x","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","cg","ReactCurrentOwner","M","dg","eg","fg","gg","hg","updater","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","ig","jg","pendingContext","ng","defaultProps","pg","default","bg","og","element","hydrate","hidden","_calculateChangedBits","unstable_observedBits","qg","rg","sg","tg","ug","error","setTimeout","vg","wg","xg","componentWillUnmount","yg","zg","Ag","insertBefore","onclick","Bg","wasMultiple","multiple","Cg","Dg","Eg","componentDidCatch","Fg","add","componentStack","Gg","Hg","readContext","Ig","Jg","Kg","Lg","N","Mg","O","Ng","Q","Og","Pg","Qg","createElementNS","createTextNode","Rg","Sg","currentDispatcher","pendingCommitExpirationTime","Tg","has","finishedWork","getDerivedStateFromCatch","Ug","Vg","nextScheduledRoot","T","U","V","W","Wg","Y","Z","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","fh","gh","hh","ih","jh","unstable_now","kh","lh","mh","nh","oh","unstable_cancelScheduledWork","unstable_scheduleWork","ph","timeout","qh","didTimeout","_onComplete","rh","firstBatch","_expirationTime","_defer","rangeCount","Xa","focusedElem","selectionRange","R","yh","__reactInternalSnapshotBeforeUpdate","w","y","Sd","contains","compareDocumentPosition","min","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","Sa","oc","X","Ih","Jh","kg","lg","Kh","Ac","mg","Pd","Lh","timeRemaining","sh","th","uh","wh","vh","xh","zh","Bh","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Ch","_didCommit","_onCommit","Dh","timeoutHandle","_internalRoot","Eh","Gh","_reactRootContainer","legacy_renderSubtreeIntoContainer","hasAttribute","Fh","Hh","Ah","querySelectorAll","form","commit","unmount","createBatch","Mh","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_flushControlled","Events","unstable_createRoot","findFiberByHostInstance","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Re","findHostInstanceByFiber","bundleType","rendererPackageName","Nh","Oh","findBox","startTime","getVideoTrackIds","toUnsigned","subresults","results","init","reduce","fragment","trafs","baseTimes","scale","Infinity","isFinite","videoTrackIds","hdlrs","tkhds","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","UINT32_MAX","charCodeAt","audio","setUint32","audioobjecttype","samplingfrequencyindex","tracks","trackFragments","sequenceParameterSets","pictureParameterSets","profileIdc","levelIdc","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","floor","durationPresent","sizePresent","flagsPresent","undefined","initSegment","fileType","movie","isFunction","parseHeaders","xtend","initParams","uri","params","createXHR","_createXHR","called","err","response","errorFunc","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","getBody","method","headers","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","onreadystatechange","readyState","onload","onerror","onprogress","onabort","ontimeout","open","username","withCredentials","abort","code","setRequestHeader","obj","isEmpty","beforeSend","send","array","forEachArray","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","position","workingBytes","availableBytes","skipBits","count","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","StreamTypes","handleRollover","probe","ts","aac","parseAudioPes_","pmt","packet","pesType","pusi","parsed","startIndex","endIndex","endLoop","pid","parsePesType","table","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","frame","pes","currentFrame","firstKeyFrame","shift","videoPacketContainsKeyFrame","inspectTs_","parsePat","parsePmt","parsePsi_","H264_STREAM_TYPE","ADTS_STREAM_TYPE","baseTimestamp","audioCount","sampleRate","timestamp","frameSize","byteIndex","parseId3TagSize","parseAacTimestamp","parseAdtsSize","parseSampleRate","audioTimescale","dts","pts","inspectAac_","segmentInfo","audioBaseTimestamp","info","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","global","rawAsap","task","queue","requestFlush","capacity","flush","currentIndex","scan","newLength","toggle","observer","scope","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromTimer","handleTimer","intervalHandle","setInterval","clearInterval","observe","characterData","TransportPacketStream","TransportParseStream","ElementaryStream","Stream","CaptionStream","TimestampRolloverStream","m2tsStreamTypes","bytesInBuffer","everything","trigger","parsePsi","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","tableEnd","timed-metadata","METADATA_STREAM_TYPE","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream","forceFlush","packetFlushable","packetData","event","ptsDtsFlags","packetLength","dataAlignmentIndicator","timelineStartInfo","codec","m2ts","PAT_PID","MP2T_PACKET_LENGTH","Cea608Stream","MetadataStream","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","__WEBPACK_IMPORTED_MODULE_0_global_window__","__WEBPACK_IMPORTED_MODULE_0_global_window___default","__WEBPACK_IMPORTED_MODULE_1_global_document__","__WEBPACK_IMPORTED_MODULE_1_global_document___default","__WEBPACK_IMPORTED_MODULE_2_tsml__","__WEBPACK_IMPORTED_MODULE_2_tsml___default","__WEBPACK_IMPORTED_MODULE_3_xhr__","__WEBPACK_IMPORTED_MODULE_3_xhr___default","__WEBPACK_IMPORTED_MODULE_4_videojs_vtt_js__","__WEBPACK_IMPORTED_MODULE_4_videojs_vtt_js___default","__WEBPACK_IMPORTED_MODULE_5_safe_json_parse_tuple__","__WEBPACK_IMPORTED_MODULE_5_safe_json_parse_tuple___default","__WEBPACK_IMPORTED_MODULE_6_url_toolkit__","__WEBPACK_IMPORTED_MODULE_6_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_7_m3u8_parser__","__WEBPACK_IMPORTED_MODULE_8_mpd_parser__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_mp4_probe__","__WEBPACK_IMPORTED_MODULE_9_mux_js_lib_mp4_probe___default","__WEBPACK_IMPORTED_MODULE_10_mux_js_lib_mp4__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_tools_ts_inspector_js__","__WEBPACK_IMPORTED_MODULE_11_mux_js_lib_tools_ts_inspector_js___default","__WEBPACK_IMPORTED_MODULE_12_aes_decrypter__","level","history","logByType","lvl","levels","lvlRegExp","RegExp","unshift","fn","_len","_key","all","off","debug","warn","DEFAULT","clear","disable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","_typeof","classCallCheck","instance","Constructor","TypeError","inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","taggedTemplateLiteralLoose","strings","raw","object","isObject","each","sources","isPlain","computedStyle","el","prop","getComputedStyle","cs","_templateObject","isNonBlankString","str","throwIfWhitespace","isReal","isEl","isInFrame","parent","createQuerier","selector","querySelector","ctx","createEl","properties","attributes","content","getOwnPropertyNames","propName","val","attrName","appendContent","innerText","prependTo","hasClass","classToCheck","classList","addClass","classToAdd","removeClass","classToRemove","remove","toggleClass","classToToggle","predicate","setAttributes","attrValue","getAttributes","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","onselectstart","unblockTextSelection","getBoundingClientRect","rect","parseFloat","findPosition","docEl","clientLeft","pageXOffset","clientTop","pageYOffset","round","getPointerPosition","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","max","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","old","stopImmediatePropagation","isImmediatePropagationStopped","doc","_supportsPassive","opts","passiveEvents","on","guid","hash","handlersCopy","passive","removeType","splice","elemData","targetData","one","func","_windowLoaded","videojs","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","last","debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","EVENT_MAP","queueTrigger","oldTimeout","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","mergeOptions","ready","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","getChildById","getChild","addChild","component","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","emitTapEvents","touchStart","firstTouch","couldBeTap","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","_i","MediaError","message","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","acc","cues","cue","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","empty","closeButton","content_","activeEl","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","allChildren","HTMLAnchorElement","HTMLAreaElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","addtrack","removetrack","disableOthers","list","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","showing","Track","trackProps","_loop","parseUrl","href","addToBody","host","protocol","div","details","getAbsoluteURL","getFileExtension","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","loadTrack","crossOrigin","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","trackList","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","s","gm","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","Number","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","values","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","patchCanPlayType","unpatchCanPlayType","_templateObject$2","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","catch","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","PromiseClass","resolve","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this11","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this12","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","subClassMethods","methods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","resolveUrl","baseURL","relativeURL","buildAbsoluteURL","classCallCheck$1","createClass$1","protoProps","staticProps","inherits$1","possibleConstructorReturn$1","slicedToArray$1","arr","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$2","forEachMediaGroup","master","mediaType","groupKey","mediaGroups","labelKey","mediaProperties","updateMaster","media","playlist","playlists","segments","mediaSequence","mergedPlaylist","updateSegments","segment","baseUri","resolvedUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","targetDuration","PlaylistLoader","srcUrl","hls","getPrototypeOf","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","manifest","media_","endList","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","delay","AUDIO","VIDEO","CLOSED-CAPTIONS","SUBTITLES","intervalDuration","endSequence","expired","backward","forward","precise","backwardDuration","forwardDuration","totalDuration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","BANDWIDTH","MAX_VALUE","Playlist","seekableStart","seekableEnd","getMediaInfoForTime","numSegments","mediaIndex","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","byterange","hexDump","utils","tagDump","textRanges","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","abs","addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","caption","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","cueTime","frames","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","sort","idx","cueGroup","nextTime","win","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","_findBox","mp4Generator","toUnsigned$1","callbacks","pipe","destination","flushSource","sampleForFrame","keyFrame","frameUtils","nalUnits","currentNal","nalUnitType","currentGop","gops","nalCount","nalsByteLength","numberOfNals","trackDecodeInfo","minSegmentDts","maxSegmentDts","minSegmentPts","maxSegmentPts","keepOriginalTimestamps","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newData","emulationPreventionBytesPositions","sourceIndex","captionPackets_","ccStreams_","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","startPts","endPts","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","reference","direction","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode","parseUtf8","parseSyncSafeInteger","tagParsers","TXXX","WXXX","PRIV","owner","unescape","tagSize","dispatchType","chunk","frameStart","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","100","110","244","44","83","86","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","ceil","_AacStream","H264Stream","NalByteStream","setTimestamp","header","returnSize","lowThree","middle","bytesLeft","tempLength","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData","arrayEquals","sumFrameByteLengths","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","clock","AUDIO_PROPERTIES","VIDEO_PROPERTIES","sum","adtsFrames","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","trimAdtsFramesByEarliestDts_","prefixWithSilence_","generateSampleTable_","concatenateFrameData_","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$2","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","total","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","id3","captionStreams","timelineStartPts","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","setupTsPipeline","packetStream","parseStream","elementaryStream","videoTimestampRolloverStream","h264Stream","videoSegmentStream","setBaseMediaDecodeTime","isAac","resetCaptions","_textifyMp","transmuxer","Transmuxer","VideoSegmentStream","AudioSegmentStream","parseType$1","parse$$1","mp4Inspector","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","classCallCheck$$1","createClass$$1","MessageHandlers","initArray","typedArray","action","gopInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","codecs","orig","profile","avcLevel","parseCodecs","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","CODECS","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","mimeType","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","mapping","currentTimePts","gopsSafeToAlignWith","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","msObjectURL","swfId","supportsNativeMediaSources","isTypeSupported","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","minimumUpdatePeriod","playlistUpdate","group","_playlistUpdate","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","masterXml_","manifestUri","clientOffset","clientOffset_","phonyUri","_phonyUri","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","byterangeEnd","Range","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","endOfAllRequests","worstError","prev","getMostImportantError","encryptedBytes","decryptionHandler","requestId","decrypted","encrypted","iv","decryptSegment","handleProgress","progressFn","progressEvent","stats","loaded","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","appendedLastSegment","finite","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","endOfStream","timeline","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","currentTimeline","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","timingInfo","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","resolution","RESOLUTION","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","dateTimeObject","segmentStart","distance","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","accuracy","mediaIndexDiff","Decrypter$1","possibleConstructorReturn$$1","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","x2","x4","tEnc","tDec","aesTables","AES","_tables","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","_length","AsyncStream$$1","_Stream","jobs","timeout_","inherits$$1","processJob_","job","ntoh","word","Decrypter$$1","initVector","step","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","decipher","decrypted32","init0","init1","init2","init3","wordIx","decrypt$$1","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","forced","_settings$mediaTypes$3","instreamId","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","mediaGroup","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","cueOut","adOffset","adTotal","_segment$cueOutCont$s","cueOutCont","_segment$cueOutCont$s2","updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","fastChangeFunction","masterPlaylistController_","fastQualityChange_","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","vhs","source_","Hls$1","Decrypter","AsyncStream","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","keySystem","audioContentType","videoContentType","contentProtection","pssh","emeKeySystems","keySystems","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","representations","setupQualityLevels_","qualityLevels_","addQualityLevel","get$$1","receiver","getter","get$2","HlsSourceHandler","supportedType","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_pkcs7__","createClass","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","letter","shouldUseNative","symbols","toObject","eval","scrollSetting","","up","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","lines","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","findScrollSetting","SyntaxError","__WEBPACK_IMPORTED_MODULE_0_video_js__","pannellum","vid","pnlmContainer","dynamic","showZoomCtrl","showFullscreenCtrl","autoLoad","panorama","visibility","pnlmViewer","viewer","display","setUpdate","AdtsStream","AacStream","reviver","timesOutAt","previous","_schedMock","groupNalsIntoFrames","groupFramesIntoGops","extendFirstKeyFrame","generateSampleTable","concatenateNalData","TRUE","valuePromise","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","_44","_83","_18","ex","reject","remaining","res","race","onRejected","checkDCE","Pannellum","_PureComponent","renderImage","hotspots","flatMap","hotspotArray","hotspot","substr","cssClass","createTooltipFunc","tooltip","hotspotTooltip","createTooltipArgs","tooltipArg","clickHandlerFunc","handleClickHotspot","clickHandlerArgs","jsonConfig","image","haov","vaov","vOffset","minPitch","maxPitch","minYaw","maxYaw","autoRotate","compass","preview","previewTitle","previewAuthor","author","orientationOnByDefault","keyboardZoom","draggable","disableKeyboardCtrl","showControls","hotspotDebug","hotSpots","onRender","destroy","onLoad","onScenechange","onScenechangefadedone","onErrorcleared","onMousedown","onMouseup","onTouchstart","onTouchend","hotSpotDiv","hDiv","outDiv","inDiv","getViewer","forceRender","prevProps","prevState","snapshot","setYawBounds","setPitchBounds","setHfovBounds","setYaw","setPitch","setHfov","_props","divStyle","__WEBPACK_IMPORTED_MODULE_1_react___default","imageNode","PureComponent","propTypes","oneOfType","arrayOf","isCallable","toStr","thisArg","len","forEachString","forEachObject","ReactPropTypesSecret","emptyFunction","shim","propFullName","secret","getShim","isRequired","ReactPropTypes","symbol","any","instanceOf","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","alert","confirm","prompt","unpad","__WEBPACK_IMPORTED_MODULE_0_react__","autoKeyword","directionSetting","lr","rl","alignSetting","findAlignSetting","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","region","findDirectionSetting","snapToLines","lineAlign","positionAlign","getCueAsHTML","convertCueToDOMTree","DEFAULT_WHITELIST","RangeError","_47","_71","matchWhitelist","cls","displayId","rejections","onUnhandled","allRejections","whitelist","logged","logError","_56","onHandled","_75","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","Demo","__WEBPACK_IMPORTED_MODULE_3__components_Header__","__WEBPACK_IMPORTED_MODULE_4__components_ImageDemo__","__WEBPACK_IMPORTED_MODULE_5__components_VideoDemo__","ImageDemo","hanldeClickImage","mediaPhoto","myImage2","myImage","yaww","updateText","flexDirection","PannellumVideo","renderVideo","videoNode","cuurentHS","getConfig","hs","removeHotSpot","addHotSpot","data-vjs-player","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","alt","vals","vals0","integer","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","nodeStack","pushNodes","nextTextNode","determineBidi","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","offsetTop","rects","getClientRects","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","decode","cuetext","overlay","paddedOverlay","margin","shouldCompute","reportOrThrowError","collectNextLine","pos","parseHeader","xy","anchor","onregion","parseRegion","alreadyCollectedLine","hasSubstring","doccy","topLevel","minDoc","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","baseURLPath","newPath","lastIndexOf","parts","Viewer","initialConfig","renderer","panoImage","prevTime","autoRotateStart","origHfov","origPitch","isUserInteracting","latestInteraction","onPointerDownPointerX","onPointerDownPointerY","onPointerDownPointerDist","onPointerDownYaw","onPointerDownPitch","keysDown","fullscreenActive","listenersAdded","speed","animating","orientation","orientationYawOffset","autoRotateSpeed","animatedMove","externalEventListeners","specifiedPhotoSphereExcludes","hotspotsCreated","defaultConfig","roll","autoRotateInactivityDelay","autoRotateStopDelay","northOffset","doubleClickZoom","avoidShowingBackground","animationTimingFunction","touchPanSpeedCoeffFactor","capturedKeyNumbers","loadButtonLabel","loadingLabel","bylineLabel","noPanoramaError","fileAccessError","malformedURLError","iOS8WebGLError","genericWebGLError","textureSizeError","unknownError","getElementById","uiContainer","renderContainer","dragFix","aboutMsg","aboutMessage","mousePosition","t1","t2","infoDisplay","hotSpotDebugIndicator","boxp","lbox","lbar","lbarFill","msg","errorMsg","processOptions","zoomIn","animateInit","zoomOut","fullscreen","toggleFullscreen","mozFullScreenEnabled","webkitFullscreenEnabled","msFullscreenEnabled","stopOrientation","startOrientation","orientationSupport","startOrientationIfSupported","DeviceOrientationEvent","deviceOrientationTest","alpha","beta","gamma","Image","multiRes","basePath","anError","itemsToLoad","onImageLoad","outerHTML","cubeMap","absoluteURL","sanitizeURL","onloadend","reader","FileReader","flagIndex","ignoreGPanoXMP","xmpData","getTag","xmp","fullWidth","croppedWidth","fullHeight","croppedHeight","topPixels","heading","horizonPitch","horizonRoll","readAsBinaryString","readAsText","lengthComputable","numerator","denominator","libpannellum","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","onDocumentMouseWheel","onDocumentDoubleClick","onFullScreenChange","onDocumentResize","onDocumentKeyPress","onDocumentKeyUp","clearKeys","pointerAction","touchAction","onDocumentPointerDown","onDocumentPointerMove","onDocumentPointerUp","onDocumentTouchStart","onDocumentTouchMove","onDocumentTouchEnd","pointerEnabled","PI","renderInitCallback","maxWidth","renderInit","fireEvent","bounds","coords","mouseEventToCoords","stopAnimation","lookAt","canvas","getCanvas","canvasWidth","clientWidth","canvasHeight","clientHeight","focal","tan","sin","cos","root","atan","atan2","vfov","pos0","pos1","clientDist","touchmovePanSpeedCoeff","firstScene","mergeConfig","pointerIDs","pointerCoordinates","defined","keynumber","keycode","changeKey","keyChanged","animateMove","normTime","startPosition","endPosition","callbackArgs","animate","tmpyaw","hoffcut","hfov2","vfov2","transposed","yawRange","pitchRange","renderHotSpots","transform","webkitTransform","isKeyDown","prevPitch","prevYaw","prevZoom","timeDiff","yawDiff","maxSpeed","keyRepeat","isLoading","autoRotateStartTime","Quaternion","computeQuaternion","quaternion","taitBryanToQuaternion","multiply","angle","orientationListener","toEulerAngles","sceneFadeDuration","fadeImg","createHotSpot","createHotSpots","escapeHTML","span","paddingTop","sceneId","ontouchend","clicked","loadScene","targetPitch","targetYaw","targetHfov","scrollWidth","marginLeft","marginTop","scrollHeight","renderHotSpot","hsPitchSin","hsPitchCos","configPitchSin","configPitchCos","yawCos","yawSin","hfovTan","coord","rollSin","rollCos","MozTransform","photoSphereExcludes","scenes","isPreview","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullScreen","isFullScreen","innerWidth","screen","innerHeight","mozFullScreen","webkitIsFullScreen","resize","constrainHfov","cubeResolution","newHfov","fadeDone","workingPitch","workingYaw","workingHfov","returnImage","destroyHotSpots","asin","isLoaded","getPitch","animated","getPitchBounds","getYaw","getYawBounds","getHfov","getHfovBounds","getNorthOffset","setNorthOffset","getHorizonRoll","setHorizonRoll","setPose","getHorizonPitch","setHorizonPitch","startAutoRotate","stopAutoRotate","getRenderer","getScene","addScene","removeScene","getContainer","hotSpotId","isOrientationSupported","isOrientationActive","__WEBPACK_IMPORTED_MODULE_0__elements_Pannellum__","__WEBPACK_IMPORTED_MODULE_1__elements_PannellumVideo__","audioTsToVideoTs","videoTsToAudioTs","CoalesceStream","collectDtsInfo","calculateTrackBaseMediaDecodeTime","clearDtsInfo","ONE_SECOND_IN_TS","Renderer","program","gl","vs","fs","fallbackImgSize","world","vtmps","pose","imageType","texCoordBuffer","cubeVertBuf","cubeVertTexCoordBuf","cubeVertIndBuf","globalParams","multiresNodeSort","multiresNodeRenderSort","MultiresNode","vertices","side","testMultiresNode","rotPersp","check1","checkInView","check2","check3","check4","testX","testY","checkSquareInView","theta","acos","inCurrent","nodeCache","nodeCacheTimestamp","currentNodes","cubeSize","maxLevel","numTiles","invTileResolution","doubleTileSize","tileResolution","lastTileSize","ntmp","f1","f2","f3","i1","i2","i3","fullpath","rotateMatrix","transposeMatrix4","_image","_imageType","_dynamic","voffset","detachShader","deleteShader","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","texture","deleteTexture","deleteProgram","cubeImgWidth","faceMissing","fillMissingFaces","imgSize","nbytes","imageArray","Uint8ClampedArray","rgb","backgroundSquare","ImageData","getContext","getError","handleWebGLError1286","appVersion","fallbackPath","sides","faceCanvas","faceContext","drawImage","imgData","getImageData","putImageData","incLoaded","faceImg","encodeURI","extension","getParameter","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","glBindType","TEXTURE_2D","viewport","drawingBufferWidth","drawingBufferHeight","createShader","VERTEX_SHADER","vertexSrc","vMulti","shaderSource","compileShader","FRAGMENT_SHADER","fragmentSrc","fragEquirectangular","TEXTURE_CUBE_MAP","fragCube","fragMulti","createProgram","attachShader","linkProgram","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","drawInProgress","clearColor","COLOR_BUFFER_BIT","texCoordLocation","getAttribLocation","enableVertexAttribArray","createBuffer","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","getUniformLocation","uniform1f","vo","rot","uniform4fv","createTexture","bindTexture","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","RGB","UNSIGNED_BYTE","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","vertPosLocation","perspUniform","cubeUniform","getExtension","loseContext","pixelRatio","devicePixelRatio","orig_pitch","orig_yaw","roll_adj","drawArrays","TRIANGLES","perspMatrix","aspect","znear","zfar","fovy","makePersp","newLevel","checkZoom","uniformMatrix4fv","removed","pendingTextureRequests","textureLoad","processNextTile","textureLoaded","drawElements","UNSIGNED_SHORT","multiresDraw","toDataURL","transforms","faces","face","loadTexture","cacheTop","textureImageCache","TextureImageLoader","loadFn","tex","til","releaseTextureImageLoader","_crossOrigin","vpp","applyRotPerspToVec","winX","winY","winZ","fragEquiCubeBase","imagetype","fetch","support","searchParams","iterable","formData","arrayBuffer","viewClasses","isDataView","isArrayBufferView","Headers","normalizeName","normalizeValue","oldValue","iteratorFor","Request","_bodyInit","Body","Response","statusText","redirectStatuses","redirect","rawHeaders","responseURL","credentials","polyfill","consumed","bodyUsed","fileReaderReady","readBlobAsArrayBuffer","readAsArrayBuffer","bufferClone","buf","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","chars","readArrayBufferAsText","upcased","referrer","bodyInit","ok","clean","asap","LAST_ERROR","IS_ERROR","_38","doResolve","handle","deferred","onFulfilled","tryCallOne","handleResolved","newValue","getThen","finale","Handler","tryCallTwo","safeThen","_extends","LineStream","nextNewline","parseAttributes","ParseStream","customParsers","tagType","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","dateTimeString","IV","PRECISE","addParser","expression","customType","dataParser","lineStream","uris","currentUri","currentMap","defaultMediaGroups","allowCache","entry","rendition","allow-cache","endlist","inf","METHOD","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","CHARACTERISTICS","FORCED","program-date-time","targetduration","totalduration","timeOffset","cue-out","cue-out-cont","cue-in","cueIn","comment","custom","fnToStr","constructorRegex","isES6ClassFn","fnStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","parseUTCTiming","__WEBPACK_IMPORTED_MODULE_0_url_toolkit__","__WEBPACK_IMPORTED_MODULE_0_url_toolkit___default","__WEBPACK_IMPORTED_MODULE_1_global_window__","__WEBPACK_IMPORTED_MODULE_1_global_window___default","formatVideoPlaylist","_ref3","_attributes3","periodIndex","merge","objects","baseUrl","relativeUrl","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","startRange","endRange","getLiveRValue","NOW","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","sourceDuration","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","segmentTime","nextS","flatten","lists","segmentRange","static","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","identifier","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","Time","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentTimeInfo","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","template","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","schemeIdUri","psshNode","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options$manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoPlaylists","_ref4","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","_attributes","formatAudioPlaylist","subs","_attributes2","organizeVttPlaylists","toM3u8","UTCTimingNode","parseUTCTimingScheme","forceUpdate","__self","__source","keyPrefix","=",":","toArray","only","createContext","_currentValue2","Provider","Consumer","unstable_read","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","cloneElement","createFactory","isValidElement"],"mappings":"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","file":"demo.596a5776.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/mp4-inspector.js\n// module id = +5d+\n// module chunks = 0","import React, { Component } from 'react';\nimport { Pannellum, PannellumVideo }  from '../../../src';\nimport myVideo from \"../images/jfk.mp4\";\nimport myVideo2 from \"../images/video.mp4\";\n\nexport default class componentName extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      mediaVideo : myVideo2,\n      scene: 1\n    };\n    this.ref = React.createRef();\n  }\n    \n  componentDidMount (){\n    console.log(this.ref.current);\n  }\n    \n  hanldeClick = (path)=>{\n    console.log(path); \n    this.setState({\n      mediaVideo : myVideo,\n      title: \"ooops\", \n      scene: 2\n    });\n  };\n\n  hanldeClickCheck = (path)=>{\n    console.log(path);\n    this.setState({\n      mediaVideo : myVideo2,\n      title: \"oo\",\n      scene: 1\n    });\n  };\n\n  \n  render() {\n    return (\n      <div className=\"video_main\">\n        <h2 className=\"section_title\">Video Component</h2>\n        <button\n          onClick={()=> {\n            this.ref.current.video.pause();\n          }}\n        >stop</button>\n        <button\n          onClick={()=> {\n            this.ref.current.video.play();\n          }}\n        >play</button>\n        <div className=\"pannellum_div\" >\n          {this.state.scene === 1 \n            ?\n            ( \n              <PannellumVideo\n                ref={this.ref}\n                video={this.state.mediaVideo}\n                loop\n                autoplay\n                width=\"800px\"\n                height=\"400px\"\n                pitch={10}\n                yaw={180}\n                hfov={120}\n                minHfov={50}\n                maxHfov={150}\n                hotSpotDebug\n                mouseZoom={false}\n                controls\n              >\n                <Pannellum.Hotspot \n                  type=\"custom\"\n                  pitch={31}\n                  yaw={150}\n                  handleClick={(evt , args) => this.hanldeClick(args.name)}\n                  handleClickArg={{ name : \"video2\" }}\n                />\n\n                <Pannellum.Hotspot\n                  type=\"info\"\n                  pitch={31}\n                  yaw={-57}\n                  text=\"Info dfsdfs\"\n                  URL=\"https://github.com/farminf\"\n                />\n\n              </PannellumVideo>\n            )\n            :\n            (\n              <PannellumVideo\n                video={this.state.mediaVideo}\n                loop\n                autoplay\n                width=\"600px\"\n                height=\"400px\"\n                pitch={10}\n                yaw={180}\n                hfov={110}\n                minHfov={90}\n                maxHfov={120}\n                hotSpotDebug\n                mouseZoom={false}\n              >\n                <Pannellum.Hotspot \n                  type=\"custom\"\n                  pitch={10}\n                  yaw={120}\n                  handleClick={(evt , args) => this.hanldeClickCheck(args.name)}\n                  handleClickArg={{ name : \"video1\" }}\n                />\n                <Pannellum.Hotspot\n                  type=\"info\"\n                  pitch={40}\n                  yaw={160}\n                  text=\"Info Hotspot Text 4\"\n                  URL=\"https://github.com/farminf\"\n                />\n              </PannellumVideo>\n            )}\n          <div className=\"codebox\">\n            <pre>\n              <code data-language=\"xml\">\n                {`\n  <PannellumVideo\n      video={this.state.mediaVideo}\n      loop\n      autoplay\n      width=\"800px\"\n      height=\"400px\"\n      pitch={10}\n      yaw={180}\n      hfov={120}\n      minHfov={50}\n      maxHfov={150}\n      hotSpotDebug\n      mouseZoom={false}\n  >\n      <Pannellum.Hotspot \n      type=\"custom\"\n      pitch={31}\n      yaw={150}\n      handleClick={(evt , args) => this.hanldeClick(args.name)}\n      handleClickArg={{ name : \"video2\" }}\n      />\n\n      <Pannellum.Hotspot\n      type=\"info\"\n      pitch={31}\n      yaw={-57}\n      text=\"Info dfsdfs\"\n      URL=\"https://github.com/farminf\"\n      />\n\n  </PannellumVideo>\n              `}</code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/VideoDemo.js","// Ensure polyfill compatibility between create-react-app and zero-config nwb apps.\n// This is from https://github.com/facebookincubator/create-react-app/blob/master/config/polyfills.js\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behaviour.\n  require('promise/lib/rejection-tracking').enable()\n  window.Promise = require('promise/lib/es6-extensions.js')\n}\n\n// fetch() polyfill for making API calls\nrequire('whatwg-fetch')\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign')\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/nwb/polyfills.js\n// module id = +prg\n// module chunks = 0","/** @license React v16.5.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),n=require(\"object-assign\"),ba=require(\"schedule\");function ca(a,b,c,d,e,f,g,h){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[c,d,e,f,g,h],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction t(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);ca(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}aa?void 0:t(\"227\");function da(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}\nvar ea=!1,fa=null,ha=!1,ia=null,ja={onError:function(a){ea=!0;fa=a}};function ka(a,b,c,d,e,f,g,h,k){ea=!1;fa=null;da.apply(ja,arguments)}function la(a,b,c,d,e,f,g,h,k){ka.apply(this,arguments);if(ea){if(ea){var l=fa;ea=!1;fa=null}else t(\"198\"),l=void 0;ha||(ha=!0,ia=l)}}var ma=null,na={};\nfunction oa(){if(ma)for(var a in na){var b=na[a],c=ma.indexOf(a);-1<c?void 0:t(\"96\",a);if(!pa[c]){b.extractEvents?void 0:t(\"97\",a);pa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;qa.hasOwnProperty(h)?t(\"99\",h):void 0;qa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&ra(k[e],g,h);e=!0}else f.registrationName?(ra(f.registrationName,g,h),e=!0):e=!1;e?void 0:t(\"98\",d,a)}}}}\nfunction ra(a,b,c){sa[a]?t(\"100\",a):void 0;sa[a]=b;ta[a]=b.eventTypes[c].dependencies}var pa=[],qa={},sa={},ta={},ua=null,va=null,wa=null;function xa(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=wa(d);la(b,c,void 0,a);a.currentTarget=null}function ya(a,b){null==b?t(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}\nfunction za(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Aa=null;function Ba(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)xa(a,b,c[e],d[e]);else c&&xa(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ca(a){return Ba(a,!0)}function Da(a){return Ba(a,!1)}\nvar Ea={injectEventPluginOrder:function(a){ma?t(\"101\"):void 0;ma=Array.prototype.slice.call(a);oa()},injectEventPluginsByName:function(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];na.hasOwnProperty(c)&&na[c]===d||(na[c]?t(\"102\",c):void 0,na[c]=d,b=!0)}b&&oa()}};\nfunction Fa(a,b){var c=a.stateNode;if(!c)return null;var d=ua(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?t(\"231\",b,typeof c):void 0;\nreturn c}function Ga(a,b){null!==a&&(Aa=ya(Aa,a));a=Aa;Aa=null;if(a&&(b?za(a,Ca):za(a,Da),Aa?t(\"95\"):void 0,ha))throw b=ia,ha=!1,ia=null,b;}var Ha=Math.random().toString(36).slice(2),Ia=\"__reactInternalInstance$\"+Ha,Ja=\"__reactEventHandlers$\"+Ha;function Ka(a){if(a[Ia])return a[Ia];for(;!a[Ia];)if(a.parentNode)a=a.parentNode;else return null;a=a[Ia];return 7===a.tag||8===a.tag?a:null}function La(a){a=a[Ia];return!a||7!==a.tag&&8!==a.tag?null:a}\nfunction Ma(a){if(7===a.tag||8===a.tag)return a.stateNode;t(\"33\")}function Na(a){return a[Ja]||null}function Oa(a){do a=a.return;while(a&&7!==a.tag);return a?a:null}function Pa(a,b,c){if(b=Fa(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a)}\nfunction Qa(a){if(a&&a.dispatchConfig.phasedRegistrationNames){for(var b=a._targetInst,c=[];b;)c.push(b),b=Oa(b);for(b=c.length;0<b--;)Pa(c[b],\"captured\",a);for(b=0;b<c.length;b++)Pa(c[b],\"bubbled\",a)}}function Ra(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Fa(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=ya(c._dispatchListeners,b),c._dispatchInstances=ya(c._dispatchInstances,a))}function Ta(a){a&&a.dispatchConfig.registrationName&&Ra(a._targetInst,null,a)}\nfunction Ua(a){za(a,Qa)}var Va=!(\"undefined\"===typeof window||!window.document||!window.document.createElement);function Wa(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ya={animationend:Wa(\"Animation\",\"AnimationEnd\"),animationiteration:Wa(\"Animation\",\"AnimationIteration\"),animationstart:Wa(\"Animation\",\"AnimationStart\"),transitionend:Wa(\"Transition\",\"TransitionEnd\")},Za={},$a={};\nVa&&($a=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ya.animationend.animation,delete Ya.animationiteration.animation,delete Ya.animationstart.animation),\"TransitionEvent\"in window||delete Ya.transitionend.transition);function ab(a){if(Za[a])return Za[a];if(!Ya[a])return a;var b=Ya[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in $a)return Za[a]=b[c];return a}\nvar bb=ab(\"animationend\"),cb=ab(\"animationiteration\"),db=ab(\"animationstart\"),eb=ab(\"transitionend\"),fb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),gb=null,hb=null,ib=null;\nfunction jb(){if(ib)return ib;var a,b=hb,c=b.length,d,e=\"value\"in gb?gb.value:gb.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return ib=e.slice(a,1<d?1-d:void 0)}function kb(){return!0}function lb(){return!1}\nfunction z(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?kb:lb;this.isPropagationStopped=lb;return this}\nn(z.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=kb)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=kb)},persist:function(){this.isPersistent=kb},isPersistent:lb,destructor:function(){var a=this.constructor.Interface,\nb;for(b in a)this[b]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null;this.isPropagationStopped=this.isDefaultPrevented=lb;this._dispatchInstances=this._dispatchListeners=null}});z.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nz.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;n(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=n({},d.Interface,a);c.extend=d.extend;mb(c);return c};mb(z);function nb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function ob(a){a instanceof this?void 0:t(\"279\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}\nfunction mb(a){a.eventPool=[];a.getPooled=nb;a.release=ob}var pb=z.extend({data:null}),qb=z.extend({data:null}),rb=[9,13,27,32],sb=Va&&\"CompositionEvent\"in window,tb=null;Va&&\"documentMode\"in document&&(tb=document.documentMode);\nvar ub=Va&&\"TextEvent\"in window&&!tb,vb=Va&&(!sb||tb&&8<tb&&11>=tb),wb=String.fromCharCode(32),xb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},yb=!1;\nfunction zb(a,b){switch(a){case \"keyup\":return-1!==rb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Ab(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Bb=!1;function Cb(a,b){switch(a){case \"compositionend\":return Ab(b);case \"keypress\":if(32!==b.which)return null;yb=!0;return wb;case \"textInput\":return a=b.data,a===wb&&yb?null:a;default:return null}}\nfunction Db(a,b){if(Bb)return\"compositionend\"===a||!sb&&zb(a,b)?(a=jb(),ib=hb=gb=null,Bb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return vb&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar Eb={eventTypes:xb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(sb)b:{switch(a){case \"compositionstart\":e=xb.compositionStart;break b;case \"compositionend\":e=xb.compositionEnd;break b;case \"compositionupdate\":e=xb.compositionUpdate;break b}e=void 0}else Bb?zb(a,c)&&(e=xb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=xb.compositionStart);e?(vb&&\"ko\"!==c.locale&&(Bb||e!==xb.compositionStart?e===xb.compositionEnd&&Bb&&(f=jb()):(gb=d,hb=\"value\"in gb?gb.value:gb.textContent,Bb=\n!0)),e=pb.getPooled(e,b,c,d),f?e.data=f:(f=Ab(c),null!==f&&(e.data=f)),Ua(e),f=e):f=null;(a=ub?Cb(a,c):Db(a,c))?(b=qb.getPooled(xb.beforeInput,b,c,d),b.data=a,Ua(b)):b=null;return null===f?b:null===b?f:[f,b]}},Fb=null,Gb=null,Hb=null;function Ib(a){if(a=va(a)){\"function\"!==typeof Fb?t(\"280\"):void 0;var b=ua(a.stateNode);Fb(a.stateNode,a.type,b)}}function Jb(a){Gb?Hb?Hb.push(a):Hb=[a]:Gb=a}function Kb(){if(Gb){var a=Gb,b=Hb;Hb=Gb=null;Ib(a);if(b)for(a=0;a<b.length;a++)Ib(b[a])}}\nfunction Lb(a,b){return a(b)}function Mb(a,b,c){return a(b,c)}function Nb(){}var Ob=!1;function Pb(a,b){if(Ob)return a(b);Ob=!0;try{return Lb(a,b)}finally{if(Ob=!1,null!==Gb||null!==Hb)Nb(),Kb()}}var Qb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Rb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Qb[a.type]:\"textarea\"===b?!0:!1}\nfunction Sb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}function Tb(a){if(!Va)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function Ub(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Vb(a){var b=Ub(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Wb(a){a._valueTracker||(a._valueTracker=Vb(a))}function Xb(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ub(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar Yb=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Zb=/^(.*)[\\\\\\/]/,C=\"function\"===typeof Symbol&&Symbol.for,$b=C?Symbol.for(\"react.element\"):60103,ac=C?Symbol.for(\"react.portal\"):60106,bc=C?Symbol.for(\"react.fragment\"):60107,cc=C?Symbol.for(\"react.strict_mode\"):60108,dc=C?Symbol.for(\"react.profiler\"):60114,ec=C?Symbol.for(\"react.provider\"):60109,fc=C?Symbol.for(\"react.context\"):60110,gc=C?Symbol.for(\"react.async_mode\"):60111,hc=C?Symbol.for(\"react.forward_ref\"):60112,ic=C?Symbol.for(\"react.placeholder\"):\n60113,jc=\"function\"===typeof Symbol&&Symbol.iterator;function kc(a){if(null===a||\"object\"!==typeof a)return null;a=jc&&a[jc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction lc(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case gc:return\"AsyncMode\";case bc:return\"Fragment\";case ac:return\"Portal\";case dc:return\"Profiler\";case cc:return\"StrictMode\";case ic:return\"Placeholder\"}if(\"object\"===typeof a){switch(a.$$typeof){case fc:return\"Context.Consumer\";case ec:return\"Context.Provider\";case hc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\n\"ForwardRef\")}if(\"function\"===typeof a.then&&(a=1===a._reactStatus?a._reactResult:null))return lc(a)}return null}function mc(a){var b=\"\";do{a:switch(a.tag){case 4:case 0:case 1:case 2:case 3:case 7:case 10:var c=a._debugOwner,d=a._debugSource,e=lc(a.type);var f=null;c&&(f=lc(c.type));c=e;e=\"\";d?e=\" (at \"+d.fileName.replace(Zb,\"\")+\":\"+d.lineNumber+\")\":f&&(e=\" (created by \"+f+\")\");f=\"\\n    in \"+(c||\"Unknown\")+e;break a;default:f=\"\"}b+=f;a=a.return}while(a);return b}\nvar nc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,pc=Object.prototype.hasOwnProperty,qc={},rc={};\nfunction sc(a){if(pc.call(rc,a))return!0;if(pc.call(qc,a))return!1;if(nc.test(a))return rc[a]=!0;qc[a]=!0;return!1}function tc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction uc(a,b,c,d){if(null===b||\"undefined\"===typeof b||tc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function D(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var E={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){E[a]=new D(a,0,!1,a,null)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];E[b]=new D(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){E[a]=new D(a,2,!1,a.toLowerCase(),null)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){E[a]=new D(a,2,!1,a,null)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){E[a]=new D(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){E[a]=new D(a,3,!0,a,null)});\n[\"capture\",\"download\"].forEach(function(a){E[a]=new D(a,4,!1,a,null)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){E[a]=new D(a,6,!1,a,null)});[\"rowSpan\",\"start\"].forEach(function(a){E[a]=new D(a,5,!1,a.toLowerCase(),null)});var vc=/[\\-:]([a-z])/g;function wc(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(vc,\nwc);E[b]=new D(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(vc,wc);E[b]=new D(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});E.tabIndex=new D(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction xc(a,b,c,d){var e=E.hasOwnProperty(b)?E[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(uc(b,c,e,d)&&(c=null),d||null===e?sc(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction yc(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function zc(a,b){var c=b.checked;return n({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}\nfunction Bc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=yc(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Cc(a,b){b=b.checked;null!=b&&xc(a,\"checked\",b,!1)}\nfunction Dc(a,b){Cc(a,b);var c=yc(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Ec(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Ec(a,b.type,yc(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Fc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction Ec(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var Gc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Hc(a,b,c){a=z.getPooled(Gc.change,a,b,c);a.type=\"change\";Jb(c);Ua(a);return a}var Ic=null,Jc=null;function Kc(a){Ga(a,!1)}\nfunction Lc(a){var b=Ma(a);if(Xb(b))return a}function Mc(a,b){if(\"change\"===a)return b}var Nc=!1;Va&&(Nc=Tb(\"input\")&&(!document.documentMode||9<document.documentMode));function Oc(){Ic&&(Ic.detachEvent(\"onpropertychange\",Pc),Jc=Ic=null)}function Pc(a){\"value\"===a.propertyName&&Lc(Jc)&&(a=Hc(Jc,a,Sb(a)),Pb(Kc,a))}function Qc(a,b,c){\"focus\"===a?(Oc(),Ic=b,Jc=c,Ic.attachEvent(\"onpropertychange\",Pc)):\"blur\"===a&&Oc()}function Rc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Lc(Jc)}\nfunction Sc(a,b){if(\"click\"===a)return Lc(b)}function Tc(a,b){if(\"input\"===a||\"change\"===a)return Lc(b)}\nvar Uc={eventTypes:Gc,_isInputEventSupported:Nc,extractEvents:function(a,b,c,d){var e=b?Ma(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Mc:Rb(e)?Nc?f=Tc:(f=Rc,g=Qc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Sc);if(f&&(f=f(a,b)))return Hc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Ec(e,\"number\",e.value)}},Vc=z.extend({view:null,detail:null}),Wc={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Xc(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Wc[a])?!!b[a]:!1}function Yc(){return Xc}\nvar Zc=0,$c=0,ad=!1,bd=!1,cd=Vc.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Yc,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)},movementX:function(a){if(\"movementX\"in a)return a.movementX;var b=Zc;Zc=a.screenX;return ad?\"mousemove\"===a.type?a.screenX-b:0:(ad=!0,0)},movementY:function(a){if(\"movementY\"in a)return a.movementY;\nvar b=$c;$c=a.screenY;return bd?\"mousemove\"===a.type?a.screenY-b:0:(bd=!0,0)}}),dd=cd.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),ed={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",\ndependencies:[\"pointerout\",\"pointerover\"]}},fd={eventTypes:ed,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Ka(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,l=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=cd,h=ed.mouseLeave,k=ed.mouseEnter,l=\"mouse\";\nelse if(\"pointerout\"===a||\"pointerover\"===a)g=dd,h=ed.pointerLeave,k=ed.pointerEnter,l=\"pointer\";var m=null==f?e:Ma(f);e=null==b?e:Ma(b);a=g.getPooled(h,f,c,d);a.type=l+\"leave\";a.target=m;a.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=l+\"enter\";c.target=e;c.relatedTarget=m;d=b;if(f&&d)a:{b=f;e=d;l=0;for(g=b;g;g=Oa(g))l++;g=0;for(k=e;k;k=Oa(k))g++;for(;0<l-g;)b=Oa(b),l--;for(;0<g-l;)e=Oa(e),g--;for(;l--;){if(b===e||b===e.alternate)break a;b=Oa(b);e=Oa(e)}b=null}else b=null;e=b;for(b=[];f&&f!==e;){l=\nf.alternate;if(null!==l&&l===e)break;b.push(f);f=Oa(f)}for(f=[];d&&d!==e;){l=d.alternate;if(null!==l&&l===e)break;f.push(d);d=Oa(d)}for(d=0;d<b.length;d++)Ra(b[d],\"bubbled\",a);for(d=f.length;0<d--;)Ra(f[d],\"captured\",c);return[a,c]}},gd=Object.prototype.hasOwnProperty;function hd(a,b){return a===b?0!==a||0!==b||1/a===1/b:a!==a&&b!==b}\nfunction id(a,b){if(hd(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!gd.call(b,c[d])||!hd(a[c[d]],b[c[d]]))return!1;return!0}function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 5===b.tag?2:3}function kd(a){2!==jd(a)?t(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?t(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}t(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:t(\"189\")}}c.alternate!==d?t(\"190\"):void 0}5!==c.tag?t(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(7===b.tag||8===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nvar nd=z.extend({animationName:null,elapsedTime:null,pseudoElement:null}),od=z.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),pd=Vc.extend({relatedTarget:null});function qd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar rd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},sd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},td=Vc.extend({key:function(a){if(a.key){var b=rd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=qd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?sd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Yc,charCode:function(a){return\"keypress\"===\na.type?qd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?qd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),ud=cd.extend({dataTransfer:null}),vd=Vc.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Yc}),wd=z.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),xd=cd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),yd=[[\"abort\",\"abort\"],[bb,\"animationEnd\"],[cb,\"animationIteration\"],[db,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[eb,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],zd={},Ad={};function Bd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};zd[a]=b;Ad[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"auxclick\",\"auxClick\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],\n[\"pointerdown\",\"pointerDown\"],[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Bd(a,!0)});yd.forEach(function(a){Bd(a,!1)});\nvar Cd={eventTypes:zd,isInteractiveTopLevelEventType:function(a){a=Ad[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Ad[a];if(!e)return null;switch(a){case \"keypress\":if(0===qd(c))return null;case \"keydown\":case \"keyup\":a=td;break;case \"blur\":case \"focus\":a=pd;break;case \"click\":if(2===c.button)return null;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=cd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nud;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=vd;break;case bb:case cb:case db:a=nd;break;case eb:a=wd;break;case \"scroll\":a=Vc;break;case \"wheel\":a=xd;break;case \"copy\":case \"cut\":case \"paste\":a=od;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=dd;break;default:a=z}b=a.getPooled(e,b,c,d);Ua(b);return b}},Dd=Cd.isInteractiveTopLevelEventType,\nEd=[];function Fd(a){var b=a.targetInst,c=b;do{if(!c){a.ancestors.push(c);break}var d;for(d=c;d.return;)d=d.return;d=5!==d.tag?null:d.stateNode.containerInfo;if(!d)break;a.ancestors.push(c);c=Ka(d)}while(c);for(c=0;c<a.ancestors.length;c++){b=a.ancestors[c];var e=Sb(a.nativeEvent);d=a.topLevelType;for(var f=a.nativeEvent,g=null,h=0;h<pa.length;h++){var k=pa[h];k&&(k=k.extractEvents(d,b,f,e))&&(g=ya(g,k))}Ga(g,!1)}}var Gd=!0;\nfunction F(a,b){if(!b)return null;var c=(Dd(a)?Hd:Id).bind(null,a);b.addEventListener(a,c,!1)}function Jd(a,b){if(!b)return null;var c=(Dd(a)?Hd:Id).bind(null,a);b.addEventListener(a,c,!0)}function Hd(a,b){Mb(Id,a,b)}\nfunction Id(a,b){if(Gd){var c=Sb(b);c=Ka(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Ed.length){var d=Ed.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Pb(Fd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Ed.length&&Ed.push(a)}}}var Kd={},Ld=0,Md=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);\nfunction Nd(a){Object.prototype.hasOwnProperty.call(a,Md)||(a[Md]=Ld++,Kd[a[Md]]={});return Kd[a[Md]]}function Od(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}function Qd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Rd(a,b){var c=Qd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Qd(c)}}function Sd(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Sd(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Td(){for(var a=window,b=Od();b instanceof a.HTMLIFrameElement;){try{a=b.contentDocument.defaultView}catch(c){break}b=Od(a.document)}return b}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=Va&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){var c=b.window===b?b.document:9===b.nodeType?b:b.ownerDocument;if($d||null==Xd||Xd!==Od(c))return null;c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:(c=(c.ownerDocument&&c.ownerDocument.defaultView||window).getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset});return Zd&&id(Zd,c)?null:(Zd=c,a=z.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ua(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Nd(e);f=ta.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Ma(b):window;switch(a){case \"focus\":if(Rb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ea.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));ua=Na;va=La;wa=Ma;Ea.injectEventPluginsByName({SimpleEventPlugin:Cd,EnterLeaveEventPlugin:fd,ChangeEventPlugin:Uc,SelectEventPlugin:be,BeforeInputEventPlugin:Eb});function ce(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction de(a,b){a=n({children:void 0},b);if(b=ce(b.children))a.children=b;return a}function ee(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+yc(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction fe(a,b){null!=b.dangerouslySetInnerHTML?t(\"91\"):void 0;return n({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function ge(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?t(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:t(\"93\"),b=b[0]),c=b),null==c&&(c=\"\"));a._wrapperState={initialValue:yc(c)}}\nfunction he(a,b){var c=yc(b.value),d=yc(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ie(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var je={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction ke(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function le(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?ke(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar me=void 0,ne=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==je.svg||\"innerHTML\"in a)a.innerHTML=b;else{me=me||document.createElement(\"div\");me.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=me.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction oe(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pe={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qe=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pe).forEach(function(a){qe.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pe[b]=pe[a]})});\nfunction re(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||pe.hasOwnProperty(e)&&pe[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var se=n({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction te(a,b){b&&(se[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?t(\"137\",a,\"\"):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?t(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:t(\"61\")),null!=b.style&&\"object\"!==typeof b.style?t(\"62\",\"\"):void 0)}\nfunction ue(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}\nfunction ve(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Nd(a);b=ta[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Jd(\"scroll\",a);break;case \"focus\":case \"blur\":Jd(\"focus\",a);Jd(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":Tb(e)&&Jd(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===fb.indexOf(e)&&F(e,a)}c[e]=!0}}}function we(){}var xe=null,ye=null;\nfunction ze(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function Ae(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}function Be(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}\nfunction Ce(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var De=[],Ee=-1;function G(a){0>Ee||(a.current=De[Ee],De[Ee]=null,Ee--)}function H(a,b){Ee++;De[Ee]=a.current;a.current=b}var Fe={},I={current:Fe},J={current:!1},Ge=Fe;\nfunction He(a,b){var c=a.type.contextTypes;if(!c)return Fe;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function K(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Ie(a){G(J,a);G(I,a)}function Je(a){G(J,a);G(I,a)}\nfunction Ke(a,b,c){I.current!==Fe?t(\"168\"):void 0;H(I,b,a);H(J,c,a)}function Le(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)e in a?void 0:t(\"108\",lc(b)||\"Unknown\",e);return n({},c,d)}function Me(a){var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||Fe;Ge=I.current;H(I,b,a);H(J,J.current,a);return!0}\nfunction Ne(a,b,c){var d=a.stateNode;d?void 0:t(\"169\");c?(b=Le(a,b,Ge),d.__reactInternalMemoizedMergedChildContext=b,G(J,a),G(I,a),H(I,b,a)):G(J,a);H(J,c,a)}var Oe=null,Pe=null;function Qe(a){return function(b){try{return a(b)}catch(c){}}}\nfunction Re(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Oe=Qe(function(a){return b.onCommitFiberRoot(c,a)});Pe=Qe(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}\nfunction Se(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.firstContextDependency=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childExpirationTime=this.expirationTime=0;this.alternate=null}function Te(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Ue(a,b,c){var d=a.alternate;null===d?(d=new Se(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.childExpirationTime=a.childExpirationTime;d.expirationTime=b!==a.pendingProps?c:a.expirationTime;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.firstContextDependency=a.firstContextDependency;d.sibling=a.sibling;\nd.index=a.index;d.ref=a.ref;return d}\nfunction Ve(a,b,c){var d=a.type,e=a.key;a=a.props;var f=void 0;if(\"function\"===typeof d)f=Te(d)?2:4;else if(\"string\"===typeof d)f=7;else a:switch(d){case bc:return We(a.children,b,c,e);case gc:f=10;b|=3;break;case cc:f=10;b|=2;break;case dc:return d=new Se(15,a,e,b|4),d.type=dc,d.expirationTime=c,d;case ic:f=16;break;default:if(\"object\"===typeof d&&null!==d)switch(d.$$typeof){case ec:f=12;break a;case fc:f=11;break a;case hc:f=13;break a;default:if(\"function\"===typeof d.then){f=4;break a}}t(\"130\",\nnull==d?d:typeof d,\"\")}b=new Se(f,a,e,b);b.type=d;b.expirationTime=c;return b}function We(a,b,c,d){a=new Se(9,a,d,b);a.expirationTime=c;return a}function Xe(a,b,c){a=new Se(8,a,null,b);a.expirationTime=c;return a}function Ye(a,b,c){b=new Se(6,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ze(a,b){a.didError=!1;var c=a.earliestPendingTime;0===c?a.earliestPendingTime=a.latestPendingTime=b:c>b?a.earliestPendingTime=b:a.latestPendingTime<b&&(a.latestPendingTime=b);$e(b,a)}function $e(a,b){var c=b.earliestSuspendedTime,d=b.latestSuspendedTime,e=b.earliestPendingTime,f=b.latestPingedTime;e=0!==e?e:f;0===e&&(0===a||d>a)&&(e=d);a=e;0!==a&&0!==c&&c<a&&(a=c);b.nextExpirationTimeToWorkOn=e;b.expirationTime=a}var af=!1;\nfunction bf(a){return{baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function cf(a){return{baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction df(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function ef(a,b){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b)}\nfunction ff(a,b){var c=a.alternate;if(null===c){var d=a.updateQueue;var e=null;null===d&&(d=a.updateQueue=bf(a.memoizedState))}else d=a.updateQueue,e=c.updateQueue,null===d?null===e?(d=a.updateQueue=bf(a.memoizedState),e=c.updateQueue=bf(c.memoizedState)):d=a.updateQueue=cf(e):null===e&&(e=c.updateQueue=cf(d));null===e||d===e?ef(d,b):null===d.lastUpdate||null===e.lastUpdate?(ef(d,b),ef(e,b)):(ef(d,b),e.lastUpdate=b)}\nfunction gf(a,b){var c=a.updateQueue;c=null===c?a.updateQueue=bf(a.memoizedState):hf(a,c);null===c.lastCapturedUpdate?c.firstCapturedUpdate=c.lastCapturedUpdate=b:(c.lastCapturedUpdate.next=b,c.lastCapturedUpdate=b)}function hf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=cf(b));return b}\nfunction jf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return n({},d,e);case 2:af=!0}return d}\nfunction kf(a,b,c,d,e){af=!1;b=hf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,l=f;null!==k;){var m=k.expirationTime;if(m>e){if(null===g&&(g=k,f=l),0===h||h>m)h=m}else l=jf(a,b,k,l,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}m=null;for(k=b.firstCapturedUpdate;null!==k;){var r=k.expirationTime;if(r>e){if(null===m&&(m=k,null===g&&(f=l)),0===h||h>r)h=r}else l=jf(a,b,k,l,c,d),\nnull!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===m?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===m&&(f=l);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=m;a.expirationTime=h;a.memoizedState=l}\nfunction lf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);mf(b.firstEffect,c);b.firstEffect=b.lastEffect=null;mf(b.firstCapturedEffect,c);b.firstCapturedEffect=b.lastCapturedEffect=null}function mf(a,b){for(;null!==a;){var c=a.callback;if(null!==c){a.callback=null;var d=b;\"function\"!==typeof c?t(\"191\",c):void 0;c.call(d)}a=a.nextEffect}}\nfunction nf(a,b){return{value:a,source:b,stack:mc(b)}}var of={current:null},pf=null,qf=null,rf=null;function sf(a,b){var c=a.type._context;H(of,c._currentValue,a);c._currentValue=b}function tf(a){var b=of.current;G(of,a);a.type._context._currentValue=b}function uf(a){pf=a;rf=qf=null;a.firstContextDependency=null}\nfunction vf(a,b){if(rf!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)rf=a,b=1073741823;b={context:a,observedBits:b,next:null};null===qf?(null===pf?t(\"277\"):void 0,pf.firstContextDependency=qf=b):qf=qf.next=b}return a._currentValue}var wf={},L={current:wf},xf={current:wf},yf={current:wf};function zf(a){a===wf?t(\"174\"):void 0;return a}\nfunction Af(a,b){H(yf,b,a);H(xf,a,a);H(L,wf,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:le(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=le(b,c)}G(L,a);H(L,b,a)}function Bf(a){G(L,a);G(xf,a);G(yf,a)}function Cf(a){zf(yf.current);var b=zf(L.current);var c=le(b,a.type);b!==c&&(H(xf,a,a),H(L,c,a))}function Df(a){xf.current===a&&(G(L,a),G(xf,a))}var Ef=(new aa.Component).refs;\nfunction Ff(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:n({},b,c);a.memoizedState=c;d=a.updateQueue;null!==d&&0===a.expirationTime&&(d.baseState=c)}\nvar Jf={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d=Hf(d,a);var e=df(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=Gf();d=Hf(d,a);var e=df(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);ff(a,e);If(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=Gf();c=Hf(c,a);var d=df(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);ff(a,d);If(a,c)}};function Kf(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!id(c,d)||!id(e,f):!0}function Lf(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Jf.enqueueReplaceState(b,b.state,null)}\nfunction Mf(a,b,c,d){var e=a.stateNode,f=K(b)?Ge:I.current;e.props=c;e.state=a.memoizedState;e.refs=Ef;e.context=He(a,f);f=a.updateQueue;null!==f&&(kf(a,f,c,e,d),e.state=a.memoizedState);f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Ff(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&\ne.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Jf.enqueueReplaceState(e,e.state,null),f=a.updateQueue,null!==f&&(kf(a,f,c,e,d),e.state=a.memoizedState));\"function\"===typeof e.componentDidMount&&(a.effectTag|=4)}var Nf=Array.isArray;\nfunction Of(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag&&3!==c.tag?t(\"110\"):void 0,d=c.stateNode);d?void 0:t(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Ef&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?t(\"284\"):void 0;c._owner?void 0:t(\"254\",a)}return a}\nfunction Pf(a,b){\"textarea\"!==a.type&&t(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction Qf(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=Ue(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||8!==b.tag)return b=Xe(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Of(a,b,c),d.return=a,d;d=Ve(c,a.mode,d);d.ref=Of(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||6!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nYe(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function m(a,b,c,d,f){if(null===b||9!==b.tag)return b=We(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function r(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Xe(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case $b:return c=Ve(b,a.mode,c),c.ref=Of(a,null,b),c.return=a,c;case ac:return b=Ye(b,a.mode,c),b.return=a,b}if(Nf(b)||kc(b))return b=We(b,a.mode,c,null),b.return=\na,b;Pf(a,b)}return null}function A(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case $b:return c.key===e?c.type===bc?m(a,b,c.props.children,d,e):k(a,b,c,d):null;case ac:return c.key===e?l(a,b,c,d):null}if(Nf(c)||kc(c))return null!==e?null:m(a,b,c,d,null);Pf(a,c)}return null}function S(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case $b:return a=a.get(null===d.key?c:d.key)||null,d.type===bc?m(b,a,d.props.children,e,d.key):k(b,a,d,e);case ac:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Nf(d)||kc(d))return a=a.get(c)||null,m(b,a,d,e,null);Pf(b,d)}return null}function B(e,g,h,k){for(var l=null,m=null,p=g,u=g=0,q=null;null!==p&&u<h.length;u++){p.index>u?(q=p,p=null):q=p.sibling;var v=A(e,p,h[u],k);if(null===v){null===p&&(p=q);break}a&&p&&null===v.alternate&&b(e,\np);g=f(v,g,u);null===m?l=v:m.sibling=v;m=v;p=q}if(u===h.length)return c(e,p),l;if(null===p){for(;u<h.length;u++)if(p=r(e,h[u],k))g=f(p,g,u),null===m?l=p:m.sibling=p,m=p;return l}for(p=d(e,p);u<h.length;u++)if(q=S(p,e,u,h[u],k))a&&null!==q.alternate&&p.delete(null===q.key?u:q.key),g=f(q,g,u),null===m?l=q:m.sibling=q,m=q;a&&p.forEach(function(a){return b(e,a)});return l}function P(e,g,h,k){var l=kc(h);\"function\"!==typeof l?t(\"150\"):void 0;h=l.call(h);null==h?t(\"151\"):void 0;for(var m=l=null,p=g,u=g=\n0,q=null,v=h.next();null!==p&&!v.done;u++,v=h.next()){p.index>u?(q=p,p=null):q=p.sibling;var x=A(e,p,v.value,k);if(null===x){p||(p=q);break}a&&p&&null===x.alternate&&b(e,p);g=f(x,g,u);null===m?l=x:m.sibling=x;m=x;p=q}if(v.done)return c(e,p),l;if(null===p){for(;!v.done;u++,v=h.next())v=r(e,v.value,k),null!==v&&(g=f(v,g,u),null===m?l=v:m.sibling=v,m=v);return l}for(p=d(e,p);!v.done;u++,v=h.next())v=S(p,e,u,v.value,k),null!==v&&(a&&null!==v.alternate&&p.delete(null===v.key?u:v.key),g=f(v,g,u),null===\nm?l=v:m.sibling=v,m=v);a&&p.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===bc&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case $b:a:{l=f.key;for(k=d;null!==k;){if(k.key===l)if(9===k.tag?f.type===bc:k.type===f.type){c(a,k.sibling);d=e(k,f.type===bc?f.props.children:f.props,h);d.ref=Of(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===bc?(d=We(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Ve(f,a.mode,h),h.ref=Of(a,d,f),h.return=a,a=h)}return g(a);case ac:a:{for(k=f.key;null!==d;){if(d.key===k)if(6===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Ye(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&8===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Xe(f,a.mode,h),d.return=a,a=d),g(a);if(Nf(f))return B(a,d,f,h);if(kc(f))return P(a,d,f,h);l&&Pf(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 3:case 0:h=a.type,t(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var Rf=Qf(!0),Sf=Qf(!1),Tf=null,Uf=null,Vf=!1;function Wf(a,b){var c=new Se(7,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Xf(a,b){switch(a.tag){case 7:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 8:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Yf(a){if(Vf){var b=Uf;if(b){var c=b;if(!Xf(a,b)){b=Be(c);if(!b||!Xf(a,b)){a.effectTag|=2;Vf=!1;Tf=a;return}Wf(Tf,c)}Tf=a;Uf=Ce(b)}else a.effectTag|=2,Vf=!1,Tf=a}}\nfunction Zf(a){for(a=a.return;null!==a&&7!==a.tag&&5!==a.tag;)a=a.return;Tf=a}function $f(a){if(a!==Tf)return!1;if(!Vf)return Zf(a),Vf=!0,!1;var b=a.type;if(7!==a.tag||\"head\"!==b&&\"body\"!==b&&!Ae(b,a.memoizedProps))for(b=Uf;b;)Wf(a,b),b=Be(b);Zf(a);Uf=Tf?Be(a.stateNode):null;return!0}function ag(){Uf=Tf=null;Vf=!1}\nfunction bg(a){switch(a._reactStatus){case 1:return a._reactResult;case 2:throw a._reactResult;case 0:throw a;default:throw a._reactStatus=0,a.then(function(b){if(0===a._reactStatus){a._reactStatus=1;if(\"object\"===typeof b&&null!==b){var c=b.default;b=void 0!==c&&null!==c?c:b}a._reactResult=b}},function(b){0===a._reactStatus&&(a._reactStatus=2,a._reactResult=b)}),a;}}var cg=Yb.ReactCurrentOwner;function M(a,b,c,d){b.child=null===a?Sf(b,null,c,d):Rf(b,a.child,c,d)}\nfunction dg(a,b,c,d,e){c=c.render;var f=b.ref;if(!J.current&&b.memoizedProps===d&&f===(null!==a?a.ref:null))return eg(a,b,e);c=c(d,f);M(a,b,c,e);b.memoizedProps=d;return b.child}function fg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function gg(a,b,c,d,e){var f=K(c)?Ge:I.current;f=He(b,f);uf(b,e);c=c(d,f);b.effectTag|=1;M(a,b,c,e);b.memoizedProps=d;return b.child}\nfunction hg(a,b,c,d,e){if(K(c)){var f=!0;Me(b)}else f=!1;uf(b,e);if(null===a)if(null===b.stateNode){var g=K(c)?Ge:I.current,h=c.contextTypes,k=null!==h&&void 0!==h;h=k?He(b,g):Fe;var l=new c(d,h);b.memoizedState=null!==l.state&&void 0!==l.state?l.state:null;l.updater=Jf;b.stateNode=l;l._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=g,k.__reactInternalMemoizedMaskedChildContext=h);Mf(b,c,d,e);d=!0}else{g=b.stateNode;h=b.memoizedProps;g.props=h;var m=g.context;\nk=K(c)?Ge:I.current;k=He(b,k);var r=c.getDerivedStateFromProps;(l=\"function\"===typeof r||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||m!==k)&&Lf(b,g,d,k);af=!1;var A=b.memoizedState;m=g.state=A;var S=b.updateQueue;null!==S&&(kf(b,S,d,g,e),m=b.memoizedState);h!==d||A!==m||J.current||af?(\"function\"===typeof r&&(Ff(b,c,r,d),m=b.memoizedState),(h=af||Kf(b,c,h,d,A,m,k))?(l||\"function\"!==\ntypeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.effectTag|=4)):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),b.memoizedProps=d,b.memoizedState=m),g.props=d,g.state=m,g.context=k,d=h):(\"function\"===typeof g.componentDidMount&&(b.effectTag|=4),d=!1)}else g=b.stateNode,h=\nb.memoizedProps,g.props=h,m=g.context,k=K(c)?Ge:I.current,k=He(b,k),r=c.getDerivedStateFromProps,(l=\"function\"===typeof r||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||m!==k)&&Lf(b,g,d,k),af=!1,m=b.memoizedState,A=g.state=m,S=b.updateQueue,null!==S&&(kf(b,S,d,g,e),A=b.memoizedState),h!==d||m!==A||J.current||af?(\"function\"===typeof r&&(Ff(b,c,r,d),A=b.memoizedState),(r=af||Kf(b,c,h,d,\nm,A,k))?(l||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,A,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,A,k)),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=4),\"function\"!==\ntypeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=256),b.memoizedProps=d,b.memoizedState=A),g.props=d,g.state=A,g.context=k,d=r):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&m===a.memoizedState||(b.effectTag|=256),d=!1);return ig(a,b,c,d,f,e)}\nfunction ig(a,b,c,d,e,f){fg(a,b);var g=0!==(b.effectTag&64);if(!d&&!g)return e&&Ne(b,c,!1),eg(a,b,f);d=b.stateNode;cg.current=b;var h=g?null:d.render();b.effectTag|=1;null!==a&&g&&(M(a,b,null,f),b.child=null);M(a,b,h,f);b.memoizedState=d.state;b.memoizedProps=d.props;e&&Ne(b,c,!0);return b.child}function jg(a){var b=a.stateNode;b.pendingContext?Ke(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Ke(a,b.context,!1);Af(a,b.containerInfo)}\nfunction ng(a,b){if(a&&a.defaultProps){b=n({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c])}return b}\nfunction og(a,b,c,d){null!==a?t(\"155\"):void 0;var e=b.pendingProps;if(\"object\"===typeof c&&null!==c&&\"function\"===typeof c.then){c=bg(c);var f=c;f=\"function\"===typeof f?Te(f)?3:1:void 0!==f&&null!==f&&f.$$typeof?14:4;f=b.tag=f;var g=ng(c,e);switch(f){case 1:return gg(a,b,c,g,d);case 3:return hg(a,b,c,g,d);case 14:return dg(a,b,c,g,d);default:t(\"283\",c)}}f=He(b,I.current);uf(b,d);f=c(e,f);b.effectTag|=1;if(\"object\"===typeof f&&null!==f&&\"function\"===typeof f.render&&void 0===f.$$typeof){b.tag=2;K(c)?\n(g=!0,Me(b)):g=!1;b.memoizedState=null!==f.state&&void 0!==f.state?f.state:null;var h=c.getDerivedStateFromProps;\"function\"===typeof h&&Ff(b,c,h,e);f.updater=Jf;b.stateNode=f;f._reactInternalFiber=b;Mf(b,c,e,d);return ig(a,b,c,!0,g,d)}b.tag=0;M(a,b,f,d);b.memoizedProps=e;return b.child}\nfunction eg(a,b,c){null!==a&&(b.firstContextDependency=a.firstContextDependency);var d=b.childExpirationTime;if(0===d||d>c)return null;null!==a&&b.child!==a.child?t(\"153\"):void 0;if(null!==b.child){a=b.child;c=Ue(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Ue(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction pg(a,b,c){var d=b.expirationTime;if(!J.current&&(0===d||d>c)){switch(b.tag){case 5:jg(b);ag();break;case 7:Cf(b);break;case 2:K(b.type)&&Me(b);break;case 3:K(b.type._reactResult)&&Me(b);break;case 6:Af(b,b.stateNode.containerInfo);break;case 12:sf(b,b.memoizedProps.value)}return eg(a,b,c)}b.expirationTime=0;switch(b.tag){case 4:return og(a,b,b.type,c);case 0:return gg(a,b,b.type,b.pendingProps,c);case 1:var e=b.type._reactResult;d=b.pendingProps;a=gg(a,b,e,ng(e,d),c);b.memoizedProps=d;return a;\ncase 2:return hg(a,b,b.type,b.pendingProps,c);case 3:return e=b.type._reactResult,d=b.pendingProps,a=hg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 5:jg(b);d=b.updateQueue;null===d?t(\"282\"):void 0;e=b.memoizedState;e=null!==e?e.element:null;kf(b,d,b.pendingProps,null,c);d=b.memoizedState.element;if(d===e)ag(),b=eg(a,b,c);else{e=b.stateNode;if(e=(null===a||null===a.child)&&e.hydrate)Uf=Ce(b.stateNode.containerInfo),Tf=b,e=Vf=!0;e?(b.effectTag|=2,b.child=Sf(b,null,d,c)):(M(a,b,d,c),ag());b=b.child}return b;\ncase 7:Cf(b);null===a&&Yf(b);d=b.type;e=b.pendingProps;var f=null!==a?a.memoizedProps:null,g=e.children;Ae(d,e)?g=null:null!==f&&Ae(d,f)&&(b.effectTag|=16);fg(a,b);1073741823!==c&&b.mode&1&&e.hidden?(b.expirationTime=1073741823,b.memoizedProps=e,b=null):(M(a,b,g,c),b.memoizedProps=e,b=b.child);return b;case 8:return null===a&&Yf(b),b.memoizedProps=b.pendingProps,null;case 16:return null;case 6:return Af(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Rf(b,null,d,c):M(a,b,d,c),b.memoizedProps=\nd,b.child;case 13:return dg(a,b,b.type,b.pendingProps,c);case 14:return e=b.type._reactResult,d=b.pendingProps,a=dg(a,b,e,ng(e,d),c),b.memoizedProps=d,a;case 9:return d=b.pendingProps,M(a,b,d,c),b.memoizedProps=d,b.child;case 10:return d=b.pendingProps.children,M(a,b,d,c),b.memoizedProps=d,b.child;case 15:return d=b.pendingProps,M(a,b,d.children,c),b.memoizedProps=d,b.child;case 12:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;b.memoizedProps=e;sf(b,f);if(null!==g){var h=g.value;\nf=h===f&&(0!==h||1/h===1/f)||h!==h&&f!==f?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0;if(0===f){if(g.children===e.children&&!J.current){b=eg(a,b,c);break a}}else for(g=b.child,null!==g&&(g.return=b);null!==g;){h=g.firstContextDependency;if(null!==h){do{if(h.context===d&&0!==(h.observedBits&f)){if(2===g.tag||3===g.tag){var k=df(c);k.tag=2;ff(g,k)}if(0===g.expirationTime||g.expirationTime>c)g.expirationTime=c;k=g.alternate;null!==k&&(0===k.expirationTime||\nk.expirationTime>c)&&(k.expirationTime=c);for(var l=g.return;null!==l;){k=l.alternate;if(0===l.childExpirationTime||l.childExpirationTime>c)l.childExpirationTime=c,null!==k&&(0===k.childExpirationTime||k.childExpirationTime>c)&&(k.childExpirationTime=c);else if(null!==k&&(0===k.childExpirationTime||k.childExpirationTime>c))k.childExpirationTime=c;else break;l=l.return}}k=g.child;h=h.next}while(null!==h)}else k=12===g.tag?g.type===b.type?null:g.child:g.child;if(null!==k)k.return=g;else for(k=g;null!==\nk;){if(k===b){k=null;break}g=k.sibling;if(null!==g){g.return=k.return;k=g;break}k=k.return}g=k}}M(a,b,e.children,c);b=b.child}return b;case 11:return f=b.type,d=b.pendingProps,e=d.children,uf(b,c),f=vf(f,d.unstable_observedBits),e=e(f),b.effectTag|=1,M(a,b,e,c),b.memoizedProps=d,b.child;default:t(\"156\")}}function qg(a){a.effectTag|=4}var rg=void 0,sg=void 0,tg=void 0;rg=function(){};\nsg=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){var g=b.stateNode;zf(L.current);a=null;switch(c){case \"input\":f=zc(g,f);d=zc(g,d);a=[];break;case \"option\":f=de(g,f);d=de(g,d);a=[];break;case \"select\":f=n({},f,{value:void 0});d=n({},d,{value:void 0});a=[];break;case \"textarea\":f=fe(g,f);d=fe(g,d);a=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(g.onclick=we)}te(c,d);g=c=void 0;var h=null;for(c in f)if(!d.hasOwnProperty(c)&&f.hasOwnProperty(c)&&null!=f[c])if(\"style\"===\nc){var k=f[c];for(g in k)k.hasOwnProperty(g)&&(h||(h={}),h[g]=\"\")}else\"dangerouslySetInnerHTML\"!==c&&\"children\"!==c&&\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&\"autoFocus\"!==c&&(sa.hasOwnProperty(c)?a||(a=[]):(a=a||[]).push(c,null));for(c in d){var l=d[c];k=null!=f?f[c]:void 0;if(d.hasOwnProperty(c)&&l!==k&&(null!=l||null!=k))if(\"style\"===c)if(k){for(g in k)!k.hasOwnProperty(g)||l&&l.hasOwnProperty(g)||(h||(h={}),h[g]=\"\");for(g in l)l.hasOwnProperty(g)&&k[g]!==l[g]&&(h||\n(h={}),h[g]=l[g])}else h||(a||(a=[]),a.push(c,h)),h=l;else\"dangerouslySetInnerHTML\"===c?(l=l?l.__html:void 0,k=k?k.__html:void 0,null!=l&&k!==l&&(a=a||[]).push(c,\"\"+l)):\"children\"===c?k===l||\"string\"!==typeof l&&\"number\"!==typeof l||(a=a||[]).push(c,\"\"+l):\"suppressContentEditableWarning\"!==c&&\"suppressHydrationWarning\"!==c&&(sa.hasOwnProperty(c)?(null!=l&&ve(e,c),a||k===l||(a=[])):(a=a||[]).push(c,l))}h&&(a=a||[]).push(\"style\",h);e=a;(b.updateQueue=e)&&qg(b)}};tg=function(a,b,c,d){c!==d&&qg(b)};\nfunction ug(a,b){var c=b.source,d=b.stack;null===d&&null!==c&&(d=mc(c));null!==c&&lc(c.type);b=b.value;null!==a&&2===a.tag&&lc(a.type);try{console.error(b)}catch(e){setTimeout(function(){throw e;})}}function vg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){wg(a,c)}else b.current=null}\nfunction xg(a){\"function\"===typeof Pe&&Pe(a);switch(a.tag){case 2:case 3:vg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){wg(a,c)}break;case 7:vg(a);break;case 6:yg(a)}}function zg(a){return 7===a.tag||5===a.tag||6===a.tag}\nfunction Ag(a){a:{for(var b=a.return;null!==b;){if(zg(b)){var c=b;break a}b=b.return}t(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 7:b=c.stateNode;d=!1;break;case 5:b=c.stateNode.containerInfo;d=!0;break;case 6:b=c.stateNode.containerInfo;d=!0;break;default:t(\"161\")}c.effectTag&16&&(oe(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||zg(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;7!==c.tag&&8!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||6===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(7===e.tag||8===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?(h=f.parentNode,h.insertBefore(g,f)):(h=f,h.appendChild(g)),null===h.onclick&&(h.onclick=we)):b.appendChild(e.stateNode);else if(6!==e.tag&&null!==e.child){e.child.return=\ne;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction yg(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?t(\"160\"):void 0;switch(c.tag){case 7:d=c.stateNode;e=!1;break a;case 5:d=c.stateNode.containerInfo;e=!0;break a;case 6:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(7===b.tag||8===b.tag){a:for(var f=b,g=f;;)if(xg(g),null!==g.child&&6!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(6===b.tag?(d=b.stateNode.containerInfo,e=!0):xg(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;6===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction Bg(a,b){switch(b.tag){case 2:case 3:break;case 7:var c=b.stateNode;if(null!=c){var d=b.memoizedProps,e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Ja]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Cc(c,d);ue(a,e);b=ue(a,d);for(e=0;e<f.length;e+=2){var g=f[e],h=f[e+1];\"style\"===g?re(c,h):\"dangerouslySetInnerHTML\"===g?ne(c,h):\"children\"===g?oe(c,h):xc(c,g,h,b)}switch(a){case \"input\":Dc(c,d);break;case \"textarea\":he(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,\nc._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?ee(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?ee(c,!!d.multiple,d.defaultValue,!0):ee(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}break;case 8:null===b.stateNode?t(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 5:break;case 15:break;case 16:break;default:t(\"163\")}}function Cg(a,b,c){c=df(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Dg(d);ug(a,b)};return c}\nfunction Eg(a,b,c){c=df(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===Fg?Fg=new Set([this]):Fg.add(this);var c=b.value,d=b.stack;ug(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction Gg(a){switch(a.tag){case 2:K(a.type)&&Ie(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return K(a.type._reactResult)&&Ie(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return Bf(a),Je(a),b=a.effectTag,0!==(b&64)?t(\"285\"):void 0,a.effectTag=b&-1025|64,a;case 7:return Df(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 6:return Bf(a),null;case 12:return tf(a),null;default:return null}}\nvar Hg={readContext:vf},Ig=Yb.ReactCurrentOwner,Jg=0,Kg=0,Lg=!1,N=null,Mg=null,O=0,Ng=!1,Q=null,Og=!1,Fg=null;function Pg(){if(null!==N)for(var a=N.return;null!==a;){var b=a;switch(b.tag){case 2:var c=b.type.childContextTypes;null!==c&&void 0!==c&&Ie(b);break;case 3:c=b.type._reactResult.childContextTypes;null!==c&&void 0!==c&&Ie(b);break;case 5:Bf(b);Je(b);break;case 7:Df(b);break;case 6:Bf(b);break;case 12:tf(b)}a=a.return}Mg=null;O=0;Ng=!1;N=null}\nfunction Qg(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){var e=b;b=a;var f=b.pendingProps;switch(b.tag){case 0:case 1:break;case 2:K(b.type)&&Ie(b);break;case 3:K(b.type._reactResult)&&Ie(b);break;case 5:Bf(b);Je(b);f=b.stateNode;f.pendingContext&&(f.context=f.pendingContext,f.pendingContext=null);if(null===e||null===e.child)$f(b),b.effectTag&=-3;rg(b);break;case 7:Df(b);var g=zf(yf.current),h=b.type;if(null!==e&&null!=b.stateNode)sg(e,b,h,f,g),e.ref!==b.ref&&(b.effectTag|=\n128);else if(f){var k=zf(L.current);if($f(b)){f=b;e=f.stateNode;var l=f.type,m=f.memoizedProps,r=g;e[Ia]=f;e[Ja]=m;h=void 0;g=l;switch(g){case \"iframe\":case \"object\":F(\"load\",e);break;case \"video\":case \"audio\":for(l=0;l<fb.length;l++)F(fb[l],e);break;case \"source\":F(\"error\",e);break;case \"img\":case \"image\":case \"link\":F(\"error\",e);F(\"load\",e);break;case \"form\":F(\"reset\",e);F(\"submit\",e);break;case \"details\":F(\"toggle\",e);break;case \"input\":Bc(e,m);F(\"invalid\",e);ve(r,\"onChange\");break;case \"select\":e._wrapperState=\n{wasMultiple:!!m.multiple};F(\"invalid\",e);ve(r,\"onChange\");break;case \"textarea\":ge(e,m),F(\"invalid\",e),ve(r,\"onChange\")}te(g,m);l=null;for(h in m)m.hasOwnProperty(h)&&(k=m[h],\"children\"===h?\"string\"===typeof k?e.textContent!==k&&(l=[\"children\",k]):\"number\"===typeof k&&e.textContent!==\"\"+k&&(l=[\"children\",\"\"+k]):sa.hasOwnProperty(h)&&null!=k&&ve(r,h));switch(g){case \"input\":Wb(e);Fc(e,m,!0);break;case \"textarea\":Wb(e);ie(e,m);break;case \"select\":case \"option\":break;default:\"function\"===typeof m.onClick&&\n(e.onclick=we)}h=l;f.updateQueue=h;f=null!==h?!0:!1;f&&qg(b)}else{m=b;e=h;r=f;l=9===g.nodeType?g:g.ownerDocument;k===je.html&&(k=ke(e));k===je.html?\"script\"===e?(e=l.createElement(\"div\"),e.innerHTML=\"<script>\\x3c/script>\",l=e.removeChild(e.firstChild)):\"string\"===typeof r.is?l=l.createElement(e,{is:r.is}):(l=l.createElement(e),\"select\"===e&&r.multiple&&(l.multiple=!0)):l=l.createElementNS(k,e);e=l;e[Ia]=m;e[Ja]=f;a:for(m=e,r=b,l=r.child;null!==l;){if(7===l.tag||8===l.tag)m.appendChild(l.stateNode);\nelse if(6!==l.tag&&null!==l.child){l.child.return=l;l=l.child;continue}if(l===r)break;for(;null===l.sibling;){if(null===l.return||l.return===r)break a;l=l.return}l.sibling.return=l.return;l=l.sibling}r=e;l=h;m=f;var A=g,S=ue(l,m);switch(l){case \"iframe\":case \"object\":F(\"load\",r);g=m;break;case \"video\":case \"audio\":for(g=0;g<fb.length;g++)F(fb[g],r);g=m;break;case \"source\":F(\"error\",r);g=m;break;case \"img\":case \"image\":case \"link\":F(\"error\",r);F(\"load\",r);g=m;break;case \"form\":F(\"reset\",r);F(\"submit\",\nr);g=m;break;case \"details\":F(\"toggle\",r);g=m;break;case \"input\":Bc(r,m);g=zc(r,m);F(\"invalid\",r);ve(A,\"onChange\");break;case \"option\":g=de(r,m);break;case \"select\":r._wrapperState={wasMultiple:!!m.multiple};g=n({},m,{value:void 0});F(\"invalid\",r);ve(A,\"onChange\");break;case \"textarea\":ge(r,m);g=fe(r,m);F(\"invalid\",r);ve(A,\"onChange\");break;default:g=m}te(l,g);k=void 0;var B=l,P=r,v=g;for(k in v)if(v.hasOwnProperty(k)){var p=v[k];\"style\"===k?re(P,p):\"dangerouslySetInnerHTML\"===k?(p=p?p.__html:void 0,\nnull!=p&&ne(P,p)):\"children\"===k?\"string\"===typeof p?(\"textarea\"!==B||\"\"!==p)&&oe(P,p):\"number\"===typeof p&&oe(P,\"\"+p):\"suppressContentEditableWarning\"!==k&&\"suppressHydrationWarning\"!==k&&\"autoFocus\"!==k&&(sa.hasOwnProperty(k)?null!=p&&ve(A,k):null!=p&&xc(P,k,p,S))}switch(l){case \"input\":Wb(r);Fc(r,m,!1);break;case \"textarea\":Wb(r);ie(r,m);break;case \"option\":null!=m.value&&r.setAttribute(\"value\",\"\"+yc(m.value));break;case \"select\":g=r;g.multiple=!!m.multiple;r=m.value;null!=r?ee(g,!!m.multiple,\nr,!1):null!=m.defaultValue&&ee(g,!!m.multiple,m.defaultValue,!0);break;default:\"function\"===typeof g.onClick&&(r.onclick=we)}(f=ze(h,f))&&qg(b);b.stateNode=e}null!==b.ref&&(b.effectTag|=128)}else null===b.stateNode?t(\"166\"):void 0;break;case 8:e&&null!=b.stateNode?tg(e,b,e.memoizedProps,f):(\"string\"!==typeof f&&(null===b.stateNode?t(\"166\"):void 0),e=zf(yf.current),zf(L.current),$f(b)?(f=b,h=f.stateNode,e=f.memoizedProps,h[Ia]=f,(f=h.nodeValue!==e)&&qg(b)):(h=b,f=(9===e.nodeType?e:e.ownerDocument).createTextNode(f),\nf[Ia]=h,b.stateNode=f));break;case 13:case 14:break;case 16:break;case 9:break;case 10:break;case 15:break;case 6:Bf(b);rg(b);break;case 12:tf(b);break;case 11:break;case 4:t(\"167\");default:t(\"156\")}b=N=null;f=a;if(1073741823===O||1073741823!==f.childExpirationTime){h=0;for(e=f.child;null!==e;){g=e.expirationTime;m=e.childExpirationTime;if(0===h||0!==g&&g<h)h=g;if(0===h||0!==m&&m<h)h=m;e=e.sibling}f.childExpirationTime=h}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&\n(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a))}else{a=Gg(a,O);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512)}if(null!==d)return d;if(null!==c)a=c;else break}return null}function Rg(a){var b=pg(a.alternate,a,O);null===b&&(b=Qg(a));Ig.current=null;return b}\nfunction Sg(a,b,c){Lg?t(\"243\"):void 0;Lg=!0;Ig.currentDispatcher=Hg;var d=a.nextExpirationTimeToWorkOn;if(d!==O||a!==Mg||null===N)Pg(),Mg=a,O=d,N=Ue(Mg.current,null,O),a.pendingCommitExpirationTime=0;var e=!1;do{try{if(b)for(;null!==N&&!Tg();)N=Rg(N);else for(;null!==N;)N=Rg(N)}catch(r){if(null===N)e=!0,Dg(r);else{null===N?t(\"271\"):void 0;var f=N,g=f.return;if(null===g)e=!0,Dg(r);else{a:{var h=g,k=f,l=r;g=O;k.effectTag|=512;k.firstEffect=k.lastEffect=null;Ng=!0;l=nf(l,k);do{switch(h.tag){case 5:h.effectTag|=\n1024;h.expirationTime=g;g=Cg(h,l,g);gf(h,g);break a;case 2:case 3:k=l;var m=h.stateNode;if(0===(h.effectTag&64)&&null!==m&&\"function\"===typeof m.componentDidCatch&&(null===Fg||!Fg.has(m))){h.effectTag|=1024;h.expirationTime=g;g=Eg(h,k,g);gf(h,g);break a}}h=h.return}while(null!==h)}N=Qg(f);continue}}}break}while(1);Lg=!1;rf=qf=pf=Ig.currentDispatcher=null;if(e)Mg=null,a.finishedWork=null;else if(null!==N)a.finishedWork=null;else{b=a.current.alternate;null===b?t(\"281\"):void 0;Mg=null;if(Ng){e=a.latestPendingTime;\nf=a.latestSuspendedTime;g=a.latestPingedTime;if(0!==e&&e>d||0!==f&&f>d||0!==g&&g>d){a.didError=!1;c=a.latestPingedTime;0!==c&&c<=d&&(a.latestPingedTime=0);c=a.earliestPendingTime;b=a.latestPendingTime;c===d?a.earliestPendingTime=b===d?a.latestPendingTime=0:b:b===d&&(a.latestPendingTime=c);c=a.earliestSuspendedTime;b=a.latestSuspendedTime;0===c?a.earliestSuspendedTime=a.latestSuspendedTime=d:c>d?a.earliestSuspendedTime=d:b<d&&(a.latestSuspendedTime=d);$e(d,a);a.expirationTime=a.expirationTime;return}if(!a.didError&&\n!c){a.didError=!0;a.nextExpirationTimeToWorkOn=d;d=a.expirationTime=1;a.expirationTime=d;return}}a.pendingCommitExpirationTime=d;a.finishedWork=b}}\nfunction wg(a,b){var c;a:{Lg&&!Og?t(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:case 3:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===Fg||!Fg.has(d))){a=nf(b,a);a=Eg(c,a,1);ff(c,a);If(c,1);c=void 0;break a}break;case 5:a=nf(b,a);a=Cg(c,a,1);ff(c,a);If(c,1);c=void 0;break a}c=c.return}5===a.tag&&(c=nf(b,a),c=Cg(a,c,1),ff(a,c),If(a,1));c=void 0}return c}\nfunction Hf(a,b){0!==Kg?a=Kg:Lg?a=Og?1:O:b.mode&1?(a=Ug?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1),null!==Mg&&a===O&&(a+=1)):a=1;Ug&&(0===Vg||a>Vg)&&(Vg=a);return a}\nfunction If(a,b){a:{if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;var c=a.alternate;null!==c&&(0===c.expirationTime||c.expirationTime>b)&&(c.expirationTime=b);var d=a.return;if(null===d&&5===a.tag)a=a.stateNode;else{for(;null!==d;){c=d.alternate;if(0===d.childExpirationTime||d.childExpirationTime>b)d.childExpirationTime=b;null!==c&&(0===c.childExpirationTime||c.childExpirationTime>b)&&(c.childExpirationTime=b);if(null===d.return&&5===d.tag){a=d.stateNode;break a}d=d.return}a=null}}if(null!==\na){!Lg&&0!==O&&b<O&&Pg();Ze(a,b);if(!Lg||Og||Mg!==a){b=a;a=a.expirationTime;if(null===b.nextScheduledRoot)b.expirationTime=a,null===T?(U=T=b,b.nextScheduledRoot=b):(T=T.nextScheduledRoot=b,T.nextScheduledRoot=U);else if(c=b.expirationTime,0===c||a<c)b.expirationTime=a;V||(W?Wg&&(Y=b,Z=1,Xg(b,1,!0)):1===a?Yg(1,null):Zg(b,a))}$g>ah&&($g=0,t(\"185\"))}}function bh(a,b,c,d,e){var f=Kg;Kg=1;try{return a(b,c,d,e)}finally{Kg=f}}\nvar U=null,T=null,ch=0,dh=void 0,V=!1,Y=null,Z=0,Vg=0,eh=!1,fh=!1,gh=null,hh=null,W=!1,Wg=!1,Ug=!1,ih=null,jh=ba.unstable_now(),kh=(jh/10|0)+2,lh=kh,ah=50,$g=0,mh=null,nh=1;function oh(){kh=((ba.unstable_now()-jh)/10|0)+2}function Zg(a,b){if(0!==ch){if(b>ch)return;null!==dh&&ba.unstable_cancelScheduledWork(dh)}ch=b;a=ba.unstable_now()-jh;dh=ba.unstable_scheduleWork(ph,{timeout:10*(b-2)-a})}function Gf(){if(V)return lh;qh();if(0===Z||1073741823===Z)oh(),lh=kh;return lh}\nfunction qh(){var a=0,b=null;if(null!==T)for(var c=T,d=U;null!==d;){var e=d.expirationTime;if(0===e){null===c||null===T?t(\"244\"):void 0;if(d===d.nextScheduledRoot){U=T=d.nextScheduledRoot=null;break}else if(d===U)U=e=d.nextScheduledRoot,T.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===T){T=c;T.nextScheduledRoot=U;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===T)break;if(1===a)break;\nc=d;d=d.nextScheduledRoot}}Y=b;Z=a}function ph(a){if(a.didTimeout&&null!==U){oh();var b=U;do{var c=b.expirationTime;0!==c&&kh>=c&&(b.nextExpirationTimeToWorkOn=kh);b=b.nextScheduledRoot}while(b!==U)}Yg(0,a)}\nfunction Yg(a,b){hh=b;qh();if(null!==hh)for(oh(),lh=kh;null!==Y&&0!==Z&&(0===a||a>=Z)&&(!eh||kh>=Z);)Xg(Y,Z,kh>=Z),qh(),oh(),lh=kh;else for(;null!==Y&&0!==Z&&(0===a||a>=Z);)Xg(Y,Z,!0),qh();null!==hh&&(ch=0,dh=null);0!==Z&&Zg(Y,Z);hh=null;eh=!1;$g=0;mh=null;if(null!==ih)for(a=ih,ih=null,b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){fh||(fh=!0,gh=d)}}if(fh)throw a=gh,gh=null,fh=!1,a;}\nfunction Xg(a,b,c){V?t(\"245\"):void 0;V=!0;if(null===hh||c){var d=a.finishedWork;null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!1,c),d=a.finishedWork,null!==d&&rh(a,d,b))}else d=a.finishedWork,null!==d?rh(a,d,b):(a.finishedWork=null,Sg(a,!0,c),d=a.finishedWork,null!==d&&(Tg()?a.finishedWork=d:rh(a,d,b)));V=!1}\nfunction rh(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===ih?ih=[d]:ih.push(d),d._defer)){a.finishedWork=b;a.expirationTime=0;return}a.finishedWork=null;a===mh?$g++:(mh=a,$g=0);Og=Lg=!0;a.current===b?t(\"177\"):void 0;c=a.pendingCommitExpirationTime;0===c?t(\"261\"):void 0;a.pendingCommitExpirationTime=0;d=b.expirationTime;var e=b.childExpirationTime;d=0===d||0!==e&&e<d?e:d;a.didError=!1;0===d?(a.earliestPendingTime=0,a.latestPendingTime=0,a.earliestSuspendedTime=0,a.latestSuspendedTime=\n0,a.latestPingedTime=0):(e=a.latestPendingTime,0!==e&&(e<d?a.earliestPendingTime=a.latestPendingTime=0:a.earliestPendingTime<d&&(a.earliestPendingTime=a.latestPendingTime)),e=a.earliestSuspendedTime,0===e?Ze(a,d):d>a.latestSuspendedTime?(a.earliestSuspendedTime=0,a.latestSuspendedTime=0,a.latestPingedTime=0,Ze(a,d)):d<e&&Ze(a,d));$e(0,a);Ig.current=null;1<b.effectTag?null!==b.lastEffect?(b.lastEffect.nextEffect=b,d=b.firstEffect):d=b:d=b.firstEffect;xe=Gd;e=Td();if(Ud(e)){if(\"selectionStart\"in e)var f=\n{start:e.selectionStart,end:e.selectionEnd};else a:{f=(f=e.ownerDocument)&&f.defaultView||window;var g=f.getSelection&&f.getSelection();if(g&&0!==g.rangeCount){f=g.anchorNode;var h=g.anchorOffset,k=g.focusNode;g=g.focusOffset;try{f.nodeType,k.nodeType}catch(Xa){f=null;break a}var l=0,m=-1,r=-1,A=0,S=0,B=e,P=null;b:for(;;){for(var v;;){B!==f||0!==h&&3!==B.nodeType||(m=l+h);B!==k||0!==g&&3!==B.nodeType||(r=l+g);3===B.nodeType&&(l+=B.nodeValue.length);if(null===(v=B.firstChild))break;P=B;B=v}for(;;){if(B===\ne)break b;P===f&&++A===h&&(m=l);P===k&&++S===g&&(r=l);if(null!==(v=B.nextSibling))break;B=P;P=B.parentNode}B=v}f=-1===m||-1===r?null:{start:m,end:r}}else f=null}f=f||{start:0,end:0}}else f=null;ye={focusedElem:e,selectionRange:f};Gd=!1;for(Q=d;null!==Q;){e=!1;f=void 0;try{for(;null!==Q;){if(Q.effectTag&256){var p=Q.alternate;a:switch(h=Q,h.tag){case 2:case 3:if(h.effectTag&256&&null!==p){var u=p.memoizedProps,x=p.memoizedState,R=h.stateNode;R.props=h.memoizedProps;R.state=h.memoizedState;var yh=R.getSnapshotBeforeUpdate(u,\nx);R.__reactInternalSnapshotBeforeUpdate=yh}break a;case 5:case 7:case 8:case 6:break a;default:t(\"163\")}}Q=Q.nextEffect}}catch(Xa){e=!0,f=Xa}e&&(null===Q?t(\"178\"):void 0,wg(Q,f),null!==Q&&(Q=Q.nextEffect))}for(Q=d;null!==Q;){p=!1;u=void 0;try{for(;null!==Q;){var w=Q.effectTag;w&16&&oe(Q.stateNode,\"\");if(w&128){var y=Q.alternate;if(null!==y){var q=y.ref;null!==q&&(\"function\"===typeof q?q(null):q.current=null)}}switch(w&14){case 2:Ag(Q);Q.effectTag&=-3;break;case 6:Ag(Q);Q.effectTag&=-3;Bg(Q.alternate,\nQ);break;case 4:Bg(Q.alternate,Q);break;case 8:x=Q,yg(x),x.return=null,x.child=null,x.alternate&&(x.alternate.child=null,x.alternate.return=null)}Q=Q.nextEffect}}catch(Xa){p=!0,u=Xa}p&&(null===Q?t(\"178\"):void 0,wg(Q,u),null!==Q&&(Q=Q.nextEffect))}q=ye;y=Td();w=q.focusedElem;u=q.selectionRange;if(y!==w&&w&&w.ownerDocument&&Sd(w.ownerDocument.documentElement,w)){null!==u&&Ud(w)&&(y=u.start,q=u.end,void 0===q&&(q=y),\"selectionStart\"in w?(w.selectionStart=y,w.selectionEnd=Math.min(q,w.value.length)):\n(p=w.ownerDocument||document,y=(p&&p.defaultView||window).getSelection(),x=w.textContent.length,q=Math.min(u.start,x),u=void 0===u.end?q:Math.min(u.end,x),!y.extend&&q>u&&(x=u,u=q,q=x),x=Rd(w,q),R=Rd(w,u),x&&R&&(1!==y.rangeCount||y.anchorNode!==x.node||y.anchorOffset!==x.offset||y.focusNode!==R.node||y.focusOffset!==R.offset)&&(p=p.createRange(),p.setStart(x.node,x.offset),y.removeAllRanges(),q>u?(y.addRange(p),y.extend(R.node,R.offset)):(p.setEnd(R.node,R.offset),y.addRange(p)))));y=[];for(q=w;q=\nq.parentNode;)1===q.nodeType&&y.push({element:q,left:q.scrollLeft,top:q.scrollTop});\"function\"===typeof w.focus&&w.focus();for(w=0;w<y.length;w++)q=y[w],q.element.scrollLeft=q.left,q.element.scrollTop=q.top}ye=null;Gd=!!xe;xe=null;a.current=b;for(Q=d;null!==Q;){d=!1;w=void 0;try{for(y=c;null!==Q;){var Sa=Q.effectTag;if(Sa&36){var oc=Q.alternate;q=Q;p=y;switch(q.tag){case 2:case 3:var X=q.stateNode;if(q.effectTag&4)if(null===oc)X.props=q.memoizedProps,X.state=q.memoizedState,X.componentDidMount();\nelse{var Ih=oc.memoizedProps,Jh=oc.memoizedState;X.props=q.memoizedProps;X.state=q.memoizedState;X.componentDidUpdate(Ih,Jh,X.__reactInternalSnapshotBeforeUpdate)}var kg=q.updateQueue;null!==kg&&(X.props=q.memoizedProps,X.state=q.memoizedState,lf(q,kg,X,p));break;case 5:var lg=q.updateQueue;if(null!==lg){u=null;if(null!==q.child)switch(q.child.tag){case 7:u=q.child.stateNode;break;case 2:case 3:u=q.child.stateNode}lf(q,lg,u,p)}break;case 7:var Kh=q.stateNode;null===oc&&q.effectTag&4&&ze(q.type,q.memoizedProps)&&\nKh.focus();break;case 8:break;case 6:break;case 15:break;case 16:break;default:t(\"163\")}}if(Sa&128){var Ac=Q.ref;if(null!==Ac){var mg=Q.stateNode;switch(Q.tag){case 7:var Pd=mg;break;default:Pd=mg}\"function\"===typeof Ac?Ac(Pd):Ac.current=Pd}}var Lh=Q.nextEffect;Q.nextEffect=null;Q=Lh}}catch(Xa){d=!0,w=Xa}d&&(null===Q?t(\"178\"):void 0,wg(Q,w),null!==Q&&(Q=Q.nextEffect))}Lg=Og=!1;\"function\"===typeof Oe&&Oe(b.stateNode);Sa=b.expirationTime;b=b.childExpirationTime;b=0===Sa||0!==b&&b<Sa?b:Sa;0===b&&(Fg=\nnull);a.expirationTime=b;a.finishedWork=null}function Tg(){return eh?!0:null===hh||hh.timeRemaining()>nh?!1:eh=!0}function Dg(a){null===Y?t(\"246\"):void 0;Y.expirationTime=0;fh||(fh=!0,gh=a)}function sh(a,b){var c=W;W=!0;try{return a(b)}finally{(W=c)||V||Yg(1,null)}}function th(a,b){if(W&&!Wg){Wg=!0;try{return a(b)}finally{Wg=!1}}return a(b)}function uh(a,b,c){if(Ug)return a(b,c);W||V||0===Vg||(Yg(Vg,null),Vg=0);var d=Ug,e=W;W=Ug=!0;try{return a(b,c)}finally{Ug=d,(W=e)||V||Yg(1,null)}}\nfunction vh(a){if(!a)return Fe;a=a._reactInternalFiber;a:{2!==jd(a)||2!==a.tag&&3!==a.tag?t(\"170\"):void 0;var b=a;do{switch(b.tag){case 5:b=b.stateNode.context;break a;case 2:if(K(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}break;case 3:if(K(b.type._reactResult)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);t(\"171\");b=void 0}if(2===a.tag){var c=a.type;if(K(c))return Le(a,c,b)}else if(3===a.tag&&(c=a.type._reactResult,K(c)))return Le(a,\nc,b);return b}function wh(a,b,c,d,e){var f=b.current;c=vh(c);null===b.context?b.context=c:b.pendingContext=c;b=e;e=df(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);ff(f,e);If(f,d);return d}function xh(a,b,c,d){var e=b.current,f=Gf();e=Hf(f,e);return wh(a,b,c,e,d)}function zh(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 7:return a.child.stateNode;default:return a.child.stateNode}}\nfunction Ah(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ac,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nFb=function(a,b,c){switch(b){case \"input\":Dc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Na(d);e?void 0:t(\"90\");Xb(d);Dc(d,e)}}}break;case \"textarea\":he(a,c);break;case \"select\":b=c.value,null!=b&&ee(a,!!c.multiple,b,!1)}};\nfunction Bh(a){var b=2+25*(((Gf()-2+500)/25|0)+1);b<=Jg&&(b=Jg+1);this._expirationTime=Jg=b;this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}Bh.prototype.render=function(a){this._defer?void 0:t(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new Ch;wh(a,b,null,c,d._onCommit);return d};\nBh.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nBh.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:t(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?t(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;b=c;V?t(\"253\"):void 0;Y=a;Z=b;Xg(a,b,!0);Yg(1,null);b=this._next;this._next=null;b=a.firstBatch=b;null!==\nb&&b._hasChildren&&b.render(b._children)}else this._next=null,this._defer=!1};Bh.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function Ch(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}Ch.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\nCh.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?t(\"191\",c):void 0;c()}}};\nfunction Dh(a,b,c){b=new Se(5,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:c,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null};this._internalRoot=b.stateNode=a}\nDh.prototype.render=function(a,b){var c=this._internalRoot,d=new Ch;b=void 0===b?null:b;null!==b&&d.then(b);xh(a,c,null,d._onCommit);return d};Dh.prototype.unmount=function(a){var b=this._internalRoot,c=new Ch;a=void 0===a?null:a;null!==a&&c.then(a);xh(null,b,null,c._onCommit);return c};Dh.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new Ch;c=void 0===c?null:c;null!==c&&e.then(c);xh(b,d,a,e._onCommit);return e};\nDh.prototype.createBatch=function(){var a=new Bh(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function Eh(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Lb=sh;Mb=uh;Nb=function(){V||0===Vg||(Yg(Vg,null),Vg=0)};\nfunction Fh(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new Dh(a,!1,b)}\nfunction Gh(a,b,c,d,e){Eh(c)?void 0:t(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=zh(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=Fh(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=zh(f._internalRoot);h.call(a)}}th(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return zh(f._internalRoot)}\nfunction Hh(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Eh(b)?void 0:t(\"200\");return Ah(a,b,null,c)}\nvar Mh={createPortal:Hh,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?t(\"188\"):t(\"268\",Object.keys(a)));a=md(b);a=null===a?null:a.stateNode;return a},hydrate:function(a,b,c){return Gh(null,a,b,!0,c)},render:function(a,b,c){return Gh(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?t(\"38\"):void 0;return Gh(a,b,c,!1,d)},unmountComponentAtNode:function(a){Eh(a)?\nvoid 0:t(\"40\");return a._reactRootContainer?(th(function(){Gh(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return Hh.apply(void 0,arguments)},unstable_batchedUpdates:sh,unstable_interactiveUpdates:uh,flushSync:function(a,b){V?t(\"187\"):void 0;var c=W;W=!0;try{return bh(a,b)}finally{W=c,Yg(1,null)}},unstable_flushControlled:function(a){var b=W;W=!0;try{bh(a)}finally{(W=b)||V||Yg(1,null)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[La,\nMa,Na,Ea.injectEventPluginsByName,qa,Ua,function(a){za(a,Ta)},Jb,Kb,Id,Ga]},unstable_createRoot:function(a,b){Eh(a)?void 0:t(\"278\");return new Dh(a,!0,null!=b&&!0===b.hydrate)}};(function(a){var b=a.findFiberByHostInstance;return Re(n({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))})({findFiberByHostInstance:Ka,bundleType:0,version:\"16.5.2\",rendererPackageName:\"react-dom\"});\nvar Nh={default:Mh},Oh=Nh&&Mh||Nh;module.exports=Oh.default||Oh;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = /OLF\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/probe.js\n// module id = /cRm\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/mp4-generator.js\n// module id = 020U\n// module chunks = 0","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 0","'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/exp-golomb.js\n// module id = 2BoW\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/probe.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/ts-inspector.js\n// module id = 33ZF\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 3Cgm\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/m2ts.js\n// module id = 4cG2\n// module chunks = 0","/**\n * Provides requestAnimationFrame in a cross browser way.\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n */\n\nif ( !window.requestAnimationFrame ) {\n\n    window.requestAnimationFrame = ( function() {\n\n        return window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.oRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function( /* function FrameRequestCallback */ callback, /* DOMElement Element */ element ) {\n\n            window.setTimeout( callback, 1000 / 60 );\n\n        };\n\n    } )();\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/RequestAnimationFrame.js","/**\n * @license\n * Video.js 7.2.2 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.2.2\";\n\n/**\n * @file log.js\n * @module log\n */\n\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\nvar logByType = function logByType(type, args) {\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window$1.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window$1;\n\n  var timeout = void 0;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\nvar EVENT_MAP = void 0;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The property that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    _this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(_this, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n    return _this;\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n    return _this;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    var _this = possibleConstructorReturn(this, _TrackList.call(this, tracks));\n\n    _this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(_this, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n    return _this;\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    classCallCheck(this, TextTrackList);\n    return possibleConstructorReturn(this, _TrackList.apply(this, arguments));\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.queueTrigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_this, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    _this.tech_ = settings.tech;\n\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_this, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get$$1() {\n          return default_;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get$$1() {\n          return mode;\n        },\n        set: function set$$1(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          mode = newMode;\n          if (mode === 'showing') {\n\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set$$1() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get$$1() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n\n          return activeCues;\n        },\n\n\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set$$1() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _this);\n    } else {\n      _this.loaded_ = true;\n    }\n    return _this;\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    var _this = possibleConstructorReturn(this, _Track.call(this, settings));\n\n    var selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(_this, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n\n    var track = new TextTrack(options);\n\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n\n    Object.defineProperties(_this, {\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get$$1() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get$$1() {\n          return track;\n        }\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _this\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    var backgroundImage = '';\n\n    // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n    if (url) {\n      backgroundImage = 'url(\"' + url + '\")';\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nfunction formatTime (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n}\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window$1.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    var docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {String} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {Boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  Html5.prototype.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this['featuresNative' + type + 'Tracks']) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + 'TracksListeners_']) {\n      Object.keys(this[lowerCaseType + 'TracksListeners_']).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + 'Tracks'];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + 'TracksListeners_'][eventName]);\n      });\n    }\n\n    this['featuresNative' + type + 'Tracks'] = !override;\n    this[lowerCaseType + 'TracksListeners_'] = null;\n\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {Boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {Boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  Html5.prototype.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n\n  /**\n    * Proxy native track list events for the given type to our track\n    * lists if the browser we are playing in supports that type of track list.\n    *\n    * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n    * @private\n    */\n\n\n  Html5.prototype.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n\n      elTracks.addEventListener(eventName, listener);\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    }).catch(function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // if we are a blob url, don't update the source cache\n    // blob urls can arise when playback is done via Media Source Extension (MSE)\n    // such as m3u8 sources with @videojs/http-streaming (VHS)\n    if (/^blob:/.test(src)) {\n      return;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  Player.prototype.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  Player.prototype.play_ = function play_() {\n    var _this8 = this;\n\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return;\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this9 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this10 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this10.cache_.sources = sources;\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this10.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs$1.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n  return videojs$1.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n    setTextContent(style$1, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs$1);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs$1.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs$1.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs$1.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs$1.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs$1.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs$1.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs$1.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs$1.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\n\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs$1.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs$1.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs$1.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs$1.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs$1.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deregister a Video.js plugin.\n *\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\n * @method deregisterPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be deregistered. Must be a string and\n *         must match an existing plugin or a method on the `Player`\n *         prototype.\n *\n */\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs$1.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs$1.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs$1.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs$1.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs$1.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs$1.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs$1.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs$1.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs$1.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs$1.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs$1.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs$1.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs$1.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs$1.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs$1.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs$1.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs$1.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs$1.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs$1.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs$1.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.2.4\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck$1 = function classCallCheck$$1(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$2 = function get$$1(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get$$1(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits$1 = function inherits$$1(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn$1 = function possibleConstructorReturn$$1(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray$1 = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$2 = videojs$1.log;\n\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  }\n\n  // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media);\n\n  // if the update could overlap existing segment information, merge the two segment lists\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  }\n\n  // resolve any segment URIs to prevent us from having to do it later\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  });\n\n  // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[media.uri] = mergedPlaylist;\n\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n\n      log$2.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n  return delay;\n};\n\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits$1(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck$1(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    // initialize the loader state\n    _this.state = 'HAVE_NOTHING';\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n    return _this;\n  }\n\n  createClass$1(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n\n      this.trigger('error');\n    }\n\n    // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this;\n\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n\n      var parser = new Parser();\n\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url;\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      parser.manifest.attributes = parser.manifest.attributes || {};\n\n      // merge this playlist into the master\n      var update = updateMaster(this.master, parser.manifest);\n\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      // refresh live playlists after a target duration passes\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this;\n\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been\n      // specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      // switch to fully loaded playlists immediately\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist;\n\n        // trigger media change if the active media has been updated\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      }\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA';\n\n      // there is already an outstanding playlist request\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      // request the new playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri);\n\n        // fire loadedmetadata the first time a media playlist is loaded\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n      // Need to restore state now that no activity is happening\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n\n        parser.push(req.responseText);\n        parser.end();\n\n        _this5.state = 'HAVE_MASTER';\n\n        parser.manifest.uri = _this5.srcUrl;\n\n        // loaded a master playlist\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n          return;\n        }\n\n        // loaded a media playlist\n        // infer a master playlist if none was previously requested\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl;\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n        _this5.haveMetadata(req, _this5.srcUrl);\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\nvar createTimeRange = videojs$1.createTimeRange;\n\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence;\n  // if a start time is available for segment immediately following\n  // the interval, use it\n  var segment = playlist.segments[i];\n\n  // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return { result: segment.start, precise: true };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return { result: result + segment.end, precise: true };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return { result: result + segment.start, precise: true };\n    }\n  }\n  return { result: result, precise: false };\n};\n\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence;\n  // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  }\n  // indicate we didn't find a useful duration estimate\n  return { result: -1, precise: false };\n};\n\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  }\n\n  // do a backward walk to estimate the duration\n  backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  }\n\n  // walk forward to see if a precise duration estimate can be made\n  // that way\n  forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  }\n\n  // return the less-precise, playlist-based duration estimate\n  return backward.result + expired;\n};\n\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  }\n\n  // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    }\n\n    // duration should be Infinity for live playlists\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  }\n\n  // calculate the total duration based on the segment durations\n  return intervalDuration(playlist, endSequence, expired);\n};\n\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    }\n    // We were unable to find a good segment within the playlist\n    // so select the first segment\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  }\n\n  // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  }\n\n  // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  }\n\n  // We are out of possible candidates so load the last one...\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n\n  return !playlist.disabled && !blacklisted;\n};\n\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n\n  return (size - bytesReceived * 8) / bandwidth;\n};\n\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\n// exports\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options);\n\n    // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      }\n\n      // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      }\n\n      // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n\n  return transferable;\n};\n\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n\n/**\n * utils to help dump binary data to the console\n */\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n// Fudge factor to account for TimeRanges rounding\nvar TIME_FUDGE_FACTOR = 1 / 30;\n// Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_;\n\n  // create an in-band caption track if one is present in the segment\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({ type: 'usage', name: 'hls-608' });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i];\n\n    // Remove any overlapping cue\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n\n/**\n * @file add-text-track-data.js\n */\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get$$1() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler);\n\n    // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = [];\n\n      // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      }\n\n      // Group cues by their startTime value\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n\n        return obj;\n      }, {});\n\n      // Sort startTimes by ascending order\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      });\n\n      // Map each cue group's endTime to the next group's startTime\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration;\n\n        // Map each cue's endTime the next group's startTime\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({ data: m, target: selfShim });\n            });\n          }\n        }\n      };\n\n      fn.call(selfShim);\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({ data: m, target: o });\n        });\n      };\n      this.isThisThread = true;\n    }\n  };\n}\n// Test Worker capabilities\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL);\n\n    // Native browser on some Samsung devices throws for transferables, let's detect it\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], { type: SCRIPT_TYPE }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var transmuxerWorker = function () {\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n    // pre-calculate constants\n    (function () {\n      var i;\n      types = {\n        avc1: [], // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [], // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      };\n\n      // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length;\n\n      // calculate the total size we need to allocate\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4);\n\n      // copy the payload into the result\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]);\n\n      // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length;\n      // build traf boxes for each track fragment\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i;\n\n      // leave the full box header (4 bytes) all zero\n\n      // write the sample table\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i;\n\n        // assemble the SPSs\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        }\n\n        // assemble the PPSs\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([\n\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF]));\n\n      // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n\n      // audio tracks require less metadata\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      }\n\n      // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader;\n\n      // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0;\n\n        // trun flag constants\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n\n    var toUnsigned$1 = bin.toUnsigned;\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n    // Find the data for a box specified by its path\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n\n        type = parseType(data.subarray(i + 4, i + 8));\n\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n        i = end;\n      }\n\n      // we've finished searching all of data\n      return results;\n    };\n\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']);\n\n      // mdhd timescale\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n\n        tkhd = _findBox(trak, ['tkhd'])[0];\n        if (!tkhd) {\n          return null;\n        }\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n        if (!mdhd) {\n          return null;\n        }\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result;\n\n      // we need info from two childrend of each track fragment box\n      trafs = _findBox(fragment, ['moof', 'traf']);\n\n      // determine the start times for each track\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime;\n\n          // get the track id from the tfhd\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]);\n          // assume a 90kHz clock if no timescale was specified\n          scale = timescale[id] || 90e3;\n\n          // get the base media decode time from the tfdt\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity;\n\n          // convert base time to seconds\n          return baseTime / scale;\n        });\n      }));\n\n      // return the minimum\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          }\n          // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n\n      return destination;\n    };\n\n    // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i];\n\n        // Split on 'aud'-type nal units\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      }\n\n      // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      }\n\n      // Push the final frame\n      frames.push(currentFrame);\n      return frames;\n    };\n\n    // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = [];\n\n      // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts;\n\n      // store some metadata about all the Gops\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration;\n\n      // push the final Gop\n      gops.push(currentGop);\n      return gops;\n    };\n\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount;\n\n        // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    };\n\n    // generate the track's sample table from an array of gops\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          sample = sampleForFrame(currentFrame, dataOffset);\n\n          dataOffset += sample.size;\n\n          samples.push(sample);\n        }\n      }\n      return samples;\n    };\n\n    // generate the track's raw mdat data from an array of gops\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer);\n\n      // For each Gop..\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        // For each Frame..\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n\n          // For each NAL..\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n\n    var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts;\n\n      // Optionally adjust the time so the first segment starts at zero.\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      }\n\n      // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n      // Add to that the distance this segment is from the very first\n      baseMediaDecodeTime += minSegmentDts;\n\n      // baseMediaDecodeTime must not become negative\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0;\n\n      // go through the sei_rbsp parsing each each individual sei_message\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        }\n\n        // Parse payload type\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++];\n\n        // Parse payload size\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++];\n\n        // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        }\n\n        // skip the payload and parse the next message\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    };\n\n    // see ANSI/SCTE 128-1 (2013), section 8.1\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      }\n\n      // itu_t_t35_provider_code should be 49 (ATSC) for captions\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      }\n\n      // the user_identifier should be \"GA94\" to indicate ATSC1 data\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      }\n\n      // finally, user_data_type_code should be 0x03 for caption data\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      }\n\n      // return the user_data_type_structure and strip the trailing\n      // marker bits\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    };\n\n    // see CEA-708-D, section 4.4\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data;\n\n      // if this is just filler, return immediately\n      if (!(userData[0] & 0x40)) {\n        return results;\n      }\n\n      // parse out the cc_data_1 and cc_data_2 fields\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        };\n\n        // capture cc data when cc_valid is 1\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData;\n\n      // Find all `Emulation Prevention Bytes`\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      }\n\n      // If no Emulation Prevention Bytes were found just return the original\n      // array\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      }\n\n      // Create a new array to hold the NAL unit data\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++;\n          // Remove this position index\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n\n    // exports\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    };\n\n    // -----------------\n    // Link To Transport\n    // -----------------\n\n\n    var CaptionStream = function CaptionStream() {\n\n      CaptionStream.prototype.init.call(this);\n\n      this.captionPackets_ = [];\n\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      this.reset();\n\n      // forward data and done events from CCs to this CaptionStream\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets;\n\n      // only examine SEI NALs\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      }\n\n      // parse the sei\n      sei = captionPacketParser.parseSei(event.escapedRBSP);\n\n      // ignore everything but user_data_registered_itu_t_t35\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      }\n\n      // parse out the user data payload\n      userData = captionPacketParser.parseUserData(sei);\n\n      // ignore unrecognized userData\n      if (!userData) {\n        return;\n      }\n\n      // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      }\n\n      // parse out CC data packets and save them for later\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      }\n\n      // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      });\n\n      // sort caption byte-pairs based on their PTS values\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        }\n        // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n      }, this);\n\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    // ----------------------\n    // Session to Application\n    // ----------------------\n\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1, // á\n      0x5c: 0xe9, // é\n      0x5e: 0xed, // í\n      0x5f: 0xf3, // ó\n      0x60: 0xfa, // ú\n      0x7b: 0xe7, // ç\n      0x7c: 0xf7, // ÷\n      0x7d: 0xd1, // Ñ\n      0x7e: 0xf1, // ñ\n      0x7f: 0x2588, // █\n      0x0130: 0xae, // ®\n      0x0131: 0xb0, // °\n      0x0132: 0xbd, // ½\n      0x0133: 0xbf, // ¿\n      0x0134: 0x2122, // ™\n      0x0135: 0xa2, // ¢\n      0x0136: 0xa3, // £\n      0x0137: 0x266a, // ♪\n      0x0138: 0xe0, // à\n      0x0139: 0xa0, //\n      0x013a: 0xe8, // è\n      0x013b: 0xe2, // â\n      0x013c: 0xea, // ê\n      0x013d: 0xee, // î\n      0x013e: 0xf4, // ô\n      0x013f: 0xfb, // û\n      0x0220: 0xc1, // Á\n      0x0221: 0xc9, // É\n      0x0222: 0xd3, // Ó\n      0x0223: 0xda, // Ú\n      0x0224: 0xdc, // Ü\n      0x0225: 0xfc, // ü\n      0x0226: 0x2018, // ‘\n      0x0227: 0xa1, // ¡\n      0x0228: 0x2a, // *\n      0x0229: 0x27, // '\n      0x022a: 0x2014, // —\n      0x022b: 0xa9, // ©\n      0x022c: 0x2120, // ℠\n      0x022d: 0x2022, // •\n      0x022e: 0x201c, // “\n      0x022f: 0x201d, // ”\n      0x0230: 0xc0, // À\n      0x0231: 0xc2, // Â\n      0x0232: 0xc7, // Ç\n      0x0233: 0xc8, // È\n      0x0234: 0xca, // Ê\n      0x0235: 0xcb, // Ë\n      0x0236: 0xeb, // ë\n      0x0237: 0xce, // Î\n      0x0238: 0xcf, // Ï\n      0x0239: 0xef, // ï\n      0x023a: 0xd4, // Ô\n      0x023b: 0xd9, // Ù\n      0x023c: 0xf9, // ù\n      0x023d: 0xdb, // Û\n      0x023e: 0xab, // «\n      0x023f: 0xbb, // »\n      0x0320: 0xc3, // Ã\n      0x0321: 0xe3, // ã\n      0x0322: 0xcd, // Í\n      0x0323: 0xcc, // Ì\n      0x0324: 0xec, // ì\n      0x0325: 0xd2, // Ò\n      0x0326: 0xf2, // ò\n      0x0327: 0xd5, // Õ\n      0x0328: 0xf5, // õ\n      0x0329: 0x7b, // {\n      0x032a: 0x7d, // }\n      0x032b: 0x5c, // \\\n      0x032c: 0x5e, // ^\n      0x032d: 0x5f, // _\n      0x032e: 0x7c, // |\n      0x032f: 0x7e, // ~\n      0x0330: 0xc4, // Ä\n      0x0331: 0xe4, // ä\n      0x0332: 0xd6, // Ö\n      0x0333: 0xf6, // ö\n      0x0334: 0xdf, // ß\n      0x0335: 0xa5, // ¥\n      0x0336: 0xa4, // ¤\n      0x0337: 0x2502, // │\n      0x0338: 0xc5, // Å\n      0x0339: 0xe5, // å\n      0x033a: 0xd8, // Ø\n      0x033b: 0xf8, // ø\n      0x033c: 0x250c, // ┌\n      0x033d: 0x2510, // ┐\n      0x033e: 0x2514, // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    };\n\n    // the index of the last row in a CEA-608 display buffer\n    var BOTTOM_ROW = 14;\n\n    // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n    // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text;\n        // remove the parity bits\n        data = packet.ccData & 0x7f7f;\n\n        // ignore duplicate control codes; the spec demands they're sent twice\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        }\n\n        // Store control codes\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts);\n          // if a caption was being displayed, it's gone now\n          this.flushDisplayed(packet.pts);\n\n          // flip memory\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap;\n\n          // start measuring the time to display the caption\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts;\n\n          // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++;\n\n          // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts);\n\n          // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03;\n\n          // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20);\n\n          // Configure the caption window if we're in roll-up mode\n          if (this.mode_ === 'rollUp') {\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          }\n          // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          }\n\n          // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n    Cea608Stream.prototype = new stream();\n    // Trigger a cue point that captures the current state of the\n    // display buffer\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_\n      // remove spaces from the start and end of the string\n      .map(function (row) {\n        return row.trim();\n      })\n      // combine all text rows to display in one cue\n      .join('\\n')\n      // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn';\n      // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null;\n\n      // Track row and column for proper line-breaking and spacing\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2;\n\n      // This variable holds currently-applied formatting\n      this.formatting_ = [];\n    };\n\n    /**\n     * Sets up control code and related constants for this instance\n     */\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      }\n\n      // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n      this.PADDING_ = 0x0000;\n      // Pop-on Mode\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f;\n      // Roll-up Mode\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d;\n      // paint-on mode\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29;\n      // Erasure\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp';\n        // Spec says to wipe memories when switching to roll-up\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    };\n\n    // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    };\n\n    // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    };\n\n    // Mode Implementations\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_];\n\n      // buffer characters\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i;\n      // clear out inactive rows\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      }\n      // shift displayed rows up\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      }\n      // clear out the bottom row\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    // exports\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n\n    var MAX_TS = 8589934592;\n\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      }\n\n      // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n\n      TimestampRolloverStream.prototype.init.call(this);\n\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n\n        lastDTS = data.dts;\n\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n\n\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            // do not include the null terminator in the tag value\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n\n\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n\n\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n\n\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this);\n\n      // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        }\n\n        // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        }\n\n        // ignore events that don't look like ID3 data\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n          return;\n        }\n\n        // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength;\n\n        // grab the size of the entire frame from the ID3 header\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n          // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n          tagSize += 10;\n        }\n\n        // if the entire frame has not arrived, wait for more data\n        if (bufferSize < tagSize) {\n          return;\n        }\n\n        // collect the entire frame so it can be parsed\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        }\n\n        // find the start of the first frame and the end of the tag\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n          // clip any padding off the end\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        }\n\n        // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame);\n\n            // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size;\n              // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n              this.trigger('timestamp', frame);\n            }\n          }\n          tag.frames.push(frame);\n\n          frameStart += 10; // advance past the frame header\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    _MetadataStream.prototype = new stream();\n\n    var metadataStream = _MetadataStream;\n\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream;\n\n    // object types\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream;\n\n    // constants\n    var MP2T_PACKET_LENGTH = 188,\n\n\n    // bytes\n    SYNC_BYTE = 0x47;\n\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this);\n\n      // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        }\n\n        // While we have enough data for a packet\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          }\n          // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n          startIndex++;\n          endIndex++;\n        }\n\n        // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n    };\n    _TransportPacketStream.prototype = new stream();\n\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n      _TransportParseStream.prototype.init.call(this);\n      self = this;\n\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0;\n\n        // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n        // skip the PSI header and parse the first PMT entry\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset;\n\n        // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n        if (!(payload[5] & 0x01)) {\n          return;\n        }\n\n        // overwrite any existing program map table\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        };\n\n        // the mapping table ends at the end of the current section\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4;\n\n        // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n        // advance the offset to the first entry in the mapping table\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n          // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          }\n\n          // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        }\n\n        // record the map on the packet as well\n        pmt.programMapTable = self.programMapTable;\n      };\n\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n        // pid is a 13-bit field starting at the last bit of packet[1]\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2];\n\n        // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        }\n\n        // parse the rest of the packet based on the type\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n\n          // if there are any packets waiting for a PMT to be found, process them now\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n\n        this.trigger('data', result);\n      };\n    };\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n\n\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n\n        // get the packet length, this will be 0 for video\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]);\n\n        // find out if this packets starts a new keyframe\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n        // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n        ptsDtsFlags = payload[7];\n\n        // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        }\n        // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment;\n\n        // do nothing if there is not enough buffered data for a complete\n        // PES header\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n        event.trackId = stream$$1.data[0].pid;\n\n        // reassemble the packet\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        }\n\n        // parse assembled packet's PES header\n        parsePes(packetData, event);\n\n        // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size;\n\n        // flush pending packets if the conditions are right\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        }\n\n        // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n      this.push = function (data) {\n        ({\n          pat: function pat() {\n            // we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            }\n\n            // if a new packet is starting, we can flush the completed\n            // packet\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            }\n\n            // buffer this fragment until we are sure we've received the\n            // complete payload\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable;\n\n            // translate audio and video streams to tracks\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n    _ElementaryStream.prototype = new stream();\n\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        }\n\n        // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        }\n\n        // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n        while (i + 5 < buffer.length) {\n\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          }\n\n          // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n          // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n          frameEnd = i + frameLength;\n\n          // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n          if (buffer.byteLength < frameEnd) {\n            return;\n          }\n\n          // Otherwise, deliver the complete AAC frame\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          });\n\n          // If the buffer is empty, clear it and return\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++;\n\n          // Remove the finished frame from the buffer and start the process again\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n\n    var adts = _AdtsStream;\n\n    var ExpGolomb;\n\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n    ExpGolomb = function ExpGolomb(workingData) {\n      var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n\n\n      // the current word being examined\n      workingWord = 0,\n\n\n      // :uint\n\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n\n      // ():uint\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      };\n\n      // ():uint\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      };\n\n      // ():void\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n        // track the amount of workingData that has been processed\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      };\n\n      // (count:int):void\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n\n          this.loadWord();\n\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      };\n\n      // (size:int):uint\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n\n\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      };\n\n      // ():uint\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        }\n\n        // we exhausted workingWord and still have not found a 1\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      };\n\n      // ():void\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():void\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      };\n\n      // ():uint\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n        return this.readBits(clz + 1) - 1;\n      };\n\n      // ():int\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      };\n\n      // Some convenience functions\n      // :Boolean\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      };\n\n      // ():int\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n      _NalByteStream.prototype.init.call(this);\n\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n\n        // advance the sync point to a NAL start, if necessary\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              }\n\n              // deliver the NAL unit if it isn't empty\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              }\n\n              // drop trailing zeroes\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              }\n\n              // deliver the NAL unit\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        }\n        // filter out the NAL units that were delivered\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        }\n        // reset the stream state\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n    _NalByteStream.prototype = new stream();\n\n    // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n      self = this;\n\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n\n        nalByteStream.push(packet);\n      };\n\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        }\n        // This triggers data on the H264Stream\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData;\n\n        // Find all `Emulation Prevention Bytes`\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        }\n\n        // If no Emulation Prevention Bytes were found just return the original\n        // array\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        }\n\n        // Create a new array to hold the NAL unit data\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++;\n            // Remove this position index\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n        // some profiles have more optional data we don't need\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];break;\n              case 2:\n                sarRatio = [12, 11];break;\n              case 3:\n                sarRatio = [10, 11];break;\n              case 4:\n                sarRatio = [16, 11];break;\n              case 5:\n                sarRatio = [40, 33];break;\n              case 6:\n                sarRatio = [24, 11];break;\n              case 7:\n                sarRatio = [20, 11];break;\n              case 8:\n                sarRatio = [32, 11];break;\n              case 9:\n                sarRatio = [80, 33];break;\n              case 10:\n                sarRatio = [18, 11];break;\n              case 11:\n                sarRatio = [15, 11];break;\n              case 12:\n                sarRatio = [64, 33];break;\n              case 13:\n                sarRatio = [160, 99];break;\n              case 14:\n                sarRatio = [4, 3];break;\n              case 15:\n                sarRatio = [3, 2];break;\n              case 16:\n                sarRatio = [2, 1];break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n    _H264Stream.prototype = new stream();\n\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n\n    // Constants\n    var _AacStream;\n\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.parseId3TagSize = function (header, byteIndex) {\n        var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n            flags = header[byteIndex + 5],\n            footerPresent = (flags & 16) >> 4;\n\n        if (footerPresent) {\n          return returnSize + 20;\n        }\n        return returnSize + 10;\n      };\n\n      this.parseAdtsSize = function (header, byteIndex) {\n        var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n            middle = header[byteIndex + 4] << 3,\n            highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n        return highTwo | middle | lowThree;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength;\n\n        // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            }\n\n            // check framesize\n            frameSize = this.parseId3TagSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if (everything[byteIndex] & 0xff === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = this.parseAdtsSize(everything, byteIndex);\n\n            // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            if (frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n\n    var aac = _AacStream;\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    // Frames-of-silence to use for filling in missing AAC frames\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n\n    var silence = makeTable(coneOfSilence);\n\n    var ONE_SECOND_IN_TS$1 = 90000,\n\n\n    // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$1;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$1;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n\n    var H264Stream = h264.H264Stream;\n\n    // constants\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility'];\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    // object types\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    // Helper functions\n    var isLikelyAacData, arrayEquals, sumFrameByteLengths;\n\n    isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n      return false;\n    };\n\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n    arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      // compare the value of each element in the array\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n    sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0;\n\n      // sum the byteLength's all each nal unit in the frame\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    };\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        }\n\n        // buffer audio data until end() is called\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes;\n\n        // return early if no audio data has been observed\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.prefixWithSilence_(track, frames);\n\n        // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n        track.samples = this.generateSampleTable_(frames);\n\n        // concatenate the audio data to constuct the mdat\n        mdat = mp4Generator.mdat(this.concatenateFrameData_(frames));\n\n        adtsFrames = [];\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        trackDecodeInfo.clearDtsInfo(track);\n\n        this.trigger('data', { track: track, boxes: boxes });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      // Possibly pad (prefix) the audio track with silence if appending this track\n      // would lead to the introduction of a gap in the audio buffer\n      this.prefixWithSilence_ = function (track, frames) {\n        var baseMediaDecodeTimeTs,\n            frameDuration = 0,\n            audioGapDuration = 0,\n            audioFillFrameCount = 0,\n            audioFillDuration = 0,\n            silentFrame,\n            i;\n\n        if (!frames.length) {\n          return;\n        }\n\n        baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n        // determine frame clock duration based on sample rate, round up to avoid overfills\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$2 / (track.samplerate / 1024));\n\n        if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n          // insert the shortest possible amount (audio gap or audio to video gap)\n          audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n          // number of full frames in the audio gap\n          audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n          audioFillDuration = audioFillFrameCount * frameDuration;\n        }\n\n        // don't attempt to fill gaps smaller than a single frame or larger\n        // than a half second\n        if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$2 / 2) {\n          return;\n        }\n\n        silentFrame = silence[track.samplerate];\n\n        if (!silentFrame) {\n          // we don't have a silent frame pregenerated for the sample rate, so use a frame\n          // from the content instead\n          silentFrame = frames[0].data;\n        }\n\n        for (i = 0; i < audioFillFrameCount; i++) {\n          frames.splice(i, 0, {\n            data: silentFrame\n          });\n        }\n\n        track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      };\n\n      // If the audio segment extends before the earliest allowed dts\n      // value, remove AAC frames until starts at or after the earliest\n      // allowed DTS so that we don't end up with a negative baseMedia-\n      // DecodeTime for the audio track\n      this.trimAdtsFramesByEarliestDts_ = function (adtsFrames) {\n        if (track.minSegmentDts >= earliestAllowedDts) {\n          return adtsFrames;\n        }\n\n        // We will need to recalculate the earliest segment Dts\n        track.minSegmentDts = Infinity;\n\n        return adtsFrames.filter(function (currentFrame) {\n          // If this is an allowed frame, keep it and record it's Dts\n          if (currentFrame.dts >= earliestAllowedDts) {\n            track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n            track.minSegmentPts = track.minSegmentDts;\n            return true;\n          }\n          // Otherwise, discard it\n          return false;\n        });\n      };\n\n      // generate the track's raw mdat data from an array of frames\n      this.generateSampleTable_ = function (frames) {\n        var i,\n            currentFrame,\n            samples = [];\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n          samples.push({\n            size: currentFrame.data.byteLength,\n            duration: 1024 // For AAC audio, all samples contain 1024 samples\n          });\n        }\n        return samples;\n      };\n\n      // generate the track's sample table from an array of frames\n      this.concatenateFrameData_ = function (frames) {\n        var i,\n            currentFrame,\n            dataOffset = 0,\n            data = new Uint8Array(sumFrameByteLengths(frames));\n\n        for (i = 0; i < frames.length; i++) {\n          currentFrame = frames[i];\n\n          data.set(currentFrame.data, dataOffset);\n          dataOffset += currentFrame.data.byteLength;\n        }\n        return data;\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n\n      this.gopCache_ = [];\n\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n        // record the track config\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        }\n\n        // buffer video until flush() is called\n        nalUnits.push(nalUnit);\n      };\n\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes;\n\n        // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        }\n\n        // Return early if no video data has been observed\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        }\n\n        // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames);\n\n        // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion);\n            // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        }\n\n        // Trim gops to align with gopsToAlignWith\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            });\n\n            // Keep a maximum of 6 GOPs in the cache\n            this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n            // Clear nalUnits\n            nalUnits = [];\n\n            // return early no gops can be aligned with desired gopsToAlignWith\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          }\n\n          // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n          trackDecodeInfo.clearDtsInfo(track);\n\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops);\n\n        // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n        track.samples = frameUtils.generateSampleTable(gops);\n\n        // Concatenate the video data and construct the mdat\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n\n        // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n        // Bump the sequence number for next time\n        sequenceNumber++;\n\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n\n        this.trigger('data', { track: track, boxes: boxes });\n\n        this.resetStream_();\n\n        // Continue with the flush process now\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n\n        // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n        config = undefined;\n        pps = undefined;\n      };\n\n      // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n\n\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n\n\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i;\n\n        // Search for the GOP nearest to the beginning of this nal unit\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop;\n\n          // Reject Gops with different SPS or PPS\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          }\n\n          // Reject Gops that would require a negative baseMediaDecodeTime\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          }\n\n          // The distance between the end of the gop and the start of the nalUnit\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration;\n\n          // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          }\n\n          // current gop starts before the current gop we want to align on. so increment gop\n          // index\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     */\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this);\n\n      // Take output from multiple\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        }\n        // buffer incoming id3 tags until the final flush\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        }\n\n        // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n\n      initSegment = mp4Generator.initSegment(this.pendingTracks);\n\n      // Create a new typed array to hold the init segment\n      event.initSegment = new Uint8Array(initSegment.byteLength);\n\n      // Create an init segment containing a moov\n      // and track definitions\n      event.initSegment.set(initSegment);\n\n      // Create a new typed array to hold the moof+mdats\n      event.data = new Uint8Array(this.pendingBytes);\n\n      // Append each moof+mdat (one per track) together\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      }\n\n      // Translate caption PTS times into second offsets into the\n      // video timeline for the segment, and add track info\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts - timelineStartPts;\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts - timelineStartPts;\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      }\n\n      // Translate ID3 frame PTS times into second offsets into the\n      // video timeline for the segment\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts - timelineStartPts;\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      }\n      // We add this to every single emitted segment even though we only need\n      // it for the first\n      event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n      // Reset stream state\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0;\n\n      // Emit the built segment\n      this.trigger('data', event);\n\n      // Only emit `done` if all tracks have been flushed and emitted\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            };\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            // Set up the final part of the audio pipeline\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream();\n\n        // set up the parsing pipeline\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream;\n\n        // disassemble MPEG2-TS packets into elementary streams\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream);\n\n        // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n\n        // Hook up CEA-608/708 caption stream\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length;\n\n            // scan the tracks listed in the metadata\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            }\n\n            // hook up the video segment stream to the first track with h264 data\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo;\n                  // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n\n              // Set up the final part of the video pipeline\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n\n              // Set up the final part of the audio pipeline\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        });\n\n        // Re-emit any data coming from the coalesce stream to the outside world\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        // Let the consumer know we have finished flushing the entire pipeline\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      // hook up the segment streams once track metadata is delivered\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n          audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n          videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      // feed incoming data to the front of the parsing pipeline\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      };\n\n      // flush any buffered data\n      this.flush = function () {\n        hasFlushed = true;\n        // Start at the top of the pipeline and flush all pending work\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      // Caption data has to be reset when seeking outside buffered range\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    _Transmuxer.prototype = new stream();\n\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$1 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n      return result;\n    },\n\n\n    // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i;\n\n        // iterate past any SPSs\n        offset = 6;\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        // iterate past any PPSs\n        numOfPictureParameterSets = data[offset];\n        offset++;\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$1(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$1(data.subarray(i, i + 4)));\n          i += 4;\n        }\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$1(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8;\n\n        // parse out the name field\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n          result.name += String.fromCharCode(data[i]);\n        }\n        // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n        result.name = decodeURIComponent(escape(result.name));\n\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        };\n\n        // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n\n        // convert fixed-point, base 16 back to a number\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n\n        i = 8;\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2;\n        // convert fixed-point, base 16 back to a number\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n\n\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n\n\n        // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n\n\n        // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n\n\n        // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n\n\n        // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n\n\n        // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n\n\n        // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        }\n\n        // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n          result.samples.push(sample);\n        }\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box;\n\n      // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        // parse type-specific data\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n        box.size = size;\n        box.type = type;\n\n        // store this box and move to the next\n        result.push(box);\n        i = end;\n      }\n      return result;\n    };\n\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' ');\n\n      // iterate over all the boxes\n      return inspectedMp4.map(function (box, index) {\n\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' +\n\n        // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes';\n\n          // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key];\n\n          // print out raw bytes as hexademical\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n            if (!bytes) {\n              return prefix + '<>';\n            }\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          }\n\n          // stringify generic objects\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + (\n\n        // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun\n    };\n\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4;\n\n        // Bail if this doesn't appear to be an H264 stream\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n          sample.pts = currentDts + sample.compositionTimeOffset;\n\n          currentDts += sample.duration;\n        });\n\n        allSamples = allSamples.concat(samples);\n      });\n\n      return allSamples;\n    };\n\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']);\n      // To get SEI NAL units\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = [];\n\n      // Pair up each traf with a mdat as moofs and mdats are in pairs\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']);\n        // Exactly 1 tfhd per traf\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']);\n        // Either 0 or 1 tfdt per traf\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals;\n\n        // Only parse video data for the chosen video track\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n\n      return captionNals;\n    };\n\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1;\n\n      // Stores segments seen before trackId and timescale are set\n      var segmentCache;\n      // Stores video track ID of the track being parsed\n      var trackId;\n      // Stores the timescale of the track being parsed\n      var timescale;\n      // Stores captions parsed so far\n      var parsedCaptions;\n\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true;\n\n        // Collect dispatched captions\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && (typeof timescales === 'undefined' ? 'undefined' : _typeof(timescales)) === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null;\n\n          // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId];\n\n          // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        }\n\n        // Now that a timescale and trackId is set, parse cached segments\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals);\n        // Force the parsed captions to be dispatched\n        this.flushStream();\n\n        return parsedCaptions;\n      };\n\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n\n      /**\n        * Reset caption buckets for new data\n       **/\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n\n      /**\n        * Reset caption parser\n       **/\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n\n        var typedArray = segment.data;\n\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({ action: 'done' });\n      });\n\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck$$1(this, MessageHandlers);\n\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      createClass$$1(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n\n          this.transmuxer.push(segment);\n        }\n\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n\n    return transmuxerWorker;\n  }();\n});\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n// Default codec parameters if none were provided for video and/or audio\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2;\n\n  // parse the video codec\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  }\n\n  // parse the last field of the audio codec\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n\n  return result;\n};\n\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n  return 'mp2t';\n};\n\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {};\n  // Default condition for a traditional HLS (no demuxed audio/video)\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    // Handle the case where we are in a multiple-audio track scenario\n    if (audioGroup) {\n      isMaat = true;\n      // Start with the everything demuxed then...\n      isMuxed = false;\n      // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  }\n\n  // Generate the final codec strings from the codec object generated above\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  }\n\n  // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    }\n\n    // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n    return [bothVideoAudio, justAudio];\n  }\n\n  // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n  if (!codecStrings.video) {\n    return [justAudio];\n  }\n\n  // When not using separate audio media groups, audio and video is\n  // *always* muxed\n  return [bothVideoAudio];\n};\n\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\nvar parseContentType = function parseContentType(type) {\n  var object = { type: '', parameters: {} };\n  var parameters = type.trim().split(';');\n\n  // first parameter should always be content-type\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n\n      object.parameters[name] = value;\n    }\n  });\n\n  return object;\n};\n\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\nvar isAudioCodec = function isAudioCodec(codec) {\n  return (/mp4a\\.\\d+.\\d+/i.test(codec)\n  );\n};\n\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\nvar isVideoCodec = function isVideoCodec(codec) {\n  return (/avc1\\.[\\da-f]+/i.test(codec)\n  );\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  }\n\n  // pts value for current time + 3 seconds to give a bit more wiggle room\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  }\n\n  // clamp remove range start to 0 index\n  j = Math.max(j, 0);\n\n  updatedBuffer.splice(j, i - j + 1);\n\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  // neither buffer has been created yet\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  }\n\n  // only one buffer is configured\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are configured\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  }\n\n  // both buffers are empty\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  }\n\n  // Handle the case where we have both buffers and create an\n  // intersection of the two\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length;\n\n  // A) Gather up all start and end times\n  while (count--) {\n    extents.push({ time: videoBuffered.start(count), type: 'start' });\n    extents.push({ time: videoBuffered.end(count), type: 'end' });\n  }\n  count = audioBuffered.length;\n  while (count--) {\n    extents.push({ time: audioBuffered.start(count), type: 'start' });\n    extents.push({ time: audioBuffered.end(count), type: 'end' });\n  }\n  // B) Sort them by time\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  });\n\n  // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++;\n\n      // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--;\n\n      // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    }\n\n    // F) Record overlapping ranges\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n\n/**\n * @file virtual-source-buffer.js\n */\n\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits$1(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck$1(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn$1(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    });\n\n    // append muxed segments to their respective native buffers as\n    // soon as they are available\n    _this.transmuxer_ = new TransmuxWorker();\n    _this.transmuxer_.postMessage({ action: 'init', options: options });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    };\n\n    // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true;\n\n          // reset gop buffer on timestampoffset as this signals a change in timeline\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0;\n\n          // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    });\n\n    // setting the append window affects both source buffers\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    });\n\n    // this buffer is \"updating\" if either of its native buffers are\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    });\n\n    // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n  createClass$1(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment;\n\n      // Cast ArrayBuffer to TypedArray\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n\n      createTextTracksIfNecessary(this, this.mediaSource_, segment);\n\n      // Add the segments to the pendingBuffers array\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      }\n\n      // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n      this.processPendingSegments_();\n      return;\n    }\n\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        }\n\n        // Do nothing if a SourceBuffer of this type already exists\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null;\n\n        // If the mediasource already has a SourceBuffer for the codec\n        // use that\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_'];\n          // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer;\n\n        // Wire up the events to the SourceBuffer\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              }\n              // if the other type if updating we don't trigger\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({ action: 'flush' });\n    }\n\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      }\n\n      // Remove Metadata Cues (id3)\n      removeCuesFromTrack(start, end, this.metadataTrack_);\n\n      // Remove Any Captions\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      };\n\n      // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n\n        segmentObj[type].initSegment = initSegment;\n\n        // Gather any captions into a single array\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        }\n\n        // Gather any metadata into a single array\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments);\n\n      // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({ type: 'audioinfo', info: sortedSegments.audio.info });\n      }\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({ type: 'videoinfo', info: sortedSegments.video.info });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false;\n\n      // Merge multiple video and audio segments into one and append\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n        // TODO: are video tracks the only ones with text tracks?\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      }\n\n      // We are no longer in the internal \"updating\" state\n      this.bufferUpdating_ = false;\n    }\n\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes);\n\n        // Combine the individual segments into one large typed-array\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({ action: 'reset' });\n      }\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits$1(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck$1(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn$1(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n\n    _this.nativeMediaSource_ = new window$1.MediaSource();\n    // delegate to the native MediaSource's methods by default\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    }\n\n    // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    });\n\n    // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n    _this.sourceBuffers = [];\n\n    _this.activeSourceBuffers_ = [];\n\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0;\n\n      // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n        _this.activeSourceBuffers_.push(sourceBuffer);\n        return;\n      }\n\n      // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n      var disableCombined = false;\n      var disableAudioOnly = true;\n\n      // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n        /* eslinst-enable */\n\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({ action: 'resetCaptions' });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    };\n\n    // Re-emit MediaSource events on the polyfill\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this);\n\n    // capture the associated player when the MediaSource is\n    // successfully attached\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_);\n      // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    });\n\n    // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n\n      this.sourceBuffers.length = 0;\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      }\n\n      // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n  createClass$1(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type);\n\n      // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_();\n\n          // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n\n/**\n * @file videojs-contrib-media-sources.js\n */\nvar urlCount = 0;\n\n// ------------\n// Media Source\n// ------------\n\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\nvideojs$1.mediaSources = {};\n\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({ type: 'sourceopen', swfId: swfId });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0;\n\n    // use the native MediaSource to generate an object URL\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    }\n    // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    }\n\n    // build a URL that can be used to map back to the emulated\n    // MediaSource\n    url = objectUrlPrefix + urlCount;\n\n    urlCount++;\n\n    // setup the mapping back to object\n    videojs$1.mediaSources[url] = object;\n\n    return url;\n  }\n};\n\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\n\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  });\n\n  // First update the playlists in playlist list\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  }\n\n  // Then update media group playlists\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate;\n        // update the playlist reference within media groups\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits$1(DashPlaylistLoader, _EventTarget);\n\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck$1(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn$1(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    }\n\n    // event naming?\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    });\n\n    // live playlist staleness timeout\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    });\n\n    // initialize the loader state\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn$1(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n\n    _this.state = 'HAVE_METADATA';\n    _this.started = true;\n    // we only should have one playlist so select it\n    _this.media(srcUrlOrPlaylist);\n    // trigger async to mimic behavior of HLS, where it must request a playlist\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass$1(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      }\n\n      // setter\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state;\n\n      // find the playlist object if the target playlist has been specified by URI\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n\n      this.state = 'HAVE_METADATA';\n\n      // switching to the active playlist is a no-op\n      if (!mediaChange) {\n        return;\n      }\n\n      // switching from an already loaded playlist\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n\n      this.refreshMedia_();\n\n      // trigger media change if the active media has been updated\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n\n      master.uri = this.srcUrl;\n\n      // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n\n        master.playlists[i].uri = phonyUri;\n        // set up by URI references\n        master.playlists[phonyUri] = master.playlists[i];\n      }\n\n      // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri;\n          // setup URI references\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      this.started = true;\n\n      // request the specified URL\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this2.request = null;\n\n        if (error) {\n          _this2.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this2.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this2.state === 'HAVE_NOTHING') {\n            _this2.started = false;\n          }\n          return _this2.trigger('error');\n        }\n\n        _this2.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this2.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this2.masterLoaded_ = Date.now();\n        }\n\n        _this2.syncClientServerClock_(_this2.onClientServerClockSync_.bind(_this2));\n      });\n    }\n\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this3 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_);\n\n      // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this3.clientOffset_ = _this3.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this3.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this3.clientOffset_ = serverTime - Date.now();\n\n        done();\n      });\n    }\n\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this4 = this;\n\n      this.master = this.parseMasterXml();\n\n      this.state = 'HAVE_MASTER';\n\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n      // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n      window$1.setTimeout(function () {\n        _this4.trigger('loadedmetadata');\n      }, 0);\n\n      // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this4.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this5 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        }\n\n        // clear the loader's request reference\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        var newMaster = _this5.parseMasterXml();\n\n        _this5.master = updateMaster$1(_this5.master, newMaster);\n\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, _this5.master.minimumUpdatePeriod);\n      });\n    }\n\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this6 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this6.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck$1(this, SourceUpdater);\n\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass$1(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true;\n\n      // run completion handlers and process callbacks as updateend\n      // events fire\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n\n      this.runCallback_();\n    }\n\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n      return this.sourceBuffer_.buffered;\n    }\n\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n      return this.timestampOffset_;\n    }\n\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0;\n\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n\n  stats.bytesReceived = progressEvent.loaded;\n  // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n\n  return stats;\n};\n\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response);\n\n    // Initialize CaptionParser if it hasn't been yet\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    // stop processing if received empty content\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    }\n\n    // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n\n  // this is an encrypted segment\n  // incrementally decrypt the segment\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n\n/**\n * The purpose of this function is to get the most pertinent error from the\n * array of errors.\n * For instance if a timeout and two aborts occur, then the aborts were\n * likely triggered by the timeout so return that error object.\n */\nvar getMostImportantError = function getMostImportantError(errors) {\n  return errors.reduce(function (prev, err) {\n    return err.code > prev.code ? err : prev;\n  });\n};\n\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var errors = [];\n  var count = 0;\n\n  return function (error, segment) {\n    if (error) {\n      // If there are errors, we have to abort any outstanding requests\n      abortAll(activeXhrs);\n      errors.push(error);\n    }\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (errors.length > 0) {\n        var worstError = getMostImportantError(errors);\n\n        return doneFn(worstError, segment);\n      }\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      }\n      // Otherwise, everything is ready just continue\n      return doneFn(null, segment);\n    }\n  };\n};\n\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event));\n\n    // record the time that we receive the first byte of data\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn);\n\n  // optionally, request the decryption key\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n\n    activeXhrs.push(keyXhr);\n  }\n\n  // optionally, request the associated media init segment\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n\n// Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n\n  return leftBandwidth - rightBandwidth;\n};\n\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE;\n\n  // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  });\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  }\n\n  // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1];\n\n  // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  // filter out playlists without resolution information\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  });\n\n  // sort variants by resolution\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  });\n\n  // if we have the exact resolution as the player use it\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1];\n  // ensure that we pick the highest bandwidth variant that have exact resolution\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0;\n\n  // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    });\n\n    // find all the variants have the same smallest resolution\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    });\n\n    // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  // fallback chain of variants\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  return chosenRep ? chosenRep.playlist : null;\n};\n\n// Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10));\n};\n\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController;\n\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  });\n\n  // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime);\n    // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  });\n\n  // Sort by bandwidth DESC\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n\n  return rebufferingEstimates[0] || null;\n};\n\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled);\n\n  // Sort ascending by bitrate\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  });\n\n  // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({ type: 'usage', name: 'hls-608' });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n\n/**\n * @file segment-loader.js\n */\n\n// in ms\nvar CHECK_BUFFER_DELAY = 500;\n\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments;\n\n  // determine a few boolean values to help make the branch below easier\n  // to read\n  var appendedLastSegment = segmentIndex === segments.length;\n\n  // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  }\n\n  // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits$1(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck$1(this, SegmentLoader);\n\n    // check pre-conditions\n    var _this = possibleConstructorReturn$1(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    }\n    // public properties\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = { rate: 0, count: 0 };\n    _this.roundTrip = NaN;\n    _this.resetStats_();\n    _this.mediaIndex = null;\n\n    // private settings\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n\n    // private instance variables\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null;\n\n    // Fragmented mp4 playback\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {};\n    // Fmp4 CaptionParser\n    _this.captionParser_ = new CaptionParser();\n\n    _this.decrypter_ = settings.decrypter;\n\n    // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    });\n\n    // ...for determining the fetch location\n    _this.fetchAtBuffer_ = false;\n\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  createClass$1(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n\n      this.abort_();\n\n      // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n      this.state = 'READY';\n\n      // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      }\n\n      // clear out the segment being processed\n      this.pendingSegment_ = null;\n    }\n\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && (\n      // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_();\n\n      // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n      if (!this.playlist_) {\n        return;\n      }\n\n      // not sure if this is the best place for this\n      this.syncController_.setDateTimeMapping(this.playlist_);\n\n      // if all the configuration is ready, initialize and begin loading\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options;\n\n      // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']');\n\n      // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n      this.trigger('syncinfoupdate');\n\n      // if we were unpaused but waiting for a playlist, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        }\n\n        // the rest of this function depends on `oldPlaylist` being defined\n        return;\n      }\n\n      // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      this.logger_('live window shift [' + mediaSequenceDiff + ']');\n\n      // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      }\n\n      // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n\n        this.checkBufferTimeout_ = null;\n      }\n    }\n\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter;\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done);\n      // clears fmp4 captions\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      }\n\n      // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      }\n\n      // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      }\n\n      // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      }\n\n      // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      }\n\n      // Under normal playback conditions fetching is a simple walk forward\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      }\n\n      // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      }\n\n      // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived);\n\n      // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1;\n\n      // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n\n      var minimumTimeSaving = 0.5;\n\n      // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      }\n\n      // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo),\n      // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);\n\n      // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      }\n\n      // The request was aborted and the SegmentLoader has already been reset\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      // an error occurred from the active pendingSegment_ so reset everything\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n\n        // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause();\n\n        // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        }\n\n        // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime;\n\n      // if this request included an initialization segment, save that data\n      // to the initSegment cache\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n\n      segmentInfo.bytes = simpleSegment.bytes;\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      // This has fmp4 captions, add them to text tracks\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        });\n        // Reset stored captions since we added parsed\n        // captions to a text track at this point\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo);\n\n      // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && (\n      // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset);\n        // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING';\n\n      // if the media initialization segment is changing, append it\n      // before the content segment\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n\n      this.state = 'READY';\n\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline;\n\n      // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n      this.trigger('syncinfoupdate');\n\n      // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      }\n\n      // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n\n      // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate;\n      // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1;\n      // Multiply by 8000 to convert from bytes/millisecond to bits/second\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000);\n\n      // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end;\n\n      // Do not try adding the cue if the start and end times are invalid.\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data);\n\n      // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n      cue.value = value;\n\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\n/**\n * @file vtt-segment-loader.js\n */\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits$1(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, VTTSegmentLoader);\n\n    // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n    var _this = possibleConstructorReturn$1(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  createClass$1(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track;\n\n      // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      }\n\n      // see if we need to begin loading immediately\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n      return segmentInfo;\n    }\n\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n          _this3.state = 'READY';\n          _this3.pause();\n          _this3.trigger('error');\n        });\n\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n\n      this.handleUpdateEnd_();\n    }\n\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = { MPEGTS: 0, LOCAL: 0 };\n\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      }\n\n      // otherwise extend cue until a CUE-IN is found\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime;\n        // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0;\n\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray$1(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n\nvar tsprobe = tsInspector.inspect;\n\nvar syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start);\n\n        // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time);\n\n          // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n\n      return syncPoint;\n    }\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits$1(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck$1(this, SyncController);\n\n    // Segment Loader state variables...\n    // ...for synching across variants\n    var _this = possibleConstructorReturn$1(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined;\n\n    // ...for synching across variants\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n  createClass$1(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      }\n\n      // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n      return this.selectSyncPoint_(syncPoints, { key: 'time', value: currentTime });\n    }\n\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0);\n\n      // Without sync-points, there is not enough information to determine the expired time\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      });\n\n      // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = [];\n\n      // Try to find a sync-point in by utilizing various strategies...\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n\n      return bestSyncPoint;\n    }\n\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n\n      // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo);\n\n          // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment;\n\n      // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n  var decrypterWorker = function () {\n\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck$$1 = function classCallCheck$$1(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass$$1 = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits$$1 = function inherits$$1(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn$$1 = function possibleConstructorReturn$$1(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0;\n\n      // Compute double and third tables\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x;\n\n        // Compute MixColumns\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      }\n\n      // Compactify. Considerable speedup on Firefox.\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    var aesTables = null;\n\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck$$1(this, AES);\n\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        }\n        // then make a copy of that object for use\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey];\n\n        // schedule encryption keys\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1];\n\n          // apply sbox\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n            // shift rows and add rcon\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        }\n\n        // schedule decryption keys\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1];\n        // state variables a,b,c,d are loaded with pre-whitened data\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0;\n\n        // key.length === 2 ?\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1];\n\n        // load up the tables\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4];\n\n        // Inner rounds. Cribbed from OpenSSL.\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;b = b2;c = c2;\n        }\n\n        // Last round.\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;a = b;b = c;c = d;d = a2;\n        }\n      };\n\n      return AES;\n    }();\n\n    /**\n     * @file stream.js\n     */\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n    var Stream = function () {\n      function Stream() {\n        classCallCheck$$1(this, Stream);\n\n        this.listeners = {};\n      }\n\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      };\n\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        }\n\n        // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n\n    /**\n     * @file async-stream.js\n     */\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits$$1(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck$$1(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn$$1(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n      var decipher = new AES(Array.prototype.slice.call(key));\n\n      // byte and word-level access for the decrypted output\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer);\n\n      // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0;\n\n      // iteration variable\n      var wordIx = void 0;\n\n      // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3];\n\n      // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n        // decrypt the block\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n        // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n        // setup the IV for the next round\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck$$1(this, Decrypter$$1);\n\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n\n        this.asyncStream_ = new AsyncStream$$1();\n\n        // split up the encryption job and do the individual chunks asynchronously\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        }\n        // invoke the done() callback when everything is finished\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass$$1(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n\n      return transferable;\n    };\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n\n        /* eslint-disable no-new, handle-callback-err */\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n\n    return decrypterWorker;\n  }();\n});\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    }\n\n    // Non-destructive resync\n    segmentLoader.resyncLoader();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    }\n\n    // destructive reset\n    segmentLoader.resetEverything();\n\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n\n      stopLoaders(segmentLoader, mediaType);\n\n      // switch back to default audio track\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n\n      stopLoaders(segmentLoader, mediaType);\n\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\n\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack());\n\n      // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions);\n\n      // If the player isn't paused, ensure that the segment loader is running\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = { main: { default: { default: true } } };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({ id: variantLabel, playlistLoader: playlistLoader }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n\n        setupListeners[type](type, properties.playlistLoader, settings);\n\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n\n    // setup single error event handler for the segment loader\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n\n        // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        }\n\n        // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n        groups[groupId].push(videojs$1.mergeOptions({ id: variantLabel }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            enabled: false,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls;\n\n  // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  });\n\n  // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n\n  // custom audio track change event handler for usage event\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({ type: 'usage', name: 'hls-audio-change' });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  });\n\n  // clear existing audio tracks and add the ones we just created\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n\n  return mediaTypes;\n};\n\n/**\n * @file master-playlist-controller.js\n */\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n\nvar Hls = void 0;\n\n// SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits$1(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck$1(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn$1(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n\n    _this.mediaTypes_ = createMediaTypes();\n\n    _this.mediaSource = new videojs$1.MediaSource();\n\n    // load the media source into the player\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n    _this.setupMasterPlaylistLoaderListeners_();\n\n    // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options);\n\n    // alternate audio track\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    // Create SegmentLoader stat-getters\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n    return _this;\n  }\n\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  createClass$1(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // if this isn't a live video and preload permits, start\n        // downloading segments\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n        _this2.updateDuration();\n\n        // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n        _this2.mainSegmentLoader_.pause();\n      });\n\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000;\n\n        // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        }\n\n        // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          });\n          // useful for monitoring QoS\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-disabled' });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({ type: 'usage', name: 'hls-rendition-enabled' });\n      });\n    }\n\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-demuxed' });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-webvtt' });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-aes' });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-fmp4' });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-alternate-audio' });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({ type: 'usage', name: 'hls-playlist-cue-tags' });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n        var buffered = _this3.tech_.buffered();\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine();\n\n        // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n        if (!currentPlaylist.endList ||\n        // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE ||\n        // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH ||\n        // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({ type: 'usage', name: 'hls-timestamp-offset' });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n\n        this.mainSegmentLoader_.resetLoader();\n        // don't need to reset audio as it is reset when media changes\n      }\n    }\n\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media);\n\n      // delete all buffered data to allow an immediate quality switch, then seek\n      // in place to give the browser a kick to remove any cached frames from the\n      // previous rendition\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause\n        // segments from the previously enabled rendition to load before the new playlist\n        // has finished loading\n        _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n      });\n\n      // don't need to reset audio as it is reset when media changes\n    }\n\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable();\n\n      // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media();\n\n      // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      }\n\n      // when the video is a live stream\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n            _this5.seekTo_(seekable$$1.end(0));\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n\n          return false;\n        }\n\n        // trigger firstplay to inform the source handler to ignore the next seek event\n        this.trigger('firstplay');\n        // seek to the live point\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      };\n      // we can begin loading now that everything is ready\n      this.load();\n      return true;\n    }\n\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play();\n\n        // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      }\n\n      // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      var bufferedEnd = buffered.end(buffered.length - 1);\n\n      // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0;\n\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration;\n\n      // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n      // Blacklist this playlist\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({ type: 'usage', name: 'hls-rendition-blacklisted' });\n\n      // Select a new playlist\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      }\n\n      // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      }\n\n      // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n      if (buffered && buffered.length) {\n        return currentTime;\n      }\n\n      // cancel outstanding requests so we begin buffering at the new\n      // location\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      }\n\n      // start segment loader loading in case they are paused\n      this.load();\n    }\n\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n\n      this.tech_.trigger('seekablechanged');\n    }\n\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n      var setDuration = function setDuration() {\n        _this6.mediaSource.duration = newDuration;\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      }\n\n      // if the duration has changed, invalidate the cached value\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0;\n\n      // wait until a media playlist is available and the Media Source is\n      // attached\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes);\n      // exclude any incompatible variant streams from future playlist\n      // selection\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter =\n      // If there is more than one mime type\n      mimeTypes.length > 1 &&\n      // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 &&\n      // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ?\n      // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() :\n      // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        }\n\n        // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        }\n\n        // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n};\n\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck$1(this, Representation);\n\n  // Get a reference to a bound version of fastQualityChange_\n  var fastChangeFunction = hlsHandler.masterPlaylistController_.fastQualityChange_.bind(hlsHandler.masterPlaylistController_);\n\n  // some playlist attributes are optional\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH;\n\n  // The id is simply the ordinality of the media playlist\n  // within the master playlist\n  this.id = id;\n\n  // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, fastChangeFunction);\n};\n\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists;\n\n  // Add a single API-specific function to the HlsHandler instance\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n// Set of events that reset the playback-watcher time check logic and clear the timeout\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck$1(this, PlaybackWatcher);\n\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n\n    // Define the dispose function to clean up our events\n    this.dispose = function () {\n      _this.logger_('dispose');\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n      _this.tech_.off('waiting', waitingHandler);\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      _this.tech_.off('canplay', canPlayHandler);\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n      _this.cancelTimer_();\n    };\n  }\n\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  createClass$1(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1);\n\n        // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0);\n\n        // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      }\n\n      // All tech waiting checks failed. Use last resort correction\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime);\n\n      // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');\n\n        // unknown waiting corrections may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-unknown-waiting' });\n        return;\n      }\n    }\n\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint);\n\n        // live window resyncs may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-live-resync' });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n\n        // video underflow may be useful for monitoring QoS\n        this.tech_.trigger({ type: 'usage', name: 'hls-video-underflow' });\n        return true;\n      }\n\n      // check for gap\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      }\n\n      // All checks failed. Returning false to indicate failure to correct waiting\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0));\n\n      // only seek if we still have not played\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n\n      this.tech_.trigger({ type: 'usage', name: 'hls-gap-skip' });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i);\n\n        // gap is starts no more than 4 seconds back\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({ IWillNotUseThisInPlugins: true });\n    var sourceObj = tech.currentSource_;\n\n    return next(sourceObj);\n  }\n};\n\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n\n  player.ready(function () {\n    player.trigger({ type: 'usage', name: 'hls-error-reload-initialized' });\n  });\n\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n\n    player.one('loadedmetadata', loadedMetadataHandler);\n\n    player.src(sourceObj);\n    player.trigger({ type: 'usage', name: 'hls-error-reload' });\n    player.play();\n  };\n\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({ type: 'usage', name: 'hls-error-reload-canceled' });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n\n    return localOptions.getSource.call(player, setSource);\n  };\n\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents);\n\n  // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n  player.reloadSourceOnError = reinitPlugin;\n};\n\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.2.4\";\n\n// since VHS handles HLS and DASH (and in the future, more types), use * to capture all\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    }\n  };\n});\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n\n  xhr: xhrFactory()\n};\n\n// 0.5 MB/s\nvar INITIAL_BANDWIDTH = 4194304;\n\n// Define getter/setters for config properites\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n};\n\n// HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  // upsert the content types based on the selected playlist\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    }\n\n    // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions;\n    }\n  }\n};\n\n/**\n * Whether the browser has built-in HLS support.\n */\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video');\n\n  // native HLS is definitely not supported if HTML5 video isn't\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  // HLS manifests can go by many mime-types\n  var canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n\n  return canPlay.some(function (canItPlay) {\n    return (/maybe|probably/i.test(video.canPlayType(canItPlay))\n    );\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return (/maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'))\n  );\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits$1(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck$1(this, HlsHandler);\n\n    // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n    var _this = possibleConstructorReturn$1(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({ type: 'usage', name: 'hls-player-access' });\n            return _this;\n          }\n        });\n      }\n\n      // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n      _player.vhs = _this;\n      // deprecated, for backwards compatibility\n      _player.dash = _this;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    }\n\n    // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    });\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n    return _this;\n  }\n\n  createClass$1(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this;\n\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      // start playlist selection at a reasonable bandwidth for\n      // broadband internet (0.5 MB/s) or mobile (0.0625 MB/s)\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = INITIAL_BANDWIDTH;\n      }\n\n      // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === INITIAL_BANDWIDTH;\n\n      // grab options passed to player.src\n      ['withCredentials', 'bandwidth'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n\n      this.bandwidth = this.options_.bandwidth;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this;\n\n      // do nothing if the src is falsey\n      if (!_src) {\n        return;\n      }\n      this.setOptions_();\n      // add master playlist controller options\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type);\n      // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n\n        player.error(_this3.masterPlaylistController_.error);\n      });\n\n      // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this);\n\n      // re-expose some internal objects for backwards compatibility with < v2\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource;\n\n      // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput;\n            // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth;\n            // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      });\n\n      // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      });\n\n      // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      get$2(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n}\n\n// register source handlers with the appropriate techs\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/video.js/dist/video.es.js\n// module id = 63pp\n// module chunks = 0","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/aes-decrypter/dist/aes-decrypter.es.js\n// module id = 6gfP\n// module chunks = 0","'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/h264.js\n// module id = 7GJ1\n// module chunks = 0","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/data/silence.js\n// module id = 7JOd\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      return row.trim();\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/caption-stream.js\n// module id = 8Ig8\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/tools/caption-packet-parser.js\n// module id = 8KjM\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/probe.js\n// module id = 9ltH\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = BEQ0\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 0","module.exports = __webpack_public_path__ + \"video.76aa451a.mp4\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/video.mp4\n// module id = Eiv8\n// module chunks = 0","/*\n * Video.js plugin for Pannellum\n * Copyright (c) 2015-2018 Matthew Petroff\n * MIT License\n */\nimport videojs from 'video.js'\n\n(function(document, videojs, pannellum) {\n    'use strict';\n    \n    videojs.registerPlugin('pannellum', function(config) {\n        // Create Pannellum instance\n        var player = this;\n        var container = player.el();\n        var vid = container.getElementsByTagName('video')[0],\n            pnlmContainer = document.createElement('div');\n        config = config || {};\n        config.type = 'equirectangular';\n        config.dynamic = true;\n        config.showZoomCtrl = false;\n        config.showFullscreenCtrl = false;\n        config.autoLoad = true;\n        config.panorama = vid;\n        pnlmContainer.style.visibility = 'hidden';\n        player.pnlmViewer = pannellum.viewer(pnlmContainer, config);\n        container.insertBefore(pnlmContainer, container.firstChild);\n        vid.style.display = 'none';\n    \n        // Handle update settings\n        player.on('play', function() {\n            if (vid.readyState > 1)\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('canplay', function() {\n            if (!player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('pause', function() {\n            player.pnlmViewer.setUpdate(false);\n        });\n        player.on('loadeddata', function() {\n            pnlmContainer.style.visibility = 'visible';\n        });\n        player.on('seeking', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(true);\n        });\n        player.on('seeked', function() {\n            if (player.paused())\n                player.pnlmViewer.setUpdate(false);\n        });\n    });\n    \n    })(document, videojs, pannellum);\n    \n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/videojs-pannellum-plugin.js","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/codecs/adts.js\n// module id = GJFR\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.parseId3TagSize = function(header, byteIndex) {\n    var\n      returnSize = (header[byteIndex + 6] << 21) |\n                   (header[byteIndex + 7] << 14) |\n                   (header[byteIndex + 8] << 7) |\n                   (header[byteIndex + 9]),\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n\n  this.parseAdtsSize = function(header, byteIndex) {\n    var\n      lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n    return (highTwo | middle) | lowThree;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = this.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = this.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/aac/index.js\n// module id = GfXe\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = GiK3\n// module chunks = 0","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/caption-parser.js\n// module id = Jyyp\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/index.js\n// module id = KSGD\n// module chunks = 0","/** @license React v16.5.2\n * schedule.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});var c=null,e=!1,f=!1,g=\"object\"===typeof performance&&\"function\"===typeof performance.now,l={timeRemaining:g?function(){var a=h()-performance.now();return 0<a?a:0}:function(){var a=h()-Date.now();return 0<a?a:0},didTimeout:!1};function m(){if(!e){var a=c.timesOutAt;f?n():f=!0;p(q,a)}}function r(){var a=c,b=c.next;if(c===b)c=null;else{var d=c.previous;c=d.next=b;b.previous=d}a.next=a.previous=null;a=a.callback;a(l)}\nfunction q(a){e=!0;l.didTimeout=a;try{if(a)for(;null!==c;){var b=exports.unstable_now();if(c.timesOutAt<=b){do r();while(null!==c&&c.timesOutAt<=b)}else break}else if(null!==c){do r();while(null!==c&&0<h()-exports.unstable_now())}}finally{e=!1,null!==c?m(c):f=!1}}\nvar t=Date,u=\"function\"===typeof setTimeout?setTimeout:void 0,v=\"function\"===typeof clearTimeout?clearTimeout:void 0,w=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,x=\"function\"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0,y,z;function A(a){y=w(function(b){v(z);a(b)});z=u(function(){x(y);a(exports.unstable_now())},100)}if(g){var B=performance;exports.unstable_now=function(){return B.now()}}else exports.unstable_now=function(){return t.now()};var p,n,h;\nif(\"undefined\"===typeof window){var C=-1;p=function(a){C=setTimeout(a,0,!0)};n=function(){clearTimeout(C)};h=function(){return 0}}else if(window._schedMock){var D=window._schedMock;p=D[0];n=D[1];h=D[2]}else{\"undefined\"!==typeof console&&(\"function\"!==typeof w&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"),\"function\"!==typeof x&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\nvar E=null,F=!1,G=-1,H=!1,I=!1,J=0,K=33,L=33;h=function(){return J};var M=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===M){F=!1;var b=exports.unstable_now();a=!1;if(0>=J-b)if(-1!==G&&G<=b)a=!0;else{H||(H=!0,A(N));return}G=-1;b=E;E=null;if(null!==b){I=!0;try{b(a)}finally{I=!1}}}},!1);var N=function(a){H=!1;var b=a-J+L;b<L&&K<L?(8>b&&(b=8),L=b<K?K:b):K=b;J=a+L;F||(F=!0,window.postMessage(M,\"*\"))};p=function(a,\nb){E=a;G=b;I?window.postMessage(M,\"*\"):H||(H=!0,A(N))};n=function(){E=null;F=!1;G=-1}}exports.unstable_scheduleWork=function(a,b){var d=exports.unstable_now();b=void 0!==b&&null!==b&&null!==b.timeout&&void 0!==b.timeout?d+b.timeout:d+5E3;a={callback:a,timesOutAt:b,next:null,previous:null};if(null===c)c=a.next=a.previous=a,m(c);else{d=null;var k=c;do{if(k.timesOutAt>b){d=k;break}k=k.next}while(k!==c);null===d?d=c:d===c&&(c=a,m(c));b=d.previous;b.next=d.previous=a;a.next=d;a.previous=b}return a};\nexports.unstable_cancelScheduledWork=function(a){var b=a.next;if(null!==b){if(b===a)c=null;else{a===c&&(c=b);var d=a.previous;d.next=b;b.previous=d}a.next=a.previous=null}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/schedule/cjs/schedule.production.min.js\n// module id = LRaD\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/schedule.production.min.js');\n} else {\n  module.exports = require('./cjs/schedule.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/schedule/index.js\n// module id = LnNA\n// module chunks = 0","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/frame-utils.js\n// module id = MjOi\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = Nq5S\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = O27J\n// module chunks = 0","module.exports = __webpack_public_path__ + \"milan.df0cb5c8.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/milan.jpg\n// module id = O67U\n// module chunks = 0","import propTypes from \"prop-types\";\nimport React, { PureComponent } from \"react\";\nimport \"../pannellum/css/pannellum.css\";\nimport \"../pannellum/css/style-textInfo.css\";\n\nimport \"../pannellum/js/libpannellum.js\";\nimport \"../pannellum/js/pannellum.js\";\nimport \"../pannellum/js/RequestAnimationFrame\";\n\nclass Pannellum extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: Math.random()\n        .toString(36)\n        .substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    image: propTypes.string,\n    haov: propTypes.number,\n    vaov: propTypes.number,\n    vOffset: propTypes.number,\n    yaw: propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    autoRotate: propTypes.number,\n    compass: propTypes.bool,\n    preview: propTypes.string,\n    previewTitle: propTypes.string,\n    previewAuthor: propTypes.string,\n    title: propTypes.string,\n    author: propTypes.string,\n    autoLoad: propTypes.bool,\n    orientationOnByDefault: propTypes.bool,\n    showZoomCtrl: propTypes.bool,\n    keyboardZoom: propTypes.bool,\n    mouseZoom: propTypes.bool,\n    draggable: propTypes.bool,\n    disableKeyboardCtrl : propTypes.bool,\n    showFullscreenCtrl: propTypes.bool,\n    showControls: propTypes.bool,\n    onLoad: propTypes.func,\n    onScenechange: propTypes.func,\n    onScenechangefadedone: propTypes.func,\n    onError: propTypes.func,\n    onErrorcleared: propTypes.func,\n    onMousedown: propTypes.func,\n    onMouseup: propTypes.func,\n    onTouchstart: propTypes.func,\n    onTouchend: propTypes.func,\n    hotspotDebug: propTypes.bool,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick: propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n    onRender: propTypes.func,\n  };\n\n  static defaultProps = {\n    children: [],\n    width: \"100%\",\n    height: \"400px\",\n    image: \"\",\n    haov: 360,\n    vaov: 180,\n    vOffset: 0,\n    yaw: 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    autoRotate: 0,\n    compass: false,\n    preview: \"\",\n    previewTitle: \"\",\n    previewAuthor: \"\",\n    title: \"\",\n    author: \"\",\n    autoLoad: false,\n    orientationOnByDefault: false,\n    showZoomCtrl: true,\n    keyboardZoom: true,\n    mouseZoom: true,\n    draggable: true,\n    disableKeyboardCtrl: false,\n    showFullscreenCtrl: true,\n    showControls: true,\n    onLoad: () => {},\n    onScenechange: () => {},\n    onScenechangefadedone: () => {},\n    onError: () => {},\n    onErrorcleared: () => {},\n    onMousedown: () => {},\n    onMouseup: () => {},\n    onTouchstart: () => {},\n    onTouchend: () => {},\n    hotspotDebug: false,\n    onRender: null,\n  };\n\n  renderImage = state => {\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one\n    let hotspots = children.flatMap(child => child);\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)) {\n      hotspots.map(hotspot => {\n        switch (hotspot.props.type) {\n          case \"info\":\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              type: hotspot.props.type,\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              text: hotspot.props.text ? hotspot.props.text : \"\",\n              URL: hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              id: Math.random()\n                .toString(36)\n                .substr(2, 9),\n              pitch: hotspot.props.pitch ? hotspot.props.pitch : 10,\n              yaw: hotspot.props.yaw ? hotspot.props.yaw : 10,\n              cssClass: hotspot.props.cssClass\n                ? hotspot.props.cssClass\n                : \"tooltipcss\",\n              createTooltipFunc: hotspot.props.tooltip\n                ? hotspot.props.tooltip\n                : this.hotspotTooltip,\n              createTooltipArgs: hotspot.props.tooltipArg\n                ? hotspot.props.tooltipArg\n                : {},\n              clickHandlerFunc: hotspot.props.handleClick\n                ? hotspot.props.handleClick\n                : this.handleClickHotspot,\n              clickHandlerArgs: hotspot.props.handleClickArg\n                ? hotspot.props.handleClickArg\n                : { name: \"test\" }\n            });\n          default:\n            return [];\n        }\n      });\n    }\n\n    let jsonConfig = {\n      type: \"equirectangular\",\n      panorama: this.props.image,\n      haov: this.props.haov,\n      vaov: this.props.vaov,\n      vOffset: this.props.vOffset,\n      yaw: this.props.yaw,\n      pitch: this.props.pitch,\n      hfov: this.props.hfov,\n      minHfov: this.props.minHfov,\n      maxHfov: this.props.maxHfov,\n      minPitch: this.props.minPitch,\n      maxPitch: this.props.maxPitch,\n      minYaw: this.props.minYaw,\n      maxYaw: this.props.maxYaw,\n      autoRotate: this.props.autoRotate,\n      compass: this.props.compass,\n      preview: this.props.preview,\n      previewTitle: this.props.previewTitle,\n      previewAuthor: this.props.previewAuthor,\n      author: this.props.author,\n      title: this.props.title,\n      autoLoad: this.props.autoLoad,\n      orientationOnByDefault: this.props.orientationOnByDefault,\n      showZoomCtrl: this.props.showZoomCtrl,\n      keyboardZoom: this.props.keyboardZoom,\n      mouseZoom: this.props.mouseZoom,\n      draggable: this.props.draggable,\n      disableKeyboardCtrl: this.props.disableKeyboardCtrl,\n      showFullscreenCtrl: this.props.showFullscreenCtrl,\n      showControls: this.props.showControls,\n      hotSpotDebug: this.props.hotspotDebug,\n      hotSpots: hotspotArray,\n      onRender: this.props.onRender,\n    };\n\n    Object.keys(jsonConfig).forEach(\n      key => jsonConfig[key] === \"\" && delete jsonConfig[key]\n    );\n    // this.setState({ jsonConfig });\n\n    if (state === \"update\") {\n      this.panorama.destroy();\n    } \n    this.panorama = pannellum.viewer(\n      this.props.id ? this.props.id : this.state.id,\n      jsonConfig\n    );\n\n    this.panorama.on(\"load\", this.props.onLoad);\n    this.panorama.on(\"scenechange\", this.props.onScenechange);\n    this.panorama.on(\"scenechangefadedone\", this.props.onScenechangefadedone);\n    this.panorama.on(\"error\", this.props.onError);\n    this.panorama.on(\"errorcleared\", this.props.onErrorcleared);\n    this.panorama.on(\"mousedown\", this.props.onMousedown);\n    this.panorama.on(\"mouseup\", this.props.onMouseup);\n    this.panorama.on(\"touchstart\", this.props.onTouchstart);\n    this.panorama.on(\"touchend\", this.props.onTouchend);\n    \n  };\n\n  componentDidMount = () => {\n    this.renderImage(\"mount\");\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      prevProps.image !== this.props.image ||\n      prevProps.width !== this.props.width ||\n      prevProps.height !== this.props.height ||\n      prevProps.compass !== this.props.compass ||\n      prevProps.title !== this.props.title ||\n      prevProps.author !== this.props.author ||\n      prevProps.preview !== this.props.preview ||\n      prevProps.previewTitle !== this.props.previewTitle ||\n      prevProps.previewAuthor !== this.props.previewAuthor ||\n      prevProps.showZoomCtrl !== this.props.showZoomCtrl ||\n      prevProps.showFullscreenCtrl !== this.props.showFullscreenCtrl ||\n      prevProps.showControls !== this.props.showControls ||\n      prevProps.children.length !== this.props.children.length\n    ) {\n      this.renderImage(\"update\");\n    }\n    if (prevProps.maxYaw !== this.props.maxYaw ||\n      prevProps.minYaw !== this.props.minYaw ||\n      prevProps.maxPitch !== this.props.maxPitch ||\n      prevProps.minPitch !== this.props.minPitch ||\n      prevProps.maxHfov !== this.props.maxHfov ||\n      prevProps.minHfov !== this.props.minHfov){\n      this.panorama.setYawBounds([this.props.minYaw,this.props.maxYaw]);\n      this.panorama.setPitchBounds([this.props.minPitch,this.props.maxPitch]);\n      this.panorama.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n    }\n    if (prevProps.yaw !== this.props.yaw) {\n      this.panorama.setYaw(this.props.yaw);\n    }\n    if (prevProps.pitch !== this.props.pitch) {\n      this.panorama.setPitch(this.props.pitch);\n    }\n    if (prevProps.hfov !== this.props.hfov) {\n      this.panorama.setHfov(this.props.hfov);\n    }\n  }\n\n  handleClickHotspot = (e, args) => {\n    console.log(\"hotspot clicked\", args.name);\n  };\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement(\"div\");\n    hDiv.classList.add(\"hotspot\");\n    const outDiv = document.createElement(\"div\");\n    outDiv.classList.add(\"out\");\n    const inDiv = document.createElement(\"div\");\n    inDiv.classList.add(\"in\");\n    const imageDiv = document.createElement(\"div\");\n    imageDiv.classList.add(\"image\");\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  };\n\n  getViewer = () => {\n    return this.panorama;\n  };\n\n  forceRender = () => {\n    this.renderImage(\"update\");\n  };\n\n  render() {\n    let { width, height } = this.props;\n    let divStyle = {\n      width: width,\n      height: height\n    };\n    return (\n      <div\n        id={this.props.id ? this.props.id : this.state.id}\n        style={divStyle}\n        ref={node => (this.imageNode = node)}\n      />\n    );\n  }\n}\nPannellum.Hotspot = () => {};\nPannellum.Hotspot = () => {};\nexport default Pannellum;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/Pannellum.js","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/factoryWithThrowingShims.js\n// module id = Q4WQ\n// module chunks = 0","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trim/index.js\n// module id = QYuf\n// module chunks = 0","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 0","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pkcs7/dist/pkcs7.es.js\n// module id = UR7O\n// module chunks = 0","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/metadata-stream.js\n// module id = X4yv\n// module chunks = 0","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/bin.js\n// module id = XHP2\n// module chunks = 0","import React from 'react';\n\nexport default () => {\n  return (\n    <header className=\"header\">\n      <div>\n        <a \n          href=\"/\"\n          className=\"main-header__brand\"\n        >\n            Pannellum React Component\n        </a>\n      </div>\n    </header>\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/Header.js","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 0","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = bJHr\n// module chunks = 0","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 0","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport \"./index.css\";\nimport Header  from \"./components/Header\";\nimport ImageDemo from \"./components/ImageDemo\";\nimport VideoDemo from \"./components/VideoDemo\";\n\n\n\n\nclass Demo extends Component {\n  \n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header />\n        <ImageDemo />\n        <VideoDemo />\n      </div>\n    );\n  }\n\n}\n\n\nrender(<Demo />, document.querySelector('#demo'));\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/index.js","import React, { Component } from \"react\";\nimport { Pannellum } from \"../../../src\";\nimport myImage from \"../images/alma.jpg\";\nimport myImage2 from \"../images/milan.jpg\";\n\nexport default class ImageDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mediaPhoto: myImage,\n      yaww: 180,\n      test: false,\n      updateText: \"initial\",\n      author: \"author\"\n    };\n    this.ref = React.createRef();\n  }\n\n  hanldeClickImage = (evt, args) => {\n    console.log(args.name);\n    this.setState({\n      mediaPhoto: myImage2\n    });\n  };\n\n  handleClick = () => {\n    this.setState({\n      mediaPhoto: myImage2,\n      test: false\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"image_main\">\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <button\n            onClick={() => this.setState(prevState => ({ author: \"change\" }))}\n          >\n            {\" \"}\n            change author{\" \"}\n          </button>\n          <button\n            onClick={() =>\n              this.setState(prevState => ({ yaww: prevState.yaww + 10 }))\n            }\n          >\n            {\" \"}\n            change yaw{\" \"}\n          </button>\n          <button onClick={() => this.setState({ updateText: \"after update\" })}>\n            {\" \"}\n            Should not update{\" \"}\n          </button>\n          <h3>{this.state.updateText}</h3>\n          <button\n            onClick={() => {\n              this.setState({ test: true, yaww: 100, mediaPhoto: myImage });\n            }}\n          >\n            {\" \"}\n            enable{\" \"}\n          </button>\n          <div>\n            {this.state.test && (\n              <button onClick={this.handleClick}> disable </button>\n            )}\n          </div>\n        </div>\n        <h2 className=\"section_title\">Image Component</h2>\n        <div className=\"pannellum_div\">\n          <Pannellum\n            ref={this.ref}\n            width=\"800px\"\n            height=\"400px\"\n            image={this.state.mediaPhoto}\n            pitch={10}\n            yaw={this.state.yaww}\n            hfov={120}\n            autoLoad\n            author={this.state.author}\n            title=\"\"\n          >\n            <Pannellum.Hotspot\n              type=\"info\"\n              pitch={11}\n              yaw={-167}\n              text=\"Info Hotspot Text 3\"\n              URL=\"https://github.com/farminf\"\n            />\n\n            <Pannellum.Hotspot\n              type=\"custom\"\n              pitch={31}\n              yaw={150}\n              handleClick={(evt, args) => this.hanldeClickImage(evt, args)}\n              handleClickArg={{ name: \"test\" }}\n            />\n          </Pannellum>\n\n          <div className=\"codebox\">\n            <pre>\n              <code data-language=\"xml\">\n                {`\n    <Pannellum\n        width=\"800px\"\n        height=\"400px\"\n        image={this.state.mediaPhoto}\n        pitch={10}\n        yaw={180}\n        hfov={500}\n        autoLoad\n        author=\"\"\n        title=\"\"\n        orientationOnByDefault={false}\n        draggable\n        keyboardZoom\n        mouseZoom\n        preview=\"\"      \n        previewAuthor=\"\"\n        previewTitle=\"\"\n        showControls\n        showFullscreenCtrl\n        showZoomCtrl\n        onLoad={()=>{console.log(\"panorama loaded\");}}\n        onScenechange={(id)=>{console.log(\"Scene has change on \" + id);}}\n        onScenechangefadedone={()=>{console.log(\"panorama loaded\");}}\n        onError={(err)=>{console.log(\"Error\" , err);}}\n        onErrorcleared={()=>{console.log(\"Error Cleared\");}}\n        onMousedown={(evt)=>{console.log(\"Mouse Down\" , evt);}}\n        onMouseup={(evt)=>{console.log(\"Mouse Up\", evt);}}\n        onTouchstart={(evt)=>{console.log(\"Touch Start\", evt);}}\n        onTouchend={(evt)=>{console.log(\"Touch End\", evt);}}\n        hotspotDebug={false}\n    >\n        <Pannellum.Hotspot \n        type=\"info\"\n        pitch={11}\n        yaw={-167}\n        text=\"Info Hotspot Text 3\"\n        URL=\"https://github.com/farminf\"\n        />\n\n        <Pannellum.Hotspot \n        type=\"custom\"\n        pitch={31}\n        yaw={150}\n        handleClick={(evt , args) => this.hanldeClickImage(evt , args)}\n        handleClickArg={{ \"name\":\"test\" }}\n        />\n\n    </Pannellum>\n                `}\n              </code>\n            </pre>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./demo/src/components/ImageDemo.js","import propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport videojs from 'video.js';\nimport '../pannellum/css/video-js.css';\nimport '../pannellum/css/pannellum.css';\nimport '../pannellum/css/style-textInfo.css';\nimport '../pannellum/js/libpannellum.js';\nimport '../pannellum/js/RequestAnimationFrame';\nimport '../pannellum/js/pannellum.js';\nimport '../pannellum/js/videojs-pannellum-plugin';\n\n\nclass PannellumVideo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      id: Math.random().toString(36).substr(2, 9)\n    };\n  }\n\n  static propTypes = {\n    children: propTypes.oneOfType([\n      propTypes.arrayOf(propTypes.node),\n      propTypes.node\n    ]),\n    id: propTypes.string,\n    width: propTypes.string,\n    height: propTypes.string,\n    video: propTypes.string,\n    yaw : propTypes.number,\n    pitch: propTypes.number,\n    hfov: propTypes.number,\n    minHfov: propTypes.number,\n    maxHfov: propTypes.number,\n    minPitch: propTypes.number,\n    maxPitch: propTypes.number,\n    minYaw: propTypes.number,\n    maxYaw: propTypes.number,\n    hotspotDebug: propTypes.bool,\n    autoRotate: propTypes.number,\n    mouseZoom: propTypes.bool,\n    loop:propTypes.bool,\n    autoplay:propTypes.bool,\n    controls:propTypes.bool,\n    muted:propTypes.bool,\n    poster: propTypes.string,\n    tooltip: propTypes.func,\n    tooltipArg: propTypes.object,\n    handleClick:propTypes.func,\n    handleClickArg: propTypes.object,\n    cssClass: propTypes.string,\n  }\n\n  static defaultProps = {\n    children:[],\n    width: '100%',\n    height: '400px',\n    video:'',\n    yaw : 0,\n    pitch: 0,\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 150,\n    minPitch: -90,\n    maxPitch: 90,\n    minYaw: -180,\n    maxYaw: 180,\n    hotspotDebug: false,\n    autoRotate: 0,\n    mouseZoom: true,\n    loop:false,\n    autoplay:true,\n    controls:false,\n    muted: true,\n    poster: '',\n  }\n\n  renderVideo = (state) =>{\n    const { children } = this.props;\n    // make the array of sub components, even if its one, it become array of one \n    let hotspots = [...children];\n    let hotspotArray = [];\n    if (Array.isArray(hotspots)){\n      hotspots.map(hotspot =>{\n        switch (hotspot.props.type){\n\n          case \"info\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"type\":hotspot.props.type,\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"text\":hotspot.props.text ? hotspot.props.text : \"\",\n              \"URL\":hotspot.props.URL ? hotspot.props.URL : \"\"\n            });\n          case \"custom\":\n            return hotspotArray.push({\n              \"id\": Math.random().toString(36).substr(2, 9),\n              \"pitch\":hotspot.props.pitch ? hotspot.props.pitch : 10,\n              \"yaw\":hotspot.props.yaw ? hotspot.props.yaw : 10,\n              \"cssClass\": hotspot.props.cssClass ? hotspot.props.cssClass : 'tooltipcss',\n              \"createTooltipFunc\": hotspot.props.tooltip ? hotspot.props.tooltip : this.hotspotTooltip,\n              \"createTooltipArgs\": hotspot.props.tooltipArg ? hotspot.props.tooltipArg : {},\n              \"clickHandlerFunc\": hotspot.props.handleClick ? hotspot.props.handleClick : this.handleClickHotspot ,\n              \"clickHandlerArgs\": hotspot.props.handleClickArg ? hotspot.props.handleClickArg : { name:\"test\" },\n            });\n          default:\n            return [];\n        }\n        \n      });\n    }\n\n    if (state === \"update\"){\n      \n      this.video = videojs(this.videoNode);\n      let cuurentHS = [...this.video.pnlmViewer.getConfig().hotSpots];\n      this.video.pnlmViewer.setYaw(this.props.yaw);\n      this.video.pnlmViewer.setPitch(this.props.pitch);\n      this.video.pnlmViewer.setHfov(this.props.hfov);\n      this.video.pnlmViewer.setHfovBounds([this.props.minHfov,this.props.maxHfov]);\n      \n      //remove all hotspots\n      cuurentHS.map( hs => this.video.pnlmViewer.removeHotSpot(hs.id));\n      // Adding new hotspots\n      hotspotArray.map( hs => this.video.pnlmViewer.addHotSpot(hs));\n      // setting new video\n      this.video.src({ \n        type: 'video/mp4', \n        src: this.props.video \n      });\n      \n      if (this.props.autoplay) {\n        return this.video.play();\n      }\n    } else {\n      this.video = videojs(this.videoNode, {\n        loop:this.props.loop,\n        autoplay:this.props.autoplay,\n        controls:this.props.controls,\n        muted: this.props.muted,\n        poster: this.props.poster,\n        plugins: {\n          pannellum: {\n            yaw : this.props.yaw,\n            pitch: this.props.pitch,\n            hfov: this.props.hfov,\n            minHfov: this.props.minHfov,\n            maxHfov: this.props.maxHfov,\n            minPitch: this.props.minPitch,\n            maxPitch: this.props.maxPitch,\n            minYaw: this.props.minYaw,\n            maxYaw: this.props.maxYaw,\n            hotSpotDebug: this.props.hotspotDebug,\n            autoRotate:this.props.autoRotate,\n            mouseZoom:this.props.mouseZoom,\n            hotSpots: hotspotArray\n          }\n        } \n      });\n      this.video.src({ type: 'video/mp4', src: this.props.video });\n\n      if (this.props.autoplay) {\n        this.video.play();\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    this.renderVideo(\"mount\");    \n  }\n\n  componentDidUpdate (prevProps){\n    // videojs(this.videoNode).dispose();\n    // this.videoNode.setAttribute(\"src\", this.props.video );\n    this.renderVideo(\"update\");\n\n\n  }\n\n  handleClickHotspot = (e , args) => {\n    console.log(\"hotspot clicked\" , args.name);\n  }\n\n\n  hotspotTooltip = (hotSpotDiv, args) => {\n    hotSpotDiv.setAttribute(\"id\", \"textInfo\");\n    const hDiv = document.createElement('div');\n    hDiv.classList.add('hotspot');\n    const outDiv = document.createElement('div');\n    outDiv.classList.add('out');\n    const inDiv = document.createElement('div');\n    inDiv.classList.add('in');\n    const imageDiv = document.createElement('div');\n    imageDiv.classList.add('image');\n    hotSpotDiv.appendChild(hDiv);\n    hDiv.appendChild(inDiv);\n    hDiv.appendChild(outDiv);\n  }\n\n  componentWillUnmount() {\n    videojs(this.videoNode).dispose();\n  }\n  \n  getViewer = () => {\n    return this.video.pnlmViewer;\n  }\n\n  render() {\n    let { width, height, video } = this.props;\n    let divStyle = {\n      width : width,\n      height : height\n    };\n    return (\n\n      <div data-vjs-player>\n        <video\n          id={this.props.id ? this.props.id : this.state.id}\n          className=\"video-js vjs-default-skin vjs-big-play-centered\" \n          ref={node => this.videoNode = node}\n          preload=\"none\" \n          crossOrigin=\"anonymous\"\n          style={divStyle}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PannellumVideo;\n\n\n\n// WEBPACK FOOTER //\n// ./src/elements/PannellumVideo.js","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 0","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 0","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/index.js\n// module id = fYOu\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/probe.js\n// module id = fleF\n// module chunks = 0","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/url-toolkit/src/url-toolkit.js\n// module id = fx5k\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/prop-types/lib/ReactPropTypesSecret.js\n// module id = gt/O\n// module chunks = 0","/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.pannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama viewer.\n * @constructor\n * @param {HTMLElement|string} container - The container (div) element for the\n *      viewer, or its ID.\n * @param {Object} initialConfig - Inital configuration for viewer.\n */\n  function Viewer(container, initialConfig) {\n\n    var _this = this;\n\n    // Declare variables\n    var config,\n      renderer,\n      preview,\n      isUserInteracting = false,\n      latestInteraction = Date.now(),\n      onPointerDownPointerX = 0,\n      onPointerDownPointerY = 0,\n      onPointerDownPointerDist = -1,\n      onPointerDownYaw = 0,\n      onPointerDownPitch = 0,\n      keysDown = new Array(10),\n      fullscreenActive = false,\n      loaded,\n      error = false,\n      isTimedOut = false,\n      listenersAdded = false,\n      panoImage,\n      prevTime,\n      speed = { 'yaw': 0, 'pitch': 0, 'hfov': 0 },\n      animating = false,\n      orientation = false,\n      orientationYawOffset = 0,\n      autoRotateStart,\n      autoRotateSpeed = 0,\n      origHfov,\n      origPitch,\n      animatedMove = {},\n      externalEventListeners = {},\n      specifiedPhotoSphereExcludes = [],\n      update = false, // Should we update when still to render dynamic content\n      hotspotsCreated = false;\n\n    var defaultConfig = {\n      hfov: 100,\n      minHfov: 50,\n      maxHfov: 120,\n      pitch: 0,\n      minPitch: undefined,\n      maxPitch: undefined,\n      yaw: 0,\n      minYaw: -180,\n      maxYaw: 180,\n      roll: 0,\n      haov: 360,\n      vaov: 180,\n      vOffset: 0,\n      autoRotate: false,\n      autoRotateInactivityDelay: -1,\n      autoRotateStopDelay: undefined,\n      type: 'equirectangular',\n      northOffset: 0,\n      showFullscreenCtrl: true,\n      dynamic: false,\n      doubleClickZoom: true,\n      keyboardZoom: true,\n      mouseZoom: true,\n      showZoomCtrl: true,\n      autoLoad: false,\n      showControls: true,\n      orientationOnByDefault: false,\n      hotSpotDebug: false,\n      backgroundColor: [0, 0, 0],\n      avoidShowingBackground: false,\n      animationTimingFunction: timingFunction,\n      draggable: true,\n      disableKeyboardCtrl: false,\n      crossOrigin: 'anonymous',\n      touchPanSpeedCoeffFactor: 1,\n      capturedKeyNumbers: [16, 17, 27, 37, 38, 39, 40, 61, 65, 68, 83, 87, 107, 109, 173, 187, 189],\n    };\n\n    // Translatable / configurable strings\n    // Some strings contain '%s', which is a placeholder for inserted values\n    // When setting strings in external configuration, `\\n` should be used instead of `<br>` to insert line breaks\n    defaultConfig.strings = {\n    // Labels\n      loadButtonLabel: 'Click to<br>Load<br>Panorama',\n      loadingLabel: 'Loading...',\n      bylineLabel: 'by %s',    // One substitution: author\n\n      // Errors\n      noPanoramaError: 'No panorama image was specified.',\n      fileAccessError: 'The file %s could not be accessed.',  // One substitution: file URL\n      malformedURLError: 'There is something wrong with the panorama URL.',\n      iOS8WebGLError: \"Due to iOS 8's broken WebGL implementation, only \" +\n                    \"progressive encoded JPEGs work for your device (this \" +\n                    \"panorama uses standard encoding).\",\n      genericWebGLError: 'Your browser does not have the necessary WebGL support to display this panorama.',\n      textureSizeError: 'This panorama is too big for your device! It\\'s ' +\n                '%spx wide, but your device only supports images up to ' +\n                '%spx wide. Try another device.' +\n                ' (If you\\'re the author, try scaling down the image.)',    // Two substitutions: image width, max image width\n      unknownError: 'Unknown error. Check developer console.',\n    };\n\n    // Initialize container\n    container = typeof container === 'string' ? document.getElementById(container) : container;\n    container.classList.add('pnlm-container');\n    container.tabIndex = 0;\n\n    // Create container for ui\n    var uiContainer = document.createElement('div');\n    uiContainer.className = 'pnlm-ui';\n    container.appendChild(uiContainer);\n\n    // Create container for renderer\n    var renderContainer = document.createElement('div');\n    renderContainer.className = 'pnlm-render-container';\n    container.appendChild(renderContainer);\n    var dragFix = document.createElement('div');\n    dragFix.className = 'pnlm-dragfix';\n    uiContainer.appendChild(dragFix);\n\n    // Display about information on right click\n    var aboutMsg = document.createElement('span');\n    aboutMsg.className = 'pnlm-about-msg';\n    aboutMsg.innerHTML = '<a href=\"https://pannellum.org/\" target=\"_blank\">Pannellum</a>';\n    uiContainer.appendChild(aboutMsg);\n    dragFix.addEventListener('contextmenu', aboutMessage);\n\n    // Create info display\n    var infoDisplay = {};\n\n    // Hot spot debug indicator\n    var hotSpotDebugIndicator = document.createElement('div');\n    hotSpotDebugIndicator.className = 'pnlm-sprite pnlm-hot-spot-debug-indicator';\n    uiContainer.appendChild(hotSpotDebugIndicator);\n\n    // Panorama info\n    infoDisplay.container = document.createElement('div');\n    infoDisplay.container.className = 'pnlm-panorama-info';\n    infoDisplay.title = document.createElement('div');\n    infoDisplay.title.className = 'pnlm-title-box';\n    infoDisplay.container.appendChild(infoDisplay.title);\n    infoDisplay.author = document.createElement('div');\n    infoDisplay.author.className = 'pnlm-author-box';\n    infoDisplay.container.appendChild(infoDisplay.author);\n    uiContainer.appendChild(infoDisplay.container);\n\n    // Load box\n    infoDisplay.load = {};\n    infoDisplay.load.box = document.createElement('div');\n    infoDisplay.load.box.className = 'pnlm-load-box';\n    infoDisplay.load.boxp = document.createElement('p');\n    infoDisplay.load.box.appendChild(infoDisplay.load.boxp);\n    infoDisplay.load.lbox = document.createElement('div');\n    infoDisplay.load.lbox.className = 'pnlm-lbox';\n    infoDisplay.load.lbox.innerHTML = '<div class=\"pnlm-loading\"></div>';\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbox);\n    infoDisplay.load.lbar = document.createElement('div');\n    infoDisplay.load.lbar.className = 'pnlm-lbar';\n    infoDisplay.load.lbarFill = document.createElement('div');\n    infoDisplay.load.lbarFill.className = 'pnlm-lbar-fill';\n    infoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\n    infoDisplay.load.box.appendChild(infoDisplay.load.lbar);\n    infoDisplay.load.msg = document.createElement('p');\n    infoDisplay.load.msg.className = 'pnlm-lmsg';\n    infoDisplay.load.box.appendChild(infoDisplay.load.msg);\n    uiContainer.appendChild(infoDisplay.load.box);\n\n    // Error message\n    infoDisplay.errorMsg = document.createElement('div');\n    infoDisplay.errorMsg.className = 'pnlm-error-msg pnlm-info-box';\n    uiContainer.appendChild(infoDisplay.errorMsg);\n\n    // Create controls\n    var controls = {};\n    controls.container = document.createElement('div');\n    controls.container.className = 'pnlm-controls-container';\n    uiContainer.appendChild(controls.container);\n\n    // Load button\n    controls.load = document.createElement('div');\n    controls.load.className = 'pnlm-load-button';\n    controls.load.addEventListener('click', function() {\n      processOptions();\n      load();\n    });\n    uiContainer.appendChild(controls.load);\n\n    // Zoom controls\n    controls.zoom = document.createElement('div');\n    controls.zoom.className = 'pnlm-zoom-controls pnlm-controls';\n    controls.zoomIn = document.createElement('div');\n    controls.zoomIn.className = 'pnlm-zoom-in pnlm-sprite pnlm-control';\n    controls.zoomIn.addEventListener('click', zoomIn);\n    controls.zoom.appendChild(controls.zoomIn);\n    controls.zoomOut = document.createElement('div');\n    controls.zoomOut.className = 'pnlm-zoom-out pnlm-sprite pnlm-control';\n    controls.zoomOut.addEventListener('click', zoomOut);\n    controls.zoom.appendChild(controls.zoomOut);\n    controls.container.appendChild(controls.zoom);\n\n    // Fullscreen toggle\n    controls.fullscreen = document.createElement('div');\n    controls.fullscreen.addEventListener('click', toggleFullscreen);\n    controls.fullscreen.className = 'pnlm-fullscreen-toggle-button pnlm-sprite pnlm-fullscreen-toggle-button-inactive pnlm-controls pnlm-control';\n    if (document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled)\n      {controls.container.appendChild(controls.fullscreen);}\n\n    // Device orientation toggle\n    controls.orientation = document.createElement('div');\n    controls.orientation.addEventListener('click', function(e) {\n      if (orientation)\n        {stopOrientation();}\n      else\n        {startOrientation();}\n    });\n    controls.orientation.addEventListener('mousedown', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('touchstart', function(e) {e.stopPropagation();});\n    controls.orientation.addEventListener('pointerdown', function(e) {e.stopPropagation();});\n    controls.orientation.className = 'pnlm-orientation-button pnlm-orientation-button-inactive pnlm-sprite pnlm-controls pnlm-control';\n    var orientationSupport, startOrientationIfSupported = false;\n    function deviceOrientationTest(e) {\n      window.removeEventListener('deviceorientation', deviceOrientationTest);\n      if (e && e.alpha !== null && e.beta !== null && e.gamma !== null) {\n        controls.container.appendChild(controls.orientation);\n        orientationSupport = true;\n        if (startOrientationIfSupported)\n          {startOrientation();}\n      } else {\n        orientationSupport = false;\n      }\n    }\n    if (window.DeviceOrientationEvent) {\n      window.addEventListener('deviceorientation', deviceOrientationTest);\n    } else {\n      orientationSupport = false;\n    }\n\n    // Compass\n    var compass = document.createElement('div');\n    compass.className = 'pnlm-compass pnlm-controls pnlm-control';\n    uiContainer.appendChild(compass);\n\n    // Load and process configuration\n    if (initialConfig.firstScene) {\n    // Activate first scene if specified in URL\n      mergeConfig(initialConfig.firstScene);\n    } else if (initialConfig.default && initialConfig.default.firstScene) {\n    // Activate first scene if specified in file\n      mergeConfig(initialConfig.default.firstScene);\n    } else {\n      mergeConfig(null);\n    }\n    processOptions(true);\n\n    /**\n * Initializes viewer.\n * @private\n */\n    function init() {\n    // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n    // show an error (older versions don't work at all)\n    // Based on: http://stackoverflow.com/a/10965203\n      var div = document.createElement(\"div\");\n      div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n      if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n        return;\n      }\n\n      origHfov = config.hfov;\n      origPitch = config.pitch;\n\n      var i, p;\n    \n      if (config.type == 'cubemap') {\n        panoImage = [];\n        for (i = 0; i < 6; i++) {\n          panoImage.push(new Image());\n          panoImage[i].crossOrigin = config.crossOrigin;\n        }\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n      } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes));    // Deep copy\n        // Avoid \"undefined\" in path, check (optional) multiRes.basePath, too\n        // Use only multiRes.basePath if it's an absolute URL\n        if (config.basePath && config.multiRes.basePath &&\n            !(/^(?:[a-z]+:)?\\/\\//i.test(config.multiRes.basePath))) {\n          c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (config.multiRes.basePath) {\n          c.basePath = config.multiRes.basePath;\n        } else if (config.basePath) {\n          c.basePath = config.basePath;\n        }\n        panoImage = c;\n      } else {\n        if (config.dynamic === true) {\n          panoImage = config.panorama;\n        } else {\n          if (config.panorama === undefined) {\n            anError(config.strings.noPanoramaError);\n            return;\n          }\n          panoImage = new Image();\n        }\n      }\n\n      // Configure image loading\n      if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n        \n        var onLoad = function() {\n          itemsToLoad--;\n          if (itemsToLoad === 0) {\n            onImageLoad();\n          }\n        };\n        \n        var onError = function(e) {\n          var a = document.createElement('a');\n          a.href = e.target.src;\n          a.textContent = a.href;\n          anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n        };\n        \n        for (i = 0; i < panoImage.length; i++) {\n          p = config.cubeMap[i];\n          if (p == \"null\") { // support partial cubemap image with explicitly empty faces\n            console.log('Will use background instead of missing cubemap face ' + i);\n            onLoad();\n          } else {\n            if (config.basePath && !absoluteURL(p)) {\n              p = config.basePath + p;\n            }\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            panoImage[i].src = sanitizeURL(p);\n          }\n        }\n      } else if (config.type == 'multires') {\n        onImageLoad();\n      } else {\n        p = '';\n        if (config.basePath) {\n          p = config.basePath;\n        }\n        \n        if (config.dynamic !== true) {\n          // Still image\n          p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n            \n          panoImage.onload = function() {\n            window.URL.revokeObjectURL(this.src);  // Clean up\n            onImageLoad();\n          };\n            \n          var xhr = new XMLHttpRequest();\n          xhr.onloadend = function() {\n            if (xhr.status != 200) {\n              // Display error if image can't be loaded\n              var a = document.createElement('a');\n              a.href = p;\n              a.textContent = a.href;\n              anError(config.strings.fileAccessError.replace('%s', a.outerHTML));\n            }\n            var img = this.response;\n            parseGPanoXMP(img);\n            infoDisplay.load.msg.innerHTML = '';\n          };\n          xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n              // Display progress\n              var percent = e.loaded / e.total * 100;\n              infoDisplay.load.lbarFill.style.width = percent + '%';\n              var unit, numerator, denominator;\n              if (e.total > 1e6) {\n                unit = 'MB';\n                numerator = (e.loaded / 1e6).toFixed(2);\n                denominator = (e.total / 1e6).toFixed(2);\n              } else if (e.total > 1e3) {\n                unit = 'kB';\n                numerator = (e.loaded / 1e3).toFixed(1);\n                denominator = (e.total / 1e3).toFixed(1);\n              } else {\n                unit = 'B';\n                numerator = e.loaded;\n                denominator = e.total;\n              }\n              infoDisplay.load.msg.innerHTML = numerator + ' / ' + denominator + ' ' + unit;\n            } else {\n              // Display loading spinner\n              infoDisplay.load.lbox.style.display = 'block';\n              infoDisplay.load.lbar.style.display = 'none';\n            }\n          };\n          try {\n            xhr.open('GET', p, true);\n          } catch (e) {\n            // Malformed URL\n            anError(config.strings.malformedURLError);\n          }\n          xhr.responseType = 'blob';\n          xhr.setRequestHeader('Accept', 'image/*,*/*;q=0.9');\n          xhr.withCredentials = config.crossOrigin === 'use-credentials';\n          xhr.send();\n        }\n      }\n    \n      if (config.draggable)\n        {uiContainer.classList.add('pnlm-grab');}\n      uiContainer.classList.remove('pnlm-grabbing');\n    }\n\n    /**\n * Test if URL is absolute or relative.\n * @private\n * @param {string} url - URL to test\n * @returns {boolean} True if absolute, else false\n */\n    function absoluteURL(url) {\n    // From http://stackoverflow.com/a/19709846\n      return new RegExp('^(?:[a-z]+:)?//', 'i').test(url) || url[0] == '/' || url.slice(0, 5) == 'blob:';\n    };\n\n    /**\n * Create renderer and initialize event listeners once image is loaded.\n * @private\n */\n    function onImageLoad() {\n      if (!renderer)\n        {renderer = new libpannellum.renderer(renderContainer);}\n\n      // Only add event listeners once\n      if (!listenersAdded) {\n        listenersAdded = true;\n        dragFix.addEventListener('mousedown', onDocumentMouseDown, false);\n        document.addEventListener('mousemove', onDocumentMouseMove, false);\n        document.addEventListener('mouseup', onDocumentMouseUp, false);\n        if (config.mouseZoom) {\n          uiContainer.addEventListener('mousewheel', onDocumentMouseWheel, false);\n          uiContainer.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        }\n        if (config.doubleClickZoom) {\n          dragFix.addEventListener('dblclick', onDocumentDoubleClick, false);\n        }\n        uiContainer.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('msfullscreenchange', onFullScreenChange, false);\n        uiContainer.addEventListener('fullscreenchange', onFullScreenChange, false);\n        window.addEventListener('resize', onDocumentResize, false);\n        window.addEventListener('orientationchange', onDocumentResize, false);\n        if (!config.disableKeyboardCtrl) {\n          container.addEventListener('keydown', onDocumentKeyPress, false);\n          container.addEventListener('keyup', onDocumentKeyUp, false);\n          container.addEventListener('blur', clearKeys, false);\n        }\n        document.addEventListener('mouseleave', onDocumentMouseUp, false);\n        if (document.documentElement.style.pointerAction === '' &&\n            document.documentElement.style.touchAction === '') {\n          dragFix.addEventListener('pointerdown', onDocumentPointerDown, false);\n          dragFix.addEventListener('pointermove', onDocumentPointerMove, false);\n          dragFix.addEventListener('pointerup', onDocumentPointerUp, false);\n          dragFix.addEventListener('pointerleave', onDocumentPointerUp, false);\n        } else {\n          dragFix.addEventListener('touchstart', onDocumentTouchStart, false);\n          dragFix.addEventListener('touchmove', onDocumentTouchMove, false);\n          dragFix.addEventListener('touchend', onDocumentTouchEnd, false);\n        }\n\n        // Deal with MS pointer events\n        if (window.navigator.pointerEnabled)\n          {container.style.touchAction = 'none';}\n      }\n\n      renderInit();\n      setHfov(config.hfov); // possibly adapt hfov after configuration and canvas is complete; prevents empty space on top or bottom by zomming out too much\n      setTimeout(function(){isTimedOut = true;}, 500);\n    }\n\n    /**\n * Parses Google Photo Sphere XMP Metadata.\n * https://developers.google.com/photo-sphere/metadata/\n * @private\n * @param {Image} image - Image to read XMP metadata from.\n */\n    function parseGPanoXMP(image) {\n      var reader = new FileReader();\n      reader.addEventListener('loadend', function() {\n        var img = reader.result;\n\n        // This awful browser specific test exists because iOS 8 does not work\n        // with non-progressive encoded JPEGs.\n        if (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/)) {\n          var flagIndex = img.indexOf('\\xff\\xc2');\n          if (flagIndex < 0 || flagIndex > 65536)\n            {anError(config.strings.iOS8WebGLError);}\n        }\n\n        var start = img.indexOf('<x:xmpmeta');\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n          var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12);\n            \n          // Extract the requested tag from the XMP data\n          var getTag = function(tag) {\n            var result;\n            if (xmpData.indexOf(tag + '=\"') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n              result = result.substring(0, result.indexOf('\"'));\n            } else if (xmpData.indexOf(tag + '>') >= 0) {\n              result = xmpData.substring(xmpData.indexOf(tag + '>') + tag.length + 1);\n              result = result.substring(0, result.indexOf('<'));\n            }\n            if (result !== undefined) {\n              return Number(result);\n            }\n            return null;\n          };\n            \n            // Relevant XMP data\n          var xmp = {\n            fullWidth: getTag('GPano:FullPanoWidthPixels'),\n            croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n            fullHeight: getTag('GPano:FullPanoHeightPixels'),\n            croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n            topPixels: getTag('GPano:CroppedAreaTopPixels'),\n            heading: getTag('GPano:PoseHeadingDegrees'),\n            horizonPitch: getTag('GPano:PosePitchDegrees'),\n            horizonRoll: getTag('GPano:PoseRollDegrees')\n          };\n            \n          if (xmp.fullWidth !== null && xmp.croppedWidth !== null &&\n                xmp.fullHeight !== null && xmp.croppedHeight !== null &&\n                xmp.topPixels !== null) {\n                \n            // Set up viewer using GPano XMP data\n            if (specifiedPhotoSphereExcludes.indexOf('haov') < 0)\n              {config.haov = xmp.croppedWidth / xmp.fullWidth * 360;}\n            if (specifiedPhotoSphereExcludes.indexOf('vaov') < 0)\n              {config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;}\n            if (specifiedPhotoSphereExcludes.indexOf('vOffset') < 0)\n              {config.vOffset = ((xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5) * -180;}\n            if (xmp.heading !== null && specifiedPhotoSphereExcludes.indexOf('northOffset') < 0) {\n              // TODO: make sure this works correctly for partial panoramas\n              config.northOffset = xmp.heading;\n              if (config.compass !== false) {\n                config.compass = true;\n              }\n            }\n            if (xmp.horizonPitch !== null && xmp.horizonRoll !== null) {\n              if (specifiedPhotoSphereExcludes.indexOf('horizonPitch') < 0)\n                {config.horizonPitch = xmp.horizonPitch;}\n              if (specifiedPhotoSphereExcludes.indexOf('horizonRoll') < 0)\n                {config.horizonRoll = xmp.horizonRoll;}\n            }\n                \n            // TODO: add support for initial view settings\n          }\n        }\n        \n        // Load panorama\n        panoImage.src = window.URL.createObjectURL(image);\n      });\n      if (reader.readAsBinaryString !== undefined)\n        {reader.readAsBinaryString(image);}\n      else\n        {reader.readAsText(image);}\n    }\n\n    /**\n * Displays an error message.\n * @private\n * @param {string} errorMsg - Error message to display. If not specified, a\n *      generic WebGL error is displayed.\n */\n    function anError(errorMsg) {\n      if (errorMsg === undefined)\n        {errorMsg = config.strings.genericWebGLError;}\n      infoDisplay.errorMsg.innerHTML = '<p>' + errorMsg + '</p>';\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'none';\n      infoDisplay.errorMsg.style.display = 'table';\n      error = true;\n      renderContainer.style.display = 'none';\n      fireEvent('error', errorMsg);\n    }\n\n    /**\n * Hides error message display.\n * @private\n */\n    function clearError() {\n      if (error) {\n        infoDisplay.load.box.style.display = 'none';\n        infoDisplay.errorMsg.style.display = 'none';\n        error = false;\n        fireEvent('errorcleared');\n      }\n    }\n\n    /**\n * Displays about message.\n * @private\n * @param {MouseEvent} event - Right click location\n */\n    function aboutMessage(event) {\n      var pos = mousePosition(event);\n      aboutMsg.style.left = pos.x + 'px';\n      aboutMsg.style.top = pos.y + 'px';\n      clearTimeout(aboutMessage.t1);\n      clearTimeout(aboutMessage.t2);\n      aboutMsg.style.display = 'block';\n      aboutMsg.style.opacity = 1;\n      aboutMessage.t1 = setTimeout(function() {aboutMsg.style.opacity = 0;}, 2000);\n      aboutMessage.t2 = setTimeout(function() {aboutMsg.style.display = 'none';}, 2500);\n      event.preventDefault();\n    }\n\n    /**\n * Calculate mouse position relative to top left of viewer container.\n * @private\n * @param {MouseEvent} event - Mouse event to use in calculation\n * @returns {Object} Calculated X and Y coordinates\n */\n    function mousePosition(event) {\n      var bounds = container.getBoundingClientRect();\n      var pos = {};\n      pos.x = event.clientX - bounds.left;\n      pos.y = event.clientY - bounds.top;\n      return pos;\n    }\n\n    /**\n * Event handler for mouse clicks. Initializes panning. Prints center and click\n * location coordinates when hot spot debugging is enabled.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentMouseDown(event) {\n    // Override default action\n      event.preventDefault();\n      // But not all of it\n      container.focus();\n    \n      // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n    \n      // Calculate mouse position relative to top left of viewer container\n      var pos = mousePosition(event);\n\n      // Log pitch / yaw of mouse click when debugging / placing hot spots\n      if (config.hotSpotDebug) {\n        var coords = mouseEventToCoords(event);\n        console.log('Pitch: ' + coords[0] + ', Yaw: ' + coords[1] + ', Center Pitch: ' +\n            config.pitch + ', Center Yaw: ' + config.yaw + ', HFOV: ' + config.hfov);\n      }\n    \n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownPointerX = pos.x;\n      onPointerDownPointerY = pos.y;\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n    \n      uiContainer.classList.add('pnlm-grabbing');\n      uiContainer.classList.remove('pnlm-grab');\n    \n      fireEvent('mousedown', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for double clicks. Zooms in at clicked location\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n */\n    function onDocumentDoubleClick(event) {\n      if (config.minHfov === config.hfov) {\n        _this.setHfov(origHfov, 1000);\n      } else {\n        var coords = mouseEventToCoords(event);\n        _this.lookAt(coords[0], coords[1], config.minHfov, 1000);\n      }\n    }\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @private\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    function mouseEventToCoords(event) {\n      var pos = mousePosition(event);\n      var canvas = renderer.getCanvas();\n      var canvasWidth = canvas.clientWidth,\n        canvasHeight = canvas.clientHeight;\n      var x = pos.x / canvasWidth * 2 - 1;\n      var y = (1 - pos.y / canvasHeight * 2) * canvasHeight / canvasWidth;\n      var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n      var s = Math.sin(config.pitch * Math.PI / 180);\n      var c = Math.cos(config.pitch * Math.PI / 180);\n      var a = focal * c - y * s;\n      var root = Math.sqrt(x*x + a*a);\n      var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n      var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n      if (yaw < -180)\n        {yaw += 360;}\n      if (yaw > 180)\n        {yaw -= 360;}\n      return [pitch, yaw];\n    }\n\n    /**\n * Event handler for mouse moves. Pans center of view.\n * @private\n * @param {MouseEvent} event - Document mouse move event.\n */\n    function onDocumentMouseMove(event) {\n      if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        var canvas = renderer.getCanvas();\n        var canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var pos = mousePosition(event);\n        //TODO: This still isn't quite right\n        var yaw = ((Math.atan(onPointerDownPointerX / canvasWidth * 2 - 1) - Math.atan(pos.x / canvasWidth * 2 - 1)) * 180 / Math.PI * config.hfov / 90) + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var vfov = 2 * Math.atan(Math.tan(config.hfov/360*Math.PI) * canvasHeight / canvasWidth) * 180 / Math.PI;\n        \n        var pitch = ((Math.atan(pos.y / canvasHeight * 2 - 1) - Math.atan(onPointerDownPointerY / canvasHeight * 2 - 1)) * 180 / Math.PI * vfov / 90) + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for mouse up events. Stops panning.\n * @private\n */\n    function onDocumentMouseUp(event) {\n      if (!isUserInteracting) {\n        return;\n      }\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        speed.pitch = speed.yaw = 0;\n      }\n      uiContainer.classList.add('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n      latestInteraction = Date.now();\n\n      fireEvent('mouseup', event);\n    }\n\n    /**\n * Event handler for touches. Initializes panning if one touch or zooming if\n * two touches.\n * @private\n * @param {TouchEvent} event - Document touch start event.\n */\n    function onDocumentTouchStart(event) {\n    // Only do something if the panorama is loaded\n      if (!loaded || !config.draggable) {\n        return;\n      }\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n\n      stopOrientation();\n      config.roll = 0;\n\n      speed.hfov = 0;\n\n      // Calculate touch position relative to top left of viewer container\n      var pos0 = mousePosition(event.targetTouches[0]);\n\n      onPointerDownPointerX = pos0.x;\n      onPointerDownPointerY = pos0.y;\n    \n      if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        var pos1 = mousePosition(event.targetTouches[1]);\n        onPointerDownPointerX += (pos1.x - pos0.x) * 0.5;\n        onPointerDownPointerY += (pos1.y - pos0.y) * 0.5;\n        onPointerDownPointerDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                             (pos0.y - pos1.y) * (pos0.y - pos1.y));\n      }\n      isUserInteracting = true;\n      latestInteraction = Date.now();\n    \n      onPointerDownYaw = config.yaw;\n      onPointerDownPitch = config.pitch;\n\n      fireEvent('touchstart', event);\n      animateInit();\n    }\n\n    /**\n * Event handler for touch movements. Pans center of view if one touch or\n * adjusts zoom if two touches.\n * @private\n * @param {TouchEvent} event - Document touch move event.\n */\n    function onDocumentTouchMove(event) {\n      if (!config.draggable) {\n        return;\n      }\n\n      // Override default action\n      event.preventDefault();\n      if (loaded) {\n        latestInteraction = Date.now();\n      }\n      if (isUserInteracting && loaded) {\n        var pos0 = mousePosition(event.targetTouches[0]);\n        var clientX = pos0.x;\n        var clientY = pos0.y;\n        \n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n          var pos1 = mousePosition(event.targetTouches[1]);\n          clientX += (pos1.x - pos0.x) * 0.5;\n          clientY += (pos1.y - pos0.y) * 0.5;\n          var clientDist = Math.sqrt((pos0.x - pos1.x) * (pos0.x - pos1.x) +\n                                       (pos0.y - pos1.y) * (pos0.y - pos1.y));\n          setHfov(config.hfov + (onPointerDownPointerDist - clientDist) * 0.1);\n          onPointerDownPointerDist = clientDist;\n        }\n\n        // The smaller the config.hfov value (the more zoomed-in the user is), the faster\n        // yaw/pitch are perceived to change on one-finger touchmove (panning) events and vice versa.\n        // To improve usability at both small and large zoom levels (config.hfov values)\n        // we introduce a dynamic pan speed coefficient.\n        //\n        // Currently this seems to *roughly* keep initial drag/pan start position close to\n        // the user's finger while panning regardless of zoom level / config.hfov value.\n        var touchmovePanSpeedCoeff = (config.hfov / 360) * config.touchPanSpeedCoeffFactor;\n\n        var yaw = (onPointerDownPointerX - clientX) * touchmovePanSpeedCoeff + onPointerDownYaw;\n        speed.yaw = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n\n        var pitch = (clientY - onPointerDownPointerY) * touchmovePanSpeedCoeff + onPointerDownPitch;\n        speed.pitch = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n      }\n    }\n\n    /**\n * Event handler for end of touches. Stops panning and/or zooming.\n * @private\n */\n    function onDocumentTouchEnd() {\n      isUserInteracting = false;\n      if (Date.now() - latestInteraction > 150) {\n        speed.pitch = speed.yaw = 0;\n      }\n      onPointerDownPointerDist = -1;\n      latestInteraction = Date.now();\n\n      fireEvent('touchend', event);\n    }\n\n    var pointerIDs = [],\n      pointerCoordinates = [];\n    /**\n * Event handler for touch starts in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer down event.\n */\n    function onDocumentPointerDown(event) {\n      if (event.pointerType == 'touch') {\n        pointerIDs.push(event.pointerId);\n        pointerCoordinates.push({ clientX: event.clientX, clientY: event.clientY });\n        event.targetTouches = pointerCoordinates;\n        onDocumentTouchStart(event);\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for touch moves in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer move event.\n */\n    function onDocumentPointerMove(event) {\n      if (event.pointerType == 'touch') {\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i]) {\n            pointerCoordinates[i].clientX = event.clientX;\n            pointerCoordinates[i].clientY = event.clientY;\n            event.targetTouches = pointerCoordinates;\n            onDocumentTouchMove(event);\n            event.preventDefault();\n            return;\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for touch ends in IE / Edge.\n * @private\n * @param {PointerEvent} event - Document pointer up event.\n */\n    function onDocumentPointerUp(event) {\n      if (event.pointerType == 'touch') {\n        var defined = false;\n        for (var i = 0; i < pointerIDs.length; i++) {\n          if (event.pointerId == pointerIDs[i])\n            {pointerIDs[i] = undefined;}\n          if (pointerIDs[i])\n            {defined = true;}\n        }\n        if (!defined) {\n          pointerIDs = [];\n          pointerCoordinates = [];\n          onDocumentTouchEnd();\n        }\n        event.preventDefault();\n      }\n    }\n\n    /**\n * Event handler for mouse wheel. Changes zoom.\n * @private\n * @param {WheelEvent} event - Document mouse wheel event.\n */\n    function onDocumentMouseWheel(event) {\n    // Only do something if the panorama is loaded and mouse wheel zoom is enabled\n      if (!loaded || (config.mouseZoom == 'fullscreenonly' && !fullscreenActive)) {\n        return;\n      }\n\n      event.preventDefault();\n\n      // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov - event.wheelDeltaY * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov - event.wheelDelta * 0.05);\n        speed.hfov = event.wheelDelta < 0 ? 1 : -1;\n      } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov + event.detail * 1.5);\n        speed.hfov = event.detail > 0 ? 1 : -1;\n      }\n    \n      animateInit();\n    }\n\n    /**\n * Event handler for key presses. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key press event.\n */\n    function onDocumentKeyPress(event) {\n    // Turn off auto-rotation if enabled\n      stopAnimation();\n      latestInteraction = Date.now();\n\n      stopOrientation();\n      config.roll = 0;\n\n      // Record key pressed\n      var keynumber = event.which || event.keycode;\n\n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // If escape key is pressed\n      if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n          toggleFullscreen();\n        }\n      } else {\n        // Change key\n        changeKey(keynumber, true);\n      }\n    }\n\n    /**\n * Clears list of currently pressed keys.\n * @private\n */\n    function clearKeys() {\n      for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n      }\n    }\n\n    /**\n * Event handler for key releases. Updates list of currently pressed keys.\n * @private\n * @param {KeyboardEvent} event - Document key up event.\n */\n    function onDocumentKeyUp(event) {\n    // Record key pressed\n      var keynumber = event.which || event.keycode;\n    \n      // Override default action for keys that are used\n      if (config.capturedKeyNumbers.indexOf(keynumber) < 0)\n        {return;}\n      event.preventDefault();\n    \n      // Change key\n      changeKey(keynumber, false);\n    }\n\n    /**\n * Updates list of currently pressed keys.\n * @private\n * @param {number} keynumber - Key number.\n * @param {boolean} value - Whether or not key is pressed.\n */\n    function changeKey(keynumber, value) {\n      var keyChanged = false;\n      switch (keynumber) {\n        // If minus key is released\n        case 109: case 189: case 17: case 173:\n          if (keysDown[0] != value) { keyChanged = true; }\n          keysDown[0] = value; break;\n        \n        // If plus key is released\n        case 107: case 187: case 16: case 61:\n          if (keysDown[1] != value) { keyChanged = true; }\n          keysDown[1] = value; break;\n        \n        // If up arrow is released\n        case 38:\n          if (keysDown[2] != value) { keyChanged = true; }\n          keysDown[2] = value; break;\n        \n        // If \"w\" is released\n        case 87:\n          if (keysDown[6] != value) { keyChanged = true; }\n          keysDown[6] = value; break;\n        \n        // If down arrow is released\n        case 40:\n          if (keysDown[3] != value) { keyChanged = true; }\n          keysDown[3] = value; break;\n        \n        // If \"s\" is released\n        case 83:\n          if (keysDown[7] != value) { keyChanged = true; }\n          keysDown[7] = value; break;\n        \n        // If left arrow is released\n        case 37:\n          if (keysDown[4] != value) { keyChanged = true; }\n          keysDown[4] = value; break;\n        \n        // If \"a\" is released\n        case 65:\n          if (keysDown[8] != value) { keyChanged = true; }\n          keysDown[8] = value; break;\n        \n        // If right arrow is released\n        case 39:\n          if (keysDown[5] != value) { keyChanged = true; }\n          keysDown[5] = value; break;\n        \n        // If \"d\" is released\n        case 68:\n          if (keysDown[9] != value) { keyChanged = true; }\n          keysDown[9] = value;\n      }\n    \n      if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n          prevTime = performance.now();\n        } else {\n          prevTime = Date.now();\n        }\n        animateInit();\n      }\n    }\n\n    /**\n * Pans and/or zooms panorama based on currently pressed keys. Also handles\n * panorama \"inertia\" and auto rotation.\n * @private\n */\n    function keyRepeat() {\n    // Only do something if the panorama is loaded\n      if (!loaded) {\n        return;\n      }\n\n      var isKeyDown = false;\n\n      var prevPitch = config.pitch;\n      var prevYaw = config.yaw;\n      var prevZoom = config.hfov;\n    \n      var newTime;\n      if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n      } else {\n        newTime = Date.now();\n      }\n      if (prevTime === undefined) {\n        prevTime = newTime;\n      }\n      var diff = (newTime - prevTime) * config.hfov / 1700;\n      diff = Math.min(diff, 1.0);\n    \n      // If minus key is down\n      if (keysDown[0] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 + 0.5) * diff);\n        isKeyDown = true;\n      }\n    \n      // If plus key is down\n      if (keysDown[1] && config.keyboardZoom === true) {\n        setHfov(config.hfov + (speed.hfov * 0.8 - 0.2) * diff);\n        isKeyDown = true;\n      }\n    \n      // If up arrow or \"w\" is down\n      if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (speed.pitch * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If down arrow or \"s\" is down\n      if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (speed.pitch * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If left arrow or \"a\" is down\n      if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (speed.yaw * 0.8 - 0.2) * diff;\n        isKeyDown = true;\n      }\n    \n      // If right arrow or \"d\" is down\n      if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (speed.yaw * 0.8 + 0.2) * diff;\n        isKeyDown = true;\n      }\n\n      if (isKeyDown)\n        {latestInteraction = Date.now();}\n\n      // If auto-rotate\n      var inactivityInterval = Date.now() - latestInteraction;\n      if (config.autoRotate) {\n        // Pan\n        if (newTime - prevTime > 0.001) {\n          var timeDiff = (newTime - prevTime) / 1000;\n          var yawDiff = (speed.yaw / timeDiff * diff - config.autoRotate * 0.2) * timeDiff;\n          yawDiff = (-config.autoRotate > 0 ? 1 : -1) * Math.min(Math.abs(config.autoRotate * timeDiff), Math.abs(yawDiff));\n          config.yaw += yawDiff;\n        }\n        \n        // Deal with stopping auto rotation after a set delay\n        if (config.autoRotateStopDelay) {\n          config.autoRotateStopDelay -= newTime - prevTime;\n          if (config.autoRotateStopDelay <= 0) {\n            config.autoRotateStopDelay = false;\n            autoRotateSpeed = config.autoRotate;\n            config.autoRotate = 0;\n          }\n        }\n      }\n\n      // Animated moves\n      if (animatedMove.pitch) {\n        animateMove('pitch');\n        prevPitch = config.pitch;\n      }\n      if (animatedMove.yaw) {\n        animateMove('yaw');\n        prevYaw = config.yaw;\n      }\n      if (animatedMove.hfov) {\n        animateMove('hfov');\n        prevZoom = config.hfov;\n      }\n\n      // \"Inertia\"\n      if (diff > 0 && !config.autoRotate) {\n        // \"Friction\"\n        var friction = 0.85;\n        \n        // Yaw\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9] && !animatedMove.yaw) {\n          config.yaw += speed.yaw * diff * friction;\n        }\n        // Pitch\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7] && !animatedMove.pitch) {\n          config.pitch += speed.pitch * diff * friction;\n        }\n        // Zoom\n        if (!keysDown[0] && !keysDown[1] && !animatedMove.hfov) {\n          setHfov(config.hfov + speed.hfov * diff * friction);\n        }\n      }\n\n      prevTime = newTime;\n      if (diff > 0) {\n        speed.yaw = speed.yaw * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        speed.pitch = speed.pitch * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        speed.hfov = speed.hfov * 0.8 + (config.hfov - prevZoom) / diff * 0.2;\n        \n        // Limit speed\n        var maxSpeed = config.autoRotate ? Math.abs(config.autoRotate) : 5;\n        speed.yaw = Math.min(maxSpeed, Math.max(speed.yaw, -maxSpeed));\n        speed.pitch = Math.min(maxSpeed, Math.max(speed.pitch, -maxSpeed));\n        speed.hfov = Math.min(maxSpeed, Math.max(speed.hfov, -maxSpeed));\n      }\n    \n      // Stop movement if opposite controls are pressed\n      if (keysDown[0] && keysDown[1]) {\n        speed.hfov = 0;\n      }\n      if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        speed.pitch = 0;\n      }\n      if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        speed.yaw = 0;\n      }\n    }\n\n    /**\n * Animates moves.\n * @param {string} axis - Axis to animate\n * @private\n */\n    function animateMove(axis) {\n      var t = animatedMove[axis];\n      var normTime = Math.min(1, Math.max((Date.now() - t.startTime) / 1000 / (t.duration / 1000), 0));\n      var result = t.startPosition + config.animationTimingFunction(normTime) * (t.endPosition - t.startPosition);\n      if ((t.endPosition > t.startPosition && result >= t.endPosition) ||\n        (t.endPosition < t.startPosition && result <= t.endPosition) ||\n        t.endPosition === t.startPosition) {\n        result = t.endPosition;\n        speed[axis] = 0;\n        var callback = animatedMove[axis].callback,\n          callbackArgs = animatedMove[axis].callbackArgs;\n        delete animatedMove[axis];\n        if (typeof callback === 'function')\n          {callback(callbackArgs);}\n      }\n      config[axis] = result;\n    }\n\n    /**\n * @param {number} t - Normalized time in animation\n * @return {number} Position in animation\n * @private\n */\n    function timingFunction(t) {\n    // easeInOutQuad from https://gist.github.com/gre/1650294\n      return t < 0.5 ? 2*t*t : -1+(4-2*t)*t;\n    }\n\n    /**\n * Event handler for document resizes. Updates viewer size and rerenders view.\n * @private\n */\n    function onDocumentResize() {\n    // Resize panorama renderer (moved to onFullScreenChange)\n    //renderer.resize();\n    //animateInit();\n\n    // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n      onFullScreenChange();\n    }\n\n    /**\n * Initializes animation.\n * @private\n */\n    function animateInit() {\n      if (animating) {\n        return;\n      }\n      animating = true;\n      animate();\n    }\n\n    /**\n * Animates view, using requestAnimationFrame to trigger rendering.\n * @private\n */\n    function animate() {\n      render();\n      if (autoRotateStart)\n        {clearTimeout(autoRotateStart);}\n      if (isUserInteracting || orientation === true) {\n        requestAnimationFrame(animate);\n      } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] ||\n        keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] ||\n        keysDown[8] || keysDown[9] || config.autoRotate ||\n        animatedMove.pitch || animatedMove.yaw || animatedMove.hfov ||\n        Math.abs(speed.yaw) > 0.01 || Math.abs(speed.pitch) > 0.01 ||\n        Math.abs(speed.hfov) > 0.01) {\n\n        keyRepeat();\n        if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed &&\n            Date.now() - latestInteraction > config.autoRotateInactivityDelay &&\n            !config.autoRotate) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n        }\n        requestAnimationFrame(animate);\n      } else if (renderer && (renderer.isLoading() || (config.dynamic === true && update))) {\n        requestAnimationFrame(animate);\n      } else {\n        animating = false;\n        prevTime = undefined;\n        var autoRotateStartTime = config.autoRotateInactivityDelay -\n            (Date.now() - latestInteraction);\n        if (autoRotateStartTime > 0) {\n          autoRotateStart = setTimeout(function() {\n            config.autoRotate = autoRotateSpeed;\n            _this.lookAt(origPitch, undefined, origHfov, 3000);\n            animateInit();\n          }, autoRotateStartTime);\n        } else if (config.autoRotateInactivityDelay >= 0 && autoRotateSpeed) {\n          config.autoRotate = autoRotateSpeed;\n          _this.lookAt(origPitch, undefined, origHfov, 3000);\n          animateInit();\n        }\n      }\n    }\n\n    /**\n * Renders panorama view.\n * @private\n */\n    function render() {\n      var tmpyaw;\n\n      if (loaded) {\n        if (config.yaw > 180) {\n          config.yaw -= 360;\n        } else if (config.yaw < -180) {\n          config.yaw += 360;\n        }\n\n        // Keep a tmp value of yaw for autoRotate comparison later\n        tmpyaw = config.yaw;\n\n        // Optionally avoid showing background (empty space) on left or right by adapting min/max yaw\n        var hoffcut = 0,\n          voffcut = 0;\n        if (config.avoidShowingBackground) {\n          var canvas = renderer.getCanvas(),\n            hfov2 = config.hfov / 2,\n            vfov2 = Math.atan2(Math.tan(hfov2 / 180 * Math.PI), (canvas.width / canvas.height)) * 180 / Math.PI,\n            transposed = config.vaov > config.haov;\n          if (transposed) {\n            voffcut = vfov2 * (1 - Math.min(Math.cos((config.pitch - hfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + hfov2) / 180 * Math.PI)));\n          } else {\n            hoffcut = hfov2 * (1 - Math.min(Math.cos((config.pitch - vfov2) / 180 * Math.PI),\n              Math.cos((config.pitch + vfov2) / 180 * Math.PI)));\n          }\n        }\n\n        // Ensure the yaw is within min and max allowed\n        var yawRange = config.maxYaw - config.minYaw,\n          minYaw = -180,\n          maxYaw = 180;\n        if (yawRange < 360) {\n          minYaw = config.minYaw + config.hfov / 2 + hoffcut;\n          maxYaw = config.maxYaw - config.hfov / 2 - hoffcut;\n          if (yawRange < config.hfov) {\n            // Lock yaw to average of min and max yaw when both can be seen at once\n            minYaw = maxYaw = (minYaw + maxYaw) / 2;\n          }\n          config.yaw = Math.max(minYaw, Math.min(maxYaw, config.yaw));\n        }\n        \n        // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n        if (config.autoRotate !== false && tmpyaw != config.yaw &&\n            prevTime !== undefined) { // this condition prevents changing the direction initially\n          config.autoRotate *= -1;\n        }\n\n        // Ensure the calculated pitch is within min and max allowed\n        var canvas = renderer.getCanvas();\n        var vfov = 2 * Math.atan(Math.tan(config.hfov / 180 * Math.PI * 0.5) /\n            (canvas.width / canvas.height)) / Math.PI * 180;\n        var minPitch = config.minPitch + vfov / 2,\n          maxPitch = config.maxPitch - vfov / 2;\n        var pitchRange = config.maxPitch - config.minPitch;\n        if (pitchRange < vfov) {\n          // Lock pitch to average of min and max pitch when both can be seen at once\n          minPitch = maxPitch = (minPitch + maxPitch) / 2;\n        }\n        if (isNaN(minPitch))\n          {minPitch = -90;}\n        if (isNaN(maxPitch))\n          {maxPitch = 90;}\n        config.pitch = Math.max(minPitch, Math.min(maxPitch, config.pitch));\n        \n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { roll: config.roll * Math.PI / 180 });\n        \n        renderHotSpots();\n        \n        // Update compass\n        if (config.compass) {\n          compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n          compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n        \n        if (config.onRender) {\n          config.onRender();\n        }\n      }\n    }\n\n    /**\n * Creates a new quaternion.\n * @private\n * @constructor\n * @param {Number} w - W value\n * @param {Number} x - X value\n * @param {Number} y - Y value\n * @param {Number} z - Z value\n */\n    function Quaternion(w, x, y, z) {\n      this.w = w;\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n\n    /**\n * Multiplies quaternions.\n * @private\n * @param {Quaternion} q - Quaternion to multiply\n * @returns {Quaternion} Result of multiplication\n */\n    Quaternion.prototype.multiply = function(q) {\n      return new Quaternion(this.w*q.w - this.x*q.x - this.y*q.y - this.z*q.z,\n        this.x*q.w + this.w*q.x + this.y*q.z - this.z*q.y,\n        this.y*q.w + this.w*q.y + this.z*q.x - this.x*q.z,\n        this.z*q.w + this.w*q.z + this.x*q.y - this.y*q.x);\n    };\n\n    /**\n * Converts quaternion to Euler angles.\n * @private\n * @returns {Number[]} [phi angle, theta angle, psi angle]\n */\n    Quaternion.prototype.toEulerAngles = function() {\n      var phi = Math.atan2(2 * (this.w * this.x + this.y * this.z),\n          1 - 2 * (this.x * this.x + this.y * this.y)),\n        theta = Math.asin(2 * (this.w * this.y - this.z * this.x)),\n        psi = Math.atan2(2 * (this.w * this.z + this.x * this.y),\n          1 - 2 * (this.y * this.y + this.z * this.z));\n      return [phi, theta, psi];\n    };\n\n    /**\n * Converts device orientation API Tait-Bryan angles to a quaternion.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function taitBryanToQuaternion(alpha, beta, gamma) {\n      var r = [beta ? beta * Math.PI / 180 / 2 : 0,\n        gamma ? gamma * Math.PI / 180 / 2 : 0,\n        alpha ? alpha * Math.PI / 180 / 2 : 0];\n      var c = [Math.cos(r[0]), Math.cos(r[1]), Math.cos(r[2])],\n        s = [Math.sin(r[0]), Math.sin(r[1]), Math.sin(r[2])];\n\n      return new Quaternion(c[0]*c[1]*c[2] - s[0]*s[1]*s[2],\n        s[0]*c[1]*c[2] - c[0]*s[1]*s[2],\n        c[0]*s[1]*c[2] + s[0]*c[1]*s[2],\n        c[0]*c[1]*s[2] + s[0]*s[1]*c[2]);\n    }\n\n    /**\n * Computes current device orientation quaternion from device orientation API\n * Tait-Bryan angles.\n * @private\n * @param {Number} alpha - Alpha angle (in degrees)\n * @param {Number} beta - Beta angle (in degrees)\n * @param {Number} gamma - Gamma angle (in degrees)\n * @returns {Quaternion} Orientation quaternion\n */\n    function computeQuaternion(alpha, beta, gamma) {\n    // Convert Tait-Bryan angles to quaternion\n      var quaternion = taitBryanToQuaternion(alpha, beta, gamma);\n      // Apply world transform\n      quaternion = quaternion.multiply(new Quaternion(Math.sqrt(0.5), -Math.sqrt(0.5), 0, 0));\n      // Apply screen transform\n      var angle = window.orientation ? -window.orientation * Math.PI / 180 / 2 : 0;\n      return quaternion.multiply(new Quaternion(Math.cos(angle), 0, -Math.sin(angle), 0));\n    }\n\n    /**\n * Event handler for device orientation API. Controls pointing.\n * @private\n * @param {DeviceOrientationEvent} event - Device orientation event.\n */\n    function orientationListener(e) {\n      var q = computeQuaternion(e.alpha, e.beta, e.gamma).toEulerAngles();\n      if (typeof(orientation) === 'number' && orientation < 10) {\n        // This kludge is necessary because iOS sometimes provides a few stale\n        // device orientation events when the listener is removed and then\n        // readded. Thus, we skip the first 10 events to prevent this from\n        // causing problems.\n        orientation += 1;\n      } else if (orientation === 10) {\n        // Record starting yaw to prevent jumping\n        orientationYawOffset = q[2] / Math.PI * 180 + config.yaw;\n        orientation = true;\n        requestAnimationFrame(animate);\n      } else {\n        config.pitch = q[0] / Math.PI * 180;\n        config.roll = -q[1] / Math.PI * 180;\n        config.yaw = -q[2] / Math.PI * 180 + orientationYawOffset;\n      }\n    }\n\n    /**\n * Initializes renderer.\n * @private\n */\n    function renderInit() {\n      try {\n        var params = {};\n        if (config.horizonPitch !== undefined)\n          {params.horizonPitch = config.horizonPitch * Math.PI / 180;}\n        if (config.horizonRoll !== undefined)\n          {params.horizonRoll = config.horizonRoll * Math.PI / 180;}\n        if (config.backgroundColor !== undefined)\n          {params.backgroundColor = config.backgroundColor;}\n        renderer.init(panoImage, config.type, config.dynamic, config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback, params);\n        if (config.dynamic !== true) {\n          // Allow image to be garbage collected\n          panoImage = undefined;\n        }\n      } catch (event) {\n        // Panorama not loaded\n        \n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n          anError();\n        } else if (event.type == 'webgl size error') {\n          anError(config.strings.textureSizeError.replace('%s', event.width).replace('%s', event.maxWidth));\n        } else {\n          anError(config.strings.unknownError);\n          throw event;\n        }\n      }\n    }\n\n    /**\n * Triggered when render initialization finishes. Handles fading between\n * scenes as well as showing the compass and hotspots and hiding the loading\n * display.\n * @private\n */\n    function renderInitCallback() {\n    // Fade if specified\n      if (config.sceneFadeDuration && renderer.fadeImg !== undefined) {\n        renderer.fadeImg.style.opacity = 0;\n        // Remove image\n        var fadeImg = renderer.fadeImg;\n        delete renderer.fadeImg;\n        setTimeout(function() {\n          renderContainer.removeChild(fadeImg);\n          fireEvent('scenechangefadedone');\n        }, config.sceneFadeDuration);\n      }\n    \n      // Show compass if applicable\n      if (config.compass) {\n        compass.style.display = 'inline';\n      } else {\n        compass.style.display = 'none';\n      }\n    \n      // Show hotspots\n      createHotSpots();\n    \n      // Hide loading display\n      infoDisplay.load.box.style.display = 'none';\n      if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n      }\n      loaded = true;\n\n      fireEvent('load');\n    \n      animateInit();\n    }\n\n    /**\n * Creates hot spot element for the current scene.\n * @private\n * @param {Object} hs - The configuration for the hotspot\n */\n    function createHotSpot(hs) {\n    // Make sure hot spot pitch and yaw are numbers\n      hs.pitch = Number(hs.pitch) || 0;\n      hs.yaw = Number(hs.yaw) || 0;\n\n      var div = document.createElement('div');\n      div.className = 'pnlm-hotspot-base';\n      if (hs.cssClass)\n        {div.className += ' ' + hs.cssClass;}\n      else\n        {div.className += ' pnlm-hotspot pnlm-sprite pnlm-' + escapeHTML(hs.type);}\n\n      var span = document.createElement('span');\n      if (hs.text)\n        {span.innerHTML = escapeHTML(hs.text);}\n\n      var a;\n      if (hs.video) {\n        var video = document.createElement('video'),\n          p = hs.video;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        video.src = sanitizeURL(p);\n        video.controls = true;\n        video.style.width = hs.width + 'px';\n        renderContainer.appendChild(div);\n        span.appendChild(video);\n      } else if (hs.image) {\n        var p = hs.image;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL ? hs.URL : p);\n        a.target = '_blank';\n        span.appendChild(a);\n        var image = document.createElement('img');\n        image.src = sanitizeURL(p);\n        image.style.width = hs.width + 'px';\n        image.style.paddingTop = '5px';\n        renderContainer.appendChild(div);\n        a.appendChild(image);\n        span.style.maxWidth = 'initial';\n      } else if (hs.URL) {\n        a = document.createElement('a');\n        a.href = sanitizeURL(hs.URL);\n        a.target = '_blank';\n        renderContainer.appendChild(a);\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n        a.appendChild(div);\n      } else {\n        if (hs.sceneId) {\n          div.onclick = div.ontouchend = function() {\n            if (!div.clicked) {\n              div.clicked = true;\n              loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw, hs.targetHfov);\n            }\n            return false;\n          };\n          div.className += ' pnlm-pointer';\n          span.className += ' pnlm-pointer';\n        }\n        renderContainer.appendChild(div);\n      }\n\n      if (hs.createTooltipFunc) {\n        hs.createTooltipFunc(div, hs.createTooltipArgs);\n      } else if (hs.text || hs.video || hs.image) {\n        div.classList.add('pnlm-tooltip');\n        div.appendChild(span);\n        span.style.width = span.scrollWidth - 20 + 'px';\n        span.style.marginLeft = -(span.scrollWidth - div.offsetWidth) / 2 + 'px';\n        span.style.marginTop = -span.scrollHeight - 12 + 'px';\n      }\n      if (hs.clickHandlerFunc) {\n        div.addEventListener('click', function(e) {\n          hs.clickHandlerFunc(e, hs.clickHandlerArgs);\n        }, 'false');\n        div.className += ' pnlm-pointer';\n        span.className += ' pnlm-pointer';\n      }\n      hs.div = div;\n    };\n\n    /**\n * Creates hot spot elements for the current scene.\n * @private\n */\n    function createHotSpots() {\n      if (hotspotsCreated) {return;}\n\n      if (!config.hotSpots) {\n        config.hotSpots = [];\n      } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function(a, b) {\n          return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(createHotSpot);\n      }\n      hotspotsCreated = true;\n      renderHotSpots();\n    }\n\n    /**\n * Destroys currently created hot spot elements.\n * @private\n */\n    function destroyHotSpots() {\n      var hs = config.hotSpots;\n      hotspotsCreated = false;\n      delete config.hotSpots;\n      if (hs) {\n        for (var i = 0; i < hs.length; i++) {\n          var current = hs[i].div;\n          while (current.parentNode != renderContainer) {\n            current = current.parentNode;\n          }\n          renderContainer.removeChild(current);\n          delete hs[i].div;\n        }\n      }\n    }\n\n    /**\n * Renders hot spot, updating its position and visibility.\n * @private\n */\n    function renderHotSpot(hs) {\n      var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180),\n        hsPitchCos = Math.cos(hs.pitch * Math.PI / 180),\n        configPitchSin = Math.sin(config.pitch * Math.PI / 180),\n        configPitchCos = Math.cos(config.pitch * Math.PI / 180),\n        yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n      var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n      if ((hs.yaw <= 90 && hs.yaw > -90 && z <= 0) ||\n      ((hs.yaw > 90 || hs.yaw <= -90) && z <= 0)) {\n        hs.div.style.visibility = 'hidden';\n      } else {\n        var yawSin = Math.sin((-hs.yaw + config.yaw) * Math.PI / 180),\n          hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        hs.div.style.visibility = 'visible';\n        // Subpixel rendering doesn't work in Firefox\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n        var canvas = renderer.getCanvas(),\n          canvasWidth = canvas.clientWidth,\n          canvasHeight = canvas.clientHeight;\n        var coord = [-canvasWidth / hfovTan * yawSin * hsPitchCos / z / 2,\n          -canvasWidth / hfovTan * (hsPitchSin * configPitchCos -\n            hsPitchCos * yawCos * configPitchSin) / z / 2];\n        // Apply roll\n        var rollSin = Math.sin(config.roll * Math.PI / 180),\n          rollCos = Math.cos(config.roll * Math.PI / 180);\n        coord = [coord[0] * rollCos - coord[1] * rollSin,\n          coord[0] * rollSin + coord[1] * rollCos];\n        // Apply transform\n        coord[0] += (canvasWidth - hs.div.offsetWidth) / 2;\n        coord[1] += (canvasHeight - hs.div.offsetHeight) / 2;\n        var transform = 'translate(' + coord[0] + 'px, ' + coord[1] +\n            'px) translateZ(9999px) rotate(' + config.roll + 'deg)';\n        hs.div.style.webkitTransform = transform;\n        hs.div.style.MozTransform = transform;\n        hs.div.style.transform = transform;\n      }\n    }\n\n    /**\n * Renders hot spots, updating their positions and visibility.\n * @private\n */\n    function renderHotSpots() {\n      config.hotSpots.forEach(renderHotSpot);\n    }\n\n    /**\n * Merges a scene configuration into the current configuration.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n */\n    function mergeConfig(sceneId) {\n      config = {};\n      var k, s;\n      var photoSphereExcludes = ['haov', 'vaov', 'vOffset', 'northOffset', 'horizonPitch', 'horizonRoll'];\n      specifiedPhotoSphereExcludes = [];\n    \n      // Merge default config\n      for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n          config[k] = defaultConfig[k];\n        }\n      }\n    \n      // Merge default scene config\n      for (k in initialConfig.default) {\n        if (initialConfig.default.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.default.strings) {\n              if (initialConfig.default.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.default.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig.default[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    \n      // Merge current scene config\n      if ((sceneId !== null) && (sceneId !== '') && (initialConfig.scenes) && (initialConfig.scenes[sceneId])) {\n        var scene = initialConfig.scenes[sceneId];\n        for (k in scene) {\n          if (scene.hasOwnProperty(k)) {\n            if (k == 'strings') {\n              for (s in scene.strings) {\n                if (scene.strings.hasOwnProperty(s)) {\n                  config.strings[s] = escapeHTML(scene.strings[s]);\n                }\n              }\n            } else {\n              config[k] = scene[k];\n              if (photoSphereExcludes.indexOf(k) >= 0) {\n                specifiedPhotoSphereExcludes.push(k);\n              }\n            }\n          }\n        }\n        config.scene = sceneId;\n      }\n    \n      // Merge initial config\n      for (k in initialConfig) {\n        if (initialConfig.hasOwnProperty(k)) {\n          if (k == 'strings') {\n            for (s in initialConfig.strings) {\n              if (initialConfig.strings.hasOwnProperty(s)) {\n                config.strings[s] = escapeHTML(initialConfig.strings[s]);\n              }\n            }\n          } else {\n            config[k] = initialConfig[k];\n            if (photoSphereExcludes.indexOf(k) >= 0) {\n              specifiedPhotoSphereExcludes.push(k);\n            }\n          }\n        }\n      }\n    }\n\n    /**\n * Processes configuration options.\n * @param {boolean} [isPreview] - Whether or not the preview is being displayed\n * @private\n */\n    function processOptions(isPreview) {\n      isPreview = isPreview ? isPreview : false;\n\n      // Process preview first so it always loads before the browser hits its\n      // maximum number of connections to a server as can happen with cubic\n      // panoramas\n      if (isPreview && 'preview' in config) {\n        var p = config.preview;\n        if (config.basePath && !absoluteURL(p))\n          {p = config.basePath + p;}\n        preview = document.createElement('div');\n        preview.className = 'pnlm-preview-img';\n        preview.style.backgroundImage = \"url('\" + sanitizeURLForCss(p) + \"')\";\n        renderContainer.appendChild(preview);\n      }\n\n      // Handle different preview values\n      var title = config.title,\n        author = config.author;\n      if (isPreview) {\n        if ('previewTitle' in config)\n          {config.title = config.previewTitle;}\n        if ('previewAuthor' in config)\n          {config.author = config.previewAuthor;}\n      }\n\n      // Reset title / author display\n      if (!config.hasOwnProperty('title'))\n        {infoDisplay.title.innerHTML = '';}\n      if (!config.hasOwnProperty('author'))\n        {infoDisplay.author.innerHTML = '';}\n      if (!config.hasOwnProperty('title') && !config.hasOwnProperty('author'))\n        {infoDisplay.container.style.display = 'none';}\n\n      // Fill in load button label and loading box text\n      controls.load.innerHTML = '<p>' + config.strings.loadButtonLabel + '</p>';\n      infoDisplay.load.boxp.innerHTML = config.strings.loadingLabel;\n\n      // Process other options\n      for (var key in config) {\n        if (config.hasOwnProperty(key)) {\n          switch (key) {\n            case 'title':\n              infoDisplay.title.innerHTML = escapeHTML(config[key]);\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'author':\n              infoDisplay.author.innerHTML = config.strings.bylineLabel.replace('%s', escapeHTML(config[key]));\n              infoDisplay.container.style.display = 'inline';\n              break;\n            \n            case 'fallback':\n              var link = document.createElement('a');\n              link.href = sanitizeURL(config[key]);\n              link.target = '_blank';\n              link.textContent = 'Click here to view this panorama in an alternative viewer.';\n              var message = document.createElement('p');\n              message.textContent = 'Your browser does not support WebGL.';\n              message.appendChild(document.createElement('br'));\n              message.appendChild(link);\n              infoDisplay.errorMsg.innerHTML = ''; // Removes all children nodes\n              infoDisplay.errorMsg.appendChild(message);\n              break;\n            \n            case 'hfov':\n              setHfov(Number(config[key]));\n              break;\n            \n            case 'autoLoad':\n              if (config[key] === true && renderer === undefined) {\n                // Show loading box\n                infoDisplay.load.box.style.display = 'inline';\n                // Hide load button\n                controls.load.style.display = 'none';\n                // Initialize\n                init();\n              }\n              break;\n            \n            case 'showZoomCtrl':\n              if (config[key] && config.showControls != false) {\n                // Show zoom controls\n                controls.zoom.style.display = 'block';\n              } else {\n                // Hide zoom controls\n                controls.zoom.style.display = 'none';\n              }\n              break;\n\n            case 'showFullscreenCtrl':\n              if (config[key] && config.showControls != false && ('fullscreen' in document || 'mozFullScreen' in document ||\n                    'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                    \n                // Show fullscreen control\n                controls.fullscreen.style.display = 'block';\n              } else {\n                // Hide fullscreen control\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'hotSpotDebug':\n              if (config[key])\n                {hotSpotDebugIndicator.style.display = 'block';}\n              else\n                {hotSpotDebugIndicator.style.display = 'none';}\n              break;\n\n            case 'showControls':\n              if (!config[key]) {\n                controls.orientation.style.display = 'none';\n                controls.zoom.style.display = 'none';\n                controls.fullscreen.style.display = 'none';\n              }\n              break;\n\n            case 'orientationOnByDefault':\n              if (config[key]) {\n                if (orientationSupport === undefined)\n                  {startOrientationIfSupported = true;}\n                else if (orientationSupport === true)\n                  {startOrientation();}\n              }\n              break;\n          }\n        }\n      }\n\n      if (isPreview) {\n        // Restore original values if changed for preview\n        if (title)\n          {config.title = title;}\n        else\n          {delete config.title;}\n        if (author)\n          {config.author = author;}\n        else\n          {delete config.author;}\n      }\n    }\n\n    /**\n * Toggles fullscreen mode.\n * @private\n */\n    function toggleFullscreen() {\n      if (loaded && !error) {\n        if (!fullscreenActive) {\n          try {\n            if (container.requestFullscreen) {\n              container.requestFullscreen();\n            } else if (container.mozRequestFullScreen) {\n              container.mozRequestFullScreen();\n            } else if (container.msRequestFullscreen) {\n              container.msRequestFullscreen();\n            } else {\n              container.webkitRequestFullScreen();\n            }\n          } catch (event) {\n            // Fullscreen doesn't work\n          }\n        } else {\n          if (document.exitFullscreen) {\n            document.exitFullscreen();\n          } else if (document.mozCancelFullScreen) {\n            document.mozCancelFullScreen();\n          } else if (document.webkitCancelFullScreen) {\n            document.webkitCancelFullScreen();\n          } else if (document.msExitFullscreen) {\n            document.msExitFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n * Event handler for fullscreen changes.\n * @private\n */\n    function onFullScreenChange() {\n      let isFullScreen = (window.innerWidth == screen.width && window.innerHeight == screen.height);\n      if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement || isFullScreen) {\n        controls.fullscreen.classList.add('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = true;\n      } else {\n        controls.fullscreen.classList.remove('pnlm-fullscreen-toggle-button-active');\n        fullscreenActive = false;\n      }\n\n      // Resize renderer (deal with browser quirks and fixes #155)\n      renderer.resize();\n      setHfov(config.hfov);\n      animateInit();\n    }\n\n    /**\n * Increases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomIn() {\n      if (loaded) {\n        setHfov(config.hfov - 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Decreases panorama zoom. For use with zoom button.\n * @private\n */\n    function zoomOut() {\n      if (loaded) {\n        setHfov(config.hfov + 5);\n        animateInit();\n      }\n    }\n\n    /**\n * Clamps horzontal field of view to viewer's limits.\n * @private\n * @param {number} hfov - Input horizontal field of view (in degrees)\n * @return {number} - Clamped horizontal field of view (in degrees)\n */\n    function constrainHfov(hfov) {\n    // Keep field of view within bounds\n      var minHfov = config.minHfov;\n      if (config.type == 'multires' && renderer) {\n        minHfov = Math.min(minHfov, renderer.getCanvas().width / (config.multiRes.cubeResolution / 90 * 0.9));\n      }\n      if (minHfov > config.maxHfov) {\n        // Don't change view if bounds don't make sense\n        console.log('HFOV bounds do not make sense (minHfov > maxHfov).');\n        return config.hfov;\n      }\n      var newHfov = config.hfov;\n      if (hfov < minHfov) {\n        newHfov = minHfov;\n      } else if (hfov > config.maxHfov) {\n        newHfov = config.maxHfov;\n      } else {\n        newHfov = hfov;\n      }\n      // Optionally avoid showing background (empty space) on top or bottom by adapting newHfov\n      if (config.avoidShowingBackground && renderer) {\n        var canvas = renderer.getCanvas();\n        newHfov = Math.min(newHfov,\n          Math.atan(Math.tan((config.maxPitch - config.minPitch) / 360 * Math.PI) /\n                                     canvas.height * canvas.width)\n                               * 360 / Math.PI);\n      }\n      return newHfov;\n    }\n\n    /**\n * Sets viewer's horizontal field of view.\n * @private\n * @param {number} hfov - Desired horizontal field of view in degrees.\n */\n    function setHfov(hfov) {\n      config.hfov = constrainHfov(hfov);\n    }\n\n    /**\n * Stops auto rotation and animated moves.\n * @private\n */\n    function stopAnimation() {\n      animatedMove = {};\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n    }\n\n    /**\n * Loads panorama.\n * @private\n */\n    function load() {\n    // Since WebGL error handling is very general, first we clear any error box\n    // since it is a new scene and the error from previous maybe because of lacking\n    // memory etc and not because of a lack of WebGL support etc\n      clearError();\n      loaded = false;\n\n      controls.load.style.display = 'none';\n      infoDisplay.load.box.style.display = 'inline';\n      init();\n    }\n\n    /**\n * Loads scene.\n * @private\n * @param {string} sceneId - Identifier of scene configuration to merge in.\n * @param {number} targetPitch - Pitch viewer should be centered on once scene loads.\n * @param {number} targetYaw - Yaw viewer should be centered on once scene loads.\n * @param {number} targetHfov - HFOV viewer should use once scene loads.\n * @param {boolean} [fadeDone] - If `true`, fade setup is skipped.\n */\n    function loadScene(sceneId, targetPitch, targetYaw, targetHfov, fadeDone) {\n      loaded = false;\n      animatedMove = {};\n    \n      // Set up fade if specified\n      var fadeImg, workingPitch, workingYaw, workingHfov;\n      if (config.sceneFadeDuration && !fadeDone) {\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, { returnImage: true });\n        if (data !== undefined) {\n          fadeImg = new Image();\n          fadeImg.className = 'pnlm-fade-img';\n          fadeImg.style.transition = 'opacity ' + (config.sceneFadeDuration / 1000) + 's';\n          fadeImg.style.width = '100%';\n          fadeImg.style.height = '100%';\n          fadeImg.onload = function() {\n            loadScene(sceneId, targetPitch, targetYaw, targetHfov, true);\n          };\n          fadeImg.src = data;\n          renderContainer.appendChild(fadeImg);\n          renderer.fadeImg = fadeImg;\n          return;\n        }\n      }\n    \n      // Set new pointing\n      if (targetPitch === 'same') {\n        workingPitch = config.pitch;\n      } else {\n        workingPitch = targetPitch;\n      }\n      if (targetYaw === 'same') {\n        workingYaw = config.yaw;\n      } else if (targetYaw === 'sameAzimuth') {\n        workingYaw = config.yaw + (config.northOffset || 0) - (initialConfig.scenes[sceneId].northOffset || 0);\n      } else {\n        workingYaw = targetYaw;\n      }\n      if (targetHfov === 'same') {\n        workingHfov = config.hfov;\n      } else {\n        workingHfov = targetHfov;\n      }\n    \n      // Destroy hot spots from previous scene\n      destroyHotSpots();\n    \n      // Create the new config for the scene\n      mergeConfig(sceneId);\n\n      // Stop motion\n      speed.yaw = speed.pitch = speed.hfov = 0;\n\n      // Reload scene\n      processOptions();\n      if (workingPitch !== undefined) {\n        config.pitch = workingPitch;\n      }\n      if (workingYaw !== undefined) {\n        config.yaw = workingYaw;\n      }\n      if (workingHfov !== undefined) {\n        config.hfov = workingHfov;\n      }\n      fireEvent('scenechange', sceneId);\n      load();\n    }\n\n    /**\n * Stop using device orientation.\n * @private\n */\n    function stopOrientation() {\n      window.removeEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.remove('pnlm-orientation-button-active');\n      orientation = false;\n    }\n\n    /**\n * Start using device orientation.\n * @private\n */\n    function startOrientation() {\n      orientation = 1;\n      window.addEventListener('deviceorientation', orientationListener);\n      controls.orientation.classList.add('pnlm-orientation-button-active');\n    }\n\n    /**\n * Escapes HTML string (to mitigate possible DOM XSS attacks).\n * @private\n * @param {string} s - String to escape\n * @returns {string} Escaped string\n */\n    function escapeHTML(s) {\n      if (!initialConfig.escapeHTML)\n        {return String(s).split('\\n').join('<br>');}\n      return String(s).split(/&/g).join('&amp;')\n        .split('\"').join('&quot;')\n        .split(\"'\").join('&#39;')\n        .split('<').join('&lt;')\n        .split('>').join('&gt;')\n        .split('/').join('&#x2f;')\n        .split('\\n').join('<br>');  // Allow line breaks\n    }\n\n    /**\n * Removes possibility of XSS attacks with URLs.\n * The URL cannot be of protocol 'javascript'.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURL(url) {\n      if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n        return 'about:blank';\n      }\n      return url;\n    }\n\n    /**\n * Removes possibility of XSS atacks with URLs for CSS.\n * The URL will be sanitized with `sanitizeURL()` and single quotes\n * and double quotes escaped.\n * @private\n * @param {string} url - URL to sanitize\n * @returns {string} Sanitized URL\n */\n    function sanitizeURLForCss(url) {\n      return sanitizeURL(url)\n        .replace(/\"/g, '%22')\n        .replace(/'/g, '%27');\n    }\n\n    /**\n * Checks whether or not a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} `true` if a panorama is loaded, else `false`\n */\n    this.isLoaded = function() {\n      return Boolean(loaded);\n    };\n\n    /**\n * Returns the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Pitch in degrees\n */\n    this.getPitch = function() {\n      return config.pitch;\n    };\n\n    /**\n * Sets the pitch of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Pitch in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setPitch = function(pitch, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.pitch = {\n          'startTime': Date.now(),\n          'startPosition': config.pitch,\n          'endPosition': pitch,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.pitch = pitch;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum pitch, maximum pitch]\n */\n    this.getPitchBounds = function() {\n      return [config.minPitch, config.maxPitch];\n    };\n\n    /**\n * Set the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum pitch, maximum pitch]\n * @returns {Viewer} `this`\n */\n    this.setPitchBounds = function(bounds) {\n      config.minPitch = Math.max(-90, Math.min(bounds[0], 90));\n      config.maxPitch = Math.max(-90, Math.min(bounds[1], 90));\n      return this;\n    };\n\n    /**\n * Returns the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @returns {number} Yaw in degrees\n */\n    this.getYaw = function() {\n      return config.yaw;\n    };\n\n    /**\n * Sets the yaw of the center of the view.\n * @memberof Viewer\n * @instance\n * @param {number} yaw - Yaw in degrees [-180, 180]\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setYaw = function(yaw, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      yaw = ((yaw + 180) % 360) - 180; // Keep in bounds\n      if (animated) {\n        // Animate in shortest direction\n        if (config.yaw - yaw > 180)\n          {yaw += 360}\n        else if (yaw - config.yaw > 180)\n          {yaw -= 360}\n\n        animatedMove.yaw = {\n          'startTime': Date.now(),\n          'startPosition': config.yaw,\n          'endPosition': yaw,\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        config.yaw = yaw;\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed pitches (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [yaw pitch, maximum yaw]\n */\n    this.getYawBounds = function() {\n      return [config.minYaw, config.maxYaw];\n    };\n\n    /**\n * Set the minimum and maximum allowed yaws (in degrees [-180, 180]).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum yaw, maximum yaw]\n * @returns {Viewer} `this`\n */\n    this.setYawBounds = function(bounds) {\n      config.minYaw = Math.max(-180, Math.min(bounds[0], 180));\n      config.maxYaw = Math.max(-180, Math.min(bounds[1], 180));\n      return this;\n    };\n\n    /**\n * Returns the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizontal field of view in degrees\n */\n    this.getHfov = function() {\n      return config.hfov;\n    };\n\n    /**\n * Sets the horizontal field of view.\n * @memberof Viewer\n * @instance\n * @param {number} hfov - Horizontal field of view in degrees\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.setHfov = function(hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (animated) {\n        animatedMove.hfov = {\n          'startTime': Date.now(),\n          'startPosition': config.hfov,\n          'endPosition': constrainHfov(hfov),\n          'duration': animated,\n          'callback': callback,\n          'callbackArgs': callbackArgs\n        };\n      } else {\n        setHfov(hfov);\n      }\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the minimum and maximum allowed horizontal fields of view\n * (in degrees).\n * @memberof Viewer\n * @instance\n * @returns {number[]} [minimum hfov, maximum hfov]\n */\n    this.getHfovBounds = function() {\n      return [config.minHfov, config.maxHfov];\n    };\n\n    /**\n * Set the minimum and maximum allowed horizontal fields of view (in degrees).\n * @memberof Viewer\n * @instance\n * @param {number[]} bounds - [minimum hfov, maximum hfov]\n * @returns {Viewer} `this`\n */\n    this.setHfovBounds = function(bounds) {\n      config.minHfov = Math.max(0, bounds[0]);\n      config.maxHfov = Math.max(0, bounds[1]);\n      return this;\n    };\n\n    /**\n * Set a new view. Any parameters not specified remain the same.\n * @memberof Viewer\n * @instance\n * @param {number} [pitch] - Target pitch\n * @param {number} [yaw] - Target yaw\n * @param {number} [hfov] - Target hfov\n * @param {boolean|number} [animated=1000] - Animation duration in milliseconds or false for no animation\n * @param {function} [callback] - Function to call when animation finishes\n * @param {object} [callbackArgs] - Arguments to pass to callback function\n * @returns {Viewer} `this`\n */\n    this.lookAt = function(pitch, yaw, hfov, animated, callback, callbackArgs) {\n      animated = animated == undefined ? 1000: Number(animated);\n      if (pitch !== undefined) {\n        this.setPitch(pitch, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (yaw !== undefined) {\n        this.setYaw(yaw, animated, callback, callbackArgs);\n        callback = undefined;\n      }\n      if (hfov !== undefined)\n        {this.setHfov(hfov, animated, callback, callbackArgs);}\n      return this;\n    };\n\n    /**\n * Returns the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @returns {number} North offset in degrees\n */\n    this.getNorthOffset = function() {\n      return config.northOffset;\n    };\n\n    /**\n * Sets the panorama's north offset.\n * @memberof Viewer\n * @instance\n * @param {number} heading - North offset in degrees\n * @returns {Viewer} `this`\n */\n    this.setNorthOffset = function(heading) {\n      config.northOffset = Math.min(360, Math.max(0, heading));\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon roll in degrees\n */\n    this.getHorizonRoll = function() {\n      return config.horizonRoll;\n    };\n\n    /**\n * Sets the panorama's horizon roll.\n * @memberof Viewer\n * @instance\n * @param {number} roll - Horizon roll in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonRoll = function(roll) {\n      config.horizonRoll = Math.min(90, Math.max(-90, roll));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Returns the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @returns {number} Horizon pitch in degrees\n */\n    this.getHorizonPitch = function() {\n      return config.horizonPitch;\n    };\n\n    /**\n * Sets the panorama's horizon pitch.\n * @memberof Viewer\n * @instance\n * @param {number} pitch - Horizon pitch in degrees [-90, 90]\n * @returns {Viewer} `this`\n */\n    this.setHorizonPitch = function(pitch) {\n      config.horizonPitch = Math.min(90, Math.max(-90, pitch));\n      renderer.setPose(config.horizonPitch * Math.PI / 180, config.horizonRoll * Math.PI / 180);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Start auto rotation.\n * @memberof Viewer\n * @instance\n * @param {number} [speed] - Auto rotation speed / direction. If not specified, previous value is used.\n * @returns {Viewer} `this`\n */\n    this.startAutoRotate = function(speed) {\n      speed = speed || autoRotateSpeed || 1;\n      config.autoRotate = speed;\n      _this.lookAt(origPitch, undefined, origHfov, 3000);\n      animateInit();\n      return this;\n    };\n\n    /**\n * Stop auto rotation.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.stopAutoRotate = function() {\n      autoRotateSpeed = config.autoRotate ? config.autoRotate : autoRotateSpeed;\n      config.autoRotate = false;\n      config.autoRotateInactivityDelay = -1;\n      return this;\n    };\n\n    /**\n * Returns the panorama renderer.\n * @memberof Viewer\n * @instance\n * @returns {Renderer}\n */\n    this.getRenderer = function() {\n      return renderer;\n    };\n\n    /**\n * Sets update flag for dynamic content.\n * @memberof Viewer\n * @instance\n * @param {boolean} bool - Whether or not viewer should update even when still\n * @returns {Viewer} `this`\n */\n    this.setUpdate = function(bool) {\n      update = bool === true;\n      if (renderer === undefined)\n        {onImageLoad();}\n      else\n        {animateInit();}\n      return this;\n    };\n\n    /**\n * Calculate panorama pitch and yaw from location of mouse event.\n * @memberof Viewer\n * @instance\n * @param {MouseEvent} event - Document mouse down event.\n * @returns {number[]} [pitch, yaw]\n */\n    this.mouseEventToCoords = function(event) {\n      return mouseEventToCoords(event);\n    };\n\n    /**\n * Change scene being viewed.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - Identifier of scene to switch to.\n * @param {number} [pitch] - Pitch to use with new scene\n * @param {number} [yaw] - Yaw to use with new scene\n * @param {number} [hfov] - HFOV to use with new scene\n * @returns {Viewer} `this`\n */\n    this.loadScene = function(sceneId, pitch, yaw, hfov) {\n      if (loaded !== false)\n        {loadScene(sceneId, pitch, yaw, hfov);}\n      return this;\n    };\n\n    /**\n * Get ID of current scene.\n * @memberof Viewer\n * @instance\n * @returns {string} ID of current scene\n */\n    this.getScene = function() {\n      return config.scene;\n    };\n\n    /**\n * Add a new scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the new scene\n * @param {string} config - The configuration of the new scene\n * @returns {Viewer} `this`\n */\n    this.addScene = function(sceneId, config) {\n      initialConfig.scenes[sceneId] = config;\n      return this;\n    };\n\n    /**\n * Remove a scene.\n * @memberof Viewer\n * @instance\n * @param {string} sceneId - The ID of the scene\n * @returns {boolean} False if the scene is the current scene or if the scene doesn't exists, else true\n */\n    this.removeScene = function(sceneId) {\n      if (config.scene === sceneId || !initialConfig.scenes.hasOwnProperty(sceneId))\n        {return false;}\n      delete initialConfig.scenes[sceneId];\n      return true;\n    };\n\n    /**\n * Toggle fullscreen.\n * @memberof Viewer\n * @instance\n * @returns {Viewer} `this`\n */\n    this.toggleFullscreen = function() {\n      toggleFullscreen();\n      return this;\n    };\n\n    /**\n * Get configuration of current scene.\n * @memberof Viewer\n * @instance\n * @returns {Object} Configuration of current scene\n */\n    this.getConfig = function() {\n      return config;\n    };\n\n    /**\n * Get viewer's container element.\n * @memberof Viewer\n * @instance\n * @returns {HTMLElement} Container `div` element\n */\n    this.getContainer = function() {\n      return container;\n    };\n\n    /**\n * Add a new hot spot.\n * @memberof Viewer\n * @instance\n * @param {Object} hs - The configuration for the hot spot\n * @param {string} [sceneId] - Adds hot spot to specified scene if provided, else to current scene\n * @returns {Viewer} `this`\n * @throws Throws an error if the scene ID is provided but invalid\n */\n    this.addHotSpot = function(hs, sceneId) {\n      if (sceneId === undefined && config.scene === undefined) {\n        // Not a tour\n        config.hotSpots.push(hs);\n      } else {\n        // Tour\n        var id = sceneId !== undefined ? sceneId : config.scene;\n        if (initialConfig.scenes.hasOwnProperty(id)) {\n          if (!initialConfig.scenes[id].hasOwnProperty('hotSpots')) {\n            initialConfig.scenes[id].hotSpots = []; // Create hot spots array if needed\n            if (id == config.scene)\n              {config.hotSpots = initialConfig.scenes[id].hotSpots;}    // Link to current config\n          }\n          initialConfig.scenes[id].hotSpots.push(hs); // Add hot spot to config\n        } else {\n          throw 'Invalid scene ID!';\n        }\n      }\n      if (sceneId === undefined || config.scene == sceneId) {\n        // Add to current scene\n        createHotSpot(hs);\n        if (loaded)\n          {renderHotSpot(hs);}\n      }\n      return this;\n    };\n\n    /**\n * Remove a hot spot.\n * @memberof Viewer\n * @instance\n * @param {string} hotSpotId - The ID of the hot spot\n * @param {string} [sceneId] - Removes hot spot from specified scene if provided, else from current scene\n * @returns {boolean} True if deletion is successful, else false\n */\n    this.removeHotSpot = function(hotSpotId, sceneId) {\n      if (sceneId === undefined || config.scene == sceneId) {\n        if (!config.hotSpots)\n          {return false;}\n        for (var i = 0; i < config.hotSpots.length; i++) {\n          if (config.hotSpots[i].hasOwnProperty('id') &&\n                config.hotSpots[i].id === hotSpotId) {\n            // Delete hot spot DOM elements\n            var current = config.hotSpots[i].div;\n            while (current.parentNode != renderContainer)\n              {current = current.parentNode;}\n            renderContainer.removeChild(current);\n            delete config.hotSpots[i].div;\n            // Remove hot spot from configuration\n            config.hotSpots.splice(i, 1);\n            return true;\n          }\n        }\n      } else {\n        if (initialConfig.scenes.hasOwnProperty(sceneId)) {\n          if (!initialConfig.scenes[sceneId].hasOwnProperty('hotSpots'))\n            {return false;}\n          for (var i = 0; i < initialConfig.scenes[sceneId].hotSpots.length; i++) {\n            if (initialConfig.scenes[sceneId].hotSpots[i].hasOwnProperty('id') &&\n                    initialConfig.scenes[sceneId].hotSpots[i].id === hotSpotId) {\n              // Remove hot spot from configuration\n              initialConfig.scenes[sceneId].hotSpots.splice(i, 1);\n              return true;\n            }\n          }\n        } else {\n          return false;\n        }\n      }\n    };\n\n    /**\n * This method should be called if the viewer's container is resized.\n * @memberof Viewer\n * @instance\n */\n    this.resize = function() {\n      if (renderer)\n        {onDocumentResize();}\n    };\n\n    /**\n * Check if a panorama is loaded.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if a panorama is loaded, else false\n */\n    this.isLoaded = function() {\n      return loaded;\n    };\n\n    /**\n * Check if device orientation control is supported.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if supported, else false\n */\n    this.isOrientationSupported = function() {\n      return orientationSupport || false;\n    };\n\n    /**\n * Stop using device orientation.\n * @memberof Viewer\n * @instance\n */\n    this.stopOrientation = function() {\n      stopOrientation();\n    };\n\n    /**\n * Start using device orientation (does nothing if not supported).\n * @memberof Viewer\n * @instance\n */\n    this.startOrientation = function() {\n      if (orientationSupport)\n        {startOrientation();}\n    };\n\n    /**\n * Check if device orientation control is currently activated.\n * @memberof Viewer\n * @instance\n * @returns {boolean} True if active, else false\n */\n    this.isOrientationActive = function() {\n      return Boolean(orientation);\n    };\n\n    /**\n * Subscribe listener to specified event.\n * @memberof Viewer\n * @instance\n * @param {string} type - Type of event to subscribe to.\n * @param {Function} listener - Listener function to subscribe to event.\n * @returns {Viewer} `this`\n */\n    this.on = function(type, listener) {\n      externalEventListeners[type] = externalEventListeners[type] || [];\n      externalEventListeners[type].push(listener);\n      return this;\n    };\n\n    /**\n * Remove an event listener (or listeners).\n * @memberof Viewer\n * @param {string} [type] - Type of event to remove listeners from. If not specified, all listeners are removed.\n * @param {Function} [listener] - Listener function to remove. If not specified, all listeners of specified type are removed.\n * @returns {Viewer} `this`\n */\n    this.off = function(type, listener) {\n      if (!type) {\n        // Remove all listeners if type isn't specified\n        externalEventListeners = {};\n        return this;\n      }\n      if (listener) {\n        var i = externalEventListeners[type].indexOf(listener);\n        if (i >= 0) {\n          // Remove listener if found\n          externalEventListeners[type].splice(i, 1);\n        }\n        if (externalEventListeners[type].length == 0) {\n          // Remove category if empty\n          delete externalEventListeners[type];\n        }\n      } else {\n        // Remove category of listeners if listener isn't specified\n        delete externalEventListeners[type];\n      }\n      return this;\n    };\n\n    /**\n * Fire listeners attached to specified event.\n * @private\n * @param {string} [type] - Type of event to fire listeners for.\n */\n    function fireEvent(type) {\n      if (type in externalEventListeners) {\n        // Reverse iteration is useful, if event listener is removed inside its definition\n        for (var i = externalEventListeners[type].length; i > 0; i--) {\n          externalEventListeners[type][externalEventListeners[type].length - i].apply(null, [].slice.call(arguments, 1));\n        }\n      }\n    }\n\n    /**\n * Destructor.\n * @instance\n * @memberof Viewer\n */\n    this.destroy = function() {\n      if (renderer)\n        {renderer.destroy()};\n      if (listenersAdded) {\n        dragFix.removeEventListener('mousedown', onDocumentMouseDown, false);\n        dragFix.removeEventListener('dblclick', onDocumentDoubleClick, false);\n        document.removeEventListener('mousemove', onDocumentMouseMove, false);\n        document.removeEventListener('mouseup', onDocumentMouseUp, false);\n        container.removeEventListener('mousewheel', onDocumentMouseWheel, false);\n        container.removeEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n        container.removeEventListener('mozfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('webkitfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('msfullscreenchange', onFullScreenChange, false);\n        container.removeEventListener('fullscreenchange', onFullScreenChange, false);\n        window.removeEventListener('resize', onDocumentResize, false);\n        window.removeEventListener('orientationchange', onDocumentResize, false);\n        container.removeEventListener('keydown', onDocumentKeyPress, false);\n        container.removeEventListener('keyup', onDocumentKeyUp, false);\n        container.removeEventListener('blur', clearKeys, false);\n        document.removeEventListener('mouseleave', onDocumentMouseUp, false);\n        dragFix.removeEventListener('touchstart', onDocumentTouchStart, false);\n        dragFix.removeEventListener('touchmove', onDocumentTouchMove, false);\n        dragFix.removeEventListener('touchend', onDocumentTouchEnd, false);\n        dragFix.removeEventListener('pointerdown', onDocumentPointerDown, false);\n        dragFix.removeEventListener('pointermove', onDocumentPointerMove, false);\n        dragFix.removeEventListener('pointerup', onDocumentPointerUp, false);\n        dragFix.removeEventListener('pointerleave', onDocumentPointerUp, false);\n      }\n      container.innerHTML = '';\n      container.classList.remove('pnlm-container');\n      uiContainer.classList.remove('pnlm-grab');\n      uiContainer.classList.remove('pnlm-grabbing');\n    };\n\n  }\n\n  return {\n    viewer: function(container, config) {\n      return new Viewer(container, config);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/pannellum.js","import Pannellum from \"./elements/Pannellum\";\nimport PannellumVideo from \"./elements/PannellumVideo\";\n\nexport {\n  Pannellum,\n  PannellumVideo\n}\n;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","var\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/clock.js\n// module id = lamJ\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n// Helper functions\nvar\n  isLikelyAacData,\n  arrayEquals,\n  sumFrameByteLengths;\n\nisLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\narrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nsumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = this.trimAdtsFramesByEarliestDts_(adtsFrames);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.prefixWithSilence_(track, frames);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = this.generateSampleTable_(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(this.concatenateFrameData_(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n\n  // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n  this.prefixWithSilence_ = function(track, frames) {\n    var\n      baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n    // determine frame clock duration based on sample rate, round up to avoid overfills\n    frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration =\n        baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n      // number of full frames in the audio gap\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    }\n\n    // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n    if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = coneOfSilence[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      frames.splice(i, 0, {\n        data: silentFrame\n      });\n    }\n\n    track.baseMediaDecodeTime -=\n      Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n  };\n\n  // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n  this.trimAdtsFramesByEarliestDts_ = function(adtsFrames) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    }\n\n    // We will need to recalculate the earliest segment Dts\n    track.minSegmentDts = Infinity;\n\n    return adtsFrames.filter(function(currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      }\n      // Otherwise, discard it\n      return false;\n    });\n  };\n\n  // generate the track's raw mdat data from an array of frames\n  this.generateSampleTable_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n    return samples;\n  };\n\n  // generate the track's sample table from an array of frames\n  this.concatenateFrameData_ = function(frames) {\n    var\n      i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets into the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = (caption.startPts - timelineStartPts);\n    caption.startTime /= 90e3;\n    caption.endTime = (caption.endPts - timelineStartPts);\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets into the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = (id3.pts - timelineStartPts);\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  }\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    this.baseMediaDecodeTime = baseMediaDecodeTime;\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/transmuxer.js\n// module id = nAZl\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/utils/stream.js\n// module id = nIbA\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/stream-types.js\n// module id = pl6C\n// module chunks = 0","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 0","/*\n * libpannellum - A WebGL and CSS 3D transform based Panorama Renderer\n * Copyright (c) 2012-2018 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nwindow.libpannellum = (function(window, document, undefined) {\n\n  \n\n  /**\n * Creates a new panorama renderer.\n * @constructor\n * @param {HTMLElement} container - The container element for the renderer.\n */\n  function Renderer(container) {\n    var canvas = document.createElement('canvas');\n    canvas.style.width = canvas.style.height = '100%';\n    container.appendChild(canvas);\n\n    var program, gl, vs, fs;\n    var fallbackImgSize;\n    var world;\n    var vtmps;\n    var pose;\n    var image, imageType, dynamic;\n    var texCoordBuffer, cubeVertBuf, cubeVertTexCoordBuf, cubeVertIndBuf;\n    var globalParams;\n\n    /**\n     * Initialize renderer.\n     * @memberof Renderer\n     * @instance\n     * @param {Image|Array|Object} image - Input image; format varies based on\n     *      `imageType`. For `equirectangular`, this is an image; for\n     *      `cubemap`, this is an array of images for the cube faces in the\n     *      order [+z, +x, -z, -x, +y, -y]; for `multires`, this is a\n     *      configuration object.\n     * @param {string} imageType - The type of the image: `equirectangular`,\n     *      `cubemap`, or `multires`.\n     * @param {boolean} dynamic - Whether or not the image is dynamic (e.g. video).\n     * @param {number} haov - Initial horizontal angle of view.\n     * @param {number} vaov - Initial vertical angle of view.\n     * @param {number} voffset - Initial vertical offset angle.\n     * @param {function} callback - Load callback function.\n     * @param {Object} [params] - Other configuration parameters (`horizonPitch`, `horizonRoll`, `backgroundColor`).\n     */\n    this.init = function(_image, _imageType, _dynamic, haov, vaov, voffset, callback, params) {\n      // Default argument for image type\n      if (_imageType === undefined)\n      {_imageType = 'equirectangular';}\n\n      if (_imageType != 'equirectangular' && _imageType != 'cubemap' &&\n            _imageType != 'multires') {\n        console.log('Error: invalid image type specified!');\n        throw { type: 'config error' };\n      }\n\n      imageType = _imageType;\n      image = _image;\n      dynamic = _dynamic;\n      globalParams = params || {};\n\n      // Clear old data\n      if (program) {\n        if (vs) {\n          gl.detachShader(program, vs);\n          gl.deleteShader(vs);\n        }\n        if (fs) {\n          gl.detachShader(program, fs);\n          gl.deleteShader(fs);\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        if (program.texture)\n        {gl.deleteTexture(program.texture);}\n        if (program.nodeCache)\n        {for (var i = 0; i < program.nodeCache.length; i++)\n          {gl.deleteTexture(program.nodeCache[i].texture);}}\n        gl.deleteProgram(program);\n        program = undefined;\n      }\n      pose = undefined;\n\n      var s;\n      var faceMissing = false;\n      var cubeImgWidth;\n      if (imageType == 'cubemap') {\n        for (s = 0; s < 6; s++) {\n          if (image[s].width > 0) {\n            if (cubeImgWidth === undefined)\n            {cubeImgWidth = image[s].width;}\n            if (cubeImgWidth != image[s].width)\n            {console.log('Cube faces have inconsistent widths: ' + cubeImgWidth + ' vs. ' + image[s].width);}\n          } else\n          {faceMissing = true;}\n        }\n      }\n      function fillMissingFaces(imgSize) {\n        if (faceMissing) { // Fill any missing fallback/cubemap faces with background\n          var nbytes = imgSize * imgSize * 4; // RGB, plus non-functional alpha\n          var imageArray = new Uint8ClampedArray(nbytes);\n          var rgb = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n          rgb[0] *= 255;\n          rgb[1] *= 255;\n          rgb[2] *= 255;\n          // Maybe filling could be done faster, see e.g. https://stackoverflow.com/questions/1295584/most-efficient-way-to-create-a-zero-filled-javascript-array\n          for (var i = 0; i < nbytes; i++) {\n            imageArray[i++] = rgb[0];\n            imageArray[i++] = rgb[1];\n            imageArray[i++] = rgb[2];\n          }\n          var backgroundSquare = new ImageData(imageArray, imgSize, imgSize);\n          for (s = 0; s < 6; s++) {\n            if (image[s].width == 0)\n            {image[s] = backgroundSquare;}\n          }\n        }\n      }\n        \n      // This awful browser specific test exists because iOS 8/9 and IE 11\n      // don't display non-power-of-two cubemap textures but also don't\n      // throw an error (tested on an iPhone 5c / iOS 8.1.3 / iOS 9.2 /\n      // iOS 10.3.1).\n      // Therefore, the WebGL context is never created for these browsers for\n      // NPOT cubemaps, and the CSS 3D transform fallback renderer is used\n      // instead.\n      if (!(imageType == 'cubemap' &&\n            (cubeImgWidth & (cubeImgWidth - 1)) !== 0 &&\n            (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 9_/) ||\n            navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 10_/) ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n        // Enable WebGL on canvas\n        if (!gl)\n        {gl = canvas.getContext('experimental-webgl', { alpha: false, depth: false });}\n        if (gl && gl.getError() == 1286)\n        {handleWebGLError1286();}\n      }\n        \n      // If there is no WebGL, fall back to CSS 3D transform renderer.\n      // This will discard the image loaded so far and load the fallback image.\n      // While browser specific tests are usually frowned upon, the\n      // fallback viewer only really works with WebKit/Blink and IE 10/11\n      // (it doesn't work properly in Firefox).\n      if (!gl && ((imageType == 'multires' && image.hasOwnProperty('fallbackPath')) ||\n            imageType == 'cubemap') &&\n            ('WebkitAppearance' in document.documentElement.style ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./) ||\n            navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n        // Remove old world if it exists\n        if (world) {\n          container.removeChild(world);\n        }\n            \n        // Initialize renderer\n        world = document.createElement('div');\n        world.className = 'pnlm-world';\n            \n        // Add images\n        var path;\n        if (image.basePath) {\n          path = image.basePath + image.fallbackPath;\n        } else {\n          path = image.fallbackPath;\n        }\n        var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n        var loaded = 0;\n        var onLoad = function() {\n          // Draw image on canvas\n          var faceCanvas = document.createElement('canvas');\n          faceCanvas.className = 'pnlm-face pnlm-' + sides[this.side] + 'face';\n          world.appendChild(faceCanvas);\n          var faceContext = faceCanvas.getContext('2d');\n          faceCanvas.style.width = this.width + 4 + 'px';\n          faceCanvas.style.height = this.height + 4 + 'px';\n          faceCanvas.width = this.width + 4;\n          faceCanvas.height = this.height + 4;\n          faceContext.drawImage(this, 2, 2);\n          var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n          var data = imgData.data;\n                \n          // Duplicate edge pixels\n          var i;\n          var j;\n          for (i = 2; i < faceCanvas.width - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n            }\n          }\n          for (i = 2; i < faceCanvas.height - 2; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n            data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n          }\n          for (i = 1; i < faceCanvas.width - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n              data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n            }\n          }\n          for (i = 1; i < faceCanvas.height - 1; i++) {\n            for (j = 0; j < 4; j++) {\n              data[(i * faceCanvas.width) * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n              data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n            }\n          }\n          for (j = 0; j < 4; j++) {\n            data[j] = data[(faceCanvas.width + 1) * 4 + j];\n            data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n            data[(faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n            data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n          }\n                \n          // Draw image width duplicated edge pixels on canvas\n          faceContext.putImageData(imgData, 0, 0);\n                \n          incLoaded.call(this);\n        };\n        var incLoaded = function() {\n          if (this.width > 0) {\n            if (fallbackImgSize === undefined)\n            {fallbackImgSize = this.width;}\n            if (fallbackImgSize != this.width)\n            {console.log('Fallback faces have inconsistent widths: ' + fallbackImgSize + ' vs. ' + this.width);}\n          } else\n          {faceMissing = true;}\n          loaded++;\n          if (loaded == 6) {\n            fallbackImgSize = this.width;\n            container.appendChild(world);\n            callback();\n          }\n        };\n        faceMissing = false;\n        for (s = 0; s < 6; s++) {\n          var faceImg = new Image();\n          faceImg.crossOrigin = globalParams.crossOrigin ? globalParams.crossOrigin : 'anonymous';\n          faceImg.side = s;\n          faceImg.onload = onLoad;\n          faceImg.onerror = incLoaded; // ignore missing face to support partial fallback image\n          if (imageType == 'multires') {\n            faceImg.src = encodeURI(path.replace('%s', sides[s]) + '.' + image.extension);\n          } else {\n            faceImg.src = encodeURI(image[s].src);\n          }\n        }\n        fillMissingFaces(fallbackImgSize);\n        return;\n      } else if (!gl) {\n        console.log('Error: no WebGL support detected!');\n        throw { type: 'no webgl' };\n      }\n      if (imageType == 'cubemap')\n      {fillMissingFaces(cubeImgWidth);}\n      if (image.basePath) {\n        image.fullpath = image.basePath + image.path;\n      } else {\n        image.fullpath = image.path;\n      }\n      image.invTileResolution = 1 / image.tileResolution;\n        \n      var vertices = createCube();\n      vtmps = [];\n      for (s = 0; s < 6; s++) {\n        vtmps[s] = vertices.slice(s * 12, s * 12 + 12);\n        vertices = createCube();\n      }\n        \n      // Make sure image isn't too big\n      var width = 0, maxWidth = 0;\n      if (imageType == 'equirectangular') {\n        width = Math.max(image.width, image.height);\n        maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      } else if (imageType == 'cubemap') {\n        width = cubeImgWidth;\n        maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n      }\n      if (width > maxWidth) {\n        console.log('Error: The image is too big; it\\'s ' + width + 'px wide, '+\n                        'but this device\\'s maximum supported size is ' + maxWidth + 'px.');\n        throw { type: 'webgl size error', width: width, maxWidth: maxWidth };\n      }\n\n      // Store horizon pitch and roll if applicable\n      if (params !== undefined && (params.horizonPitch !== undefined || params.horizonRoll !== undefined))\n      {pose = [params.horizonPitch == undefined ? 0 : params.horizonPitch,\n        params.horizonRoll == undefined ? 0 : params.horizonRoll];}\n\n      // Set 2d texture binding\n      var glBindType = gl.TEXTURE_2D;\n\n      // Create viewport for entire canvas\n      gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n      // Create vertex shader\n      vs = gl.createShader(gl.VERTEX_SHADER);\n      var vertexSrc = v;\n      if (imageType == 'multires') {\n        vertexSrc = vMulti;\n      }\n      gl.shaderSource(vs, vertexSrc);\n      gl.compileShader(vs);\n\n      // Create fragment shader\n      fs = gl.createShader(gl.FRAGMENT_SHADER);\n      var fragmentSrc = fragEquirectangular;\n      if (imageType == 'cubemap') {\n        glBindType = gl.TEXTURE_CUBE_MAP;\n        fragmentSrc = fragCube;\n      } else if (imageType == 'multires') {\n        fragmentSrc = fragMulti;\n      }\n      gl.shaderSource(fs, fragmentSrc);\n      gl.compileShader(fs);\n\n      // Link WebGL program\n      program = gl.createProgram();\n      gl.attachShader(program, vs);\n      gl.attachShader(program, fs);\n      gl.linkProgram(program);\n\n      // Log errors\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(vs));}\n      if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))\n      {console.log(gl.getShaderInfoLog(fs));}\n      if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n      {console.log(gl.getProgramInfoLog(program));}\n\n      // Use WebGL program\n      gl.useProgram(program);\n\n      program.drawInProgress = false;\n\n      // Set background clear color (does not apply to cubemap/fallback image)\n      var color = params.backgroundColor ? params.backgroundColor : [0, 0, 0];\n      gl.clearColor(color[0], color[1], color[2], 1.0);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n\n      // Look up texture coordinates location\n      program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n      gl.enableVertexAttribArray(program.texCoordLocation);\n\n      if (imageType != 'multires') {\n        // Provide texture coordinates for rectangle\n        if (!texCoordBuffer)\n        {texCoordBuffer = gl.createBuffer();}\n        gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n        // Pass aspect ratio\n        program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n        gl.uniform1f(program.aspectRatio, gl.drawingBufferWidth / gl.drawingBufferHeight);\n\n        // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n        program.psi = gl.getUniformLocation(program, 'u_psi');\n        program.theta = gl.getUniformLocation(program, 'u_theta');\n        program.f = gl.getUniformLocation(program, 'u_f');\n        program.h = gl.getUniformLocation(program, 'u_h');\n        program.v = gl.getUniformLocation(program, 'u_v');\n        program.vo = gl.getUniformLocation(program, 'u_vo');\n        program.rot = gl.getUniformLocation(program, 'u_rot');\n\n        // Pass horizontal extent, vertical extent, and vertical offset\n        gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n        gl.uniform1f(program.v, vaov / Math.PI);\n        gl.uniform1f(program.vo, voffset / Math.PI * 2);\n\n        // Set background color\n        if (imageType == 'equirectangular') {\n          program.backgroundColor = gl.getUniformLocation(program, 'u_backgroundColor');\n          gl.uniform4fv(program.backgroundColor, color.concat([1]));\n        }\n\n        // Create texture\n        program.texture = gl.createTexture();\n        gl.bindTexture(glBindType, program.texture);\n\n        // Upload images to texture depending on type\n        if (imageType == 'cubemap') {\n          // Load all six sides of the cube map\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[1]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[3]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[4]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[5]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[0]);\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image[2]);\n        } else {\n          // Upload image to the texture\n          gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n        }\n\n        // Set parameters for rendering any size\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n      } else {\n        // Look up vertex coordinates location\n        program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n        gl.enableVertexAttribArray(program.vertPosLocation);\n\n        // Create buffers\n        if (!cubeVertBuf)\n        {cubeVertBuf = gl.createBuffer();}\n        if (!cubeVertTexCoordBuf)\n        {cubeVertTexCoordBuf = gl.createBuffer();}\n        if (!cubeVertIndBuf)\n        {cubeVertIndBuf = gl.createBuffer();}\n\n        // Bind texture coordinate buffer and pass coordinates to WebGL\n        gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0,0,1,0,1,1,0,1]), gl.STATIC_DRAW);\n\n        // Bind square index buffer and pass indicies to WebGL\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cubeVertIndBuf);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0,1,2,0,2,3]), gl.STATIC_DRAW);\n\n        // Find uniforms\n        program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n        program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix');\n        //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n\n        program.level = -1;\n\n        program.currentNodes = [];\n        program.nodeCache = [];\n        program.nodeCacheTimestamp = 0;\n      }\n\n      // Check if there was an error\n      var err = gl.getError();\n      if (err !== 0) {\n        console.log('Error: Something went wrong with WebGL!', err);\n        throw { type: 'webgl error' };\n      }\n\n      callback();\n    };\n\n    /**\n     * Destroy renderer.\n     * @memberof Renderer\n     * @instance\n     */\n    this.destroy = function() {\n      if (container !== undefined) {\n        if (canvas !== undefined && container.contains(canvas)) {\n          container.removeChild(canvas);\n        }\n        if (world !== undefined && container.contains(world)) {\n          container.removeChild(world);\n        }\n      }\n      if (gl) {\n        // The spec says this is only supposed to simulate losing the WebGL\n        // context, but in practice it tends to actually free the memory.\n        var extension = gl.getExtension('WEBGL_lose_context');\n        if (extension)\n        {extension.loseContext();}\n      }\n    };\n\n    /**\n     * Resize renderer (call after resizing container).\n     * @memberof Renderer\n     * @instance\n     */\n    this.resize = function() {\n      var pixelRatio = window.devicePixelRatio || 1;\n      canvas.width = canvas.clientWidth * pixelRatio;\n      canvas.height = canvas.clientHeight * pixelRatio;\n      if (gl) {\n        if (gl.getError() == 1286)\n        {handleWebGLError1286();}\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        if (imageType != 'multires') {\n          gl.uniform1f(program.aspectRatio, canvas.clientWidth / canvas.clientHeight);\n        }\n      }\n    };\n    // Initialize canvas size\n    this.resize();\n\n    /**\n     * Set renderer horizon pitch and roll.\n     * @memberof Renderer\n     * @instance\n     */\n    this.setPose = function(horizonPitch, horizonRoll) {\n      pose = [horizonPitch, horizonRoll];\n    };\n\n    /**\n     * Render new view of panorama.\n     * @memberof Renderer\n     * @instance\n     * @param {number} pitch - Pitch to render at (in radians).\n     * @param {number} yaw - Yaw to render at (in radians).\n     * @param {number} hfov - Horizontal field of view to render with (in radians).\n     * @param {Object} [params] - Extra configuration parameters. \n     * @param {number} [params.roll] - Camera roll (in radians).\n     * @param {boolean} [params.returnImage] - Return rendered image?\n     */\n    this.render = function(pitch, yaw, hfov, params) {\n      var focal, i, s, roll = 0;\n      if (params === undefined)\n      {params = {};}\n      if (params.roll)\n      {roll = params.roll;}\n\n      // Apply pitch and roll transformation if applicable\n      if (pose !== undefined) {\n        var horizonPitch = pose[0],\n          horizonRoll = pose[1];\n\n        // Calculate new pitch and yaw\n        var orig_pitch = pitch,\n          orig_yaw = yaw,\n          x = Math.cos(horizonRoll) * Math.sin(pitch) * Math.sin(horizonPitch) +\n                    Math.cos(pitch) * (Math.cos(horizonPitch) * Math.cos(yaw) +\n                    Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.sin(yaw)),\n          y = -Math.sin(pitch) * Math.sin(horizonRoll) +\n                    Math.cos(pitch) * Math.cos(horizonRoll) * Math.sin(yaw),\n          z = Math.cos(horizonRoll) * Math.cos(horizonPitch) * Math.sin(pitch) +\n                    Math.cos(pitch) * (-Math.cos(yaw) * Math.sin(horizonPitch) +\n                    Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.sin(yaw));\n        pitch = Math.asin(Math.max(Math.min(z, 1), -1));\n        yaw = Math.atan2(y, x);\n\n        // Calculate roll\n        var v = [Math.cos(orig_pitch) * (Math.sin(horizonRoll) * Math.sin(horizonPitch) * Math.cos(orig_yaw) -\n                    Math.cos(horizonPitch) * Math.sin(orig_yaw)),\n          Math.cos(orig_pitch) * Math.cos(horizonRoll) * Math.cos(orig_yaw),\n          Math.cos(orig_pitch) * (Math.cos(horizonPitch) * Math.sin(horizonRoll) * Math.cos(orig_yaw) +\n                    Math.sin(orig_yaw) * Math.sin(horizonPitch))],\n          w = [-Math.cos(pitch) * Math.sin(yaw), Math.cos(pitch) * Math.cos(yaw)];\n        var roll_adj = Math.acos(Math.max(Math.min((v[0]*w[0] + v[1]*w[1]) /\n                (Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]) *\n                Math.sqrt(w[0]*w[0]+w[1]*w[1])), 1), -1));\n        if (v[2] < 0)\n        {roll_adj = 2 * Math.PI - roll_adj;}\n        roll += roll_adj;\n      }\n\n      // If no WebGL\n      if (!gl && (imageType == 'multires' || imageType == 'cubemap')) {\n        // Determine face transforms\n        s = fallbackImgSize / 2;\n            \n        var transforms = {\n          f: 'translate3d(-' + (s + 2) + 'px, -' + (s + 2) + 'px, -' + s + 'px)',\n          b: 'translate3d(' + (s + 2) + 'px, -' + (s + 2) + 'px, ' + s + 'px) rotateX(180deg) rotateZ(180deg)',\n          u: 'translate3d(-' + (s + 2) + 'px, -' + s + 'px, ' + (s + 2) + 'px) rotateX(270deg)',\n          d: 'translate3d(-' + (s + 2) + 'px, ' + s + 'px, -' + (s + 2) + 'px) rotateX(90deg)',\n          l: 'translate3d(-' + s + 'px, -' + (s + 2) + 'px, ' + (s + 2) + 'px) rotateX(180deg) rotateY(90deg) rotateZ(180deg)',\n          r: 'translate3d(' + s + 'px, -' + (s + 2) + 'px, -' + (s + 2) + 'px) rotateY(270deg)'\n        };\n        focal = 1 / Math.tan(hfov / 2);\n        var zoom = focal * canvas.clientWidth / 2 + 'px';\n        var transform = 'perspective(' + zoom + ') translateZ(' + zoom + ') rotateX(' + pitch + 'rad) rotateY(' + yaw + 'rad) ';\n            \n        // Apply face transforms\n        var faces = Object.keys(transforms);\n        for (i = 0; i < 6; i++) {\n          var face = world.querySelector('.pnlm-' + faces[i] + 'face');\n          if (!face)\n          {continue;} // ignore missing face to support partial cubemap/fallback image\n          face.style.webkitTransform = transform + transforms[faces[i]];\n          face.style.transform = transform + transforms[faces[i]];\n        }\n        return;\n      }\n        \n      if (imageType != 'multires') {\n        // Calculate focal length from vertical field of view\n        var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (gl.drawingBufferWidth / gl.drawingBufferHeight));\n        focal = 1 / Math.tan(vfov * 0.5);\n\n        // Pass psi, theta, roll, and focal length\n        gl.uniform1f(program.psi, yaw);\n        gl.uniform1f(program.theta, pitch);\n        gl.uniform1f(program.rot, roll);\n        gl.uniform1f(program.f, focal);\n            \n        if (dynamic === true) {\n          // Update texture if dynamic\n          if (imageType == 'equirectangular') {\n            gl.bindTexture(gl.TEXTURE_2D, program.texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image);\n          }\n        }\n            \n        // Draw using current buffer\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        \n      } else {\n        // Create perspective matrix\n        var perspMatrix = makePersp(hfov, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 100.0);\n            \n        // Find correct zoom level\n        checkZoom(hfov);\n            \n        // Create rotation matrix\n        var matrix = identityMatrix3();\n        matrix = rotateMatrix(matrix, -roll, 'z');\n        matrix = rotateMatrix(matrix, -pitch, 'x');\n        matrix = rotateMatrix(matrix, yaw, 'y');\n        matrix = makeMatrix4(matrix);\n            \n        // Set matrix uniforms\n        gl.uniformMatrix4fv(program.perspUniform, false, new Float32Array(transposeMatrix4(perspMatrix)));\n        gl.uniformMatrix4fv(program.cubeUniform, false, new Float32Array(transposeMatrix4(matrix)));\n            \n        // Find current nodes\n        var rotPersp = rotatePersp(perspMatrix, matrix);\n        program.nodeCache.sort(multiresNodeSort);\n        if (program.nodeCache.length > 200 &&\n                program.nodeCache.length > program.currentNodes.length + 50) {\n          // Remove older nodes from cache\n          var removed = program.nodeCache.splice(200, program.nodeCache.length - 200);\n          for (var i = 0; i < removed.length; i++) {\n            // Explicitly delete textures\n            gl.deleteTexture(removed[i].texture);\n          }\n        }\n        program.currentNodes = [];\n            \n        var sides = ['f', 'b', 'u', 'd', 'l', 'r'];\n        for (s = 0; s < 6; s++) {\n          var ntmp = new MultiresNode(vtmps[s], sides[s], 1, 0, 0, image.fullpath);\n          testMultiresNode(rotPersp, ntmp, pitch, yaw, hfov);\n        }\n            \n        program.currentNodes.sort(multiresNodeRenderSort);\n            \n        // Unqueue any pending requests for nodes that are no longer visible\n        for (i = pendingTextureRequests.length - 1; i >= 0; i--) {\n          if (program.currentNodes.indexOf(pendingTextureRequests[i].node) === -1) {\n            pendingTextureRequests[i].node.textureLoad = false;\n            pendingTextureRequests.splice(i, 1);\n          }\n        }\n            \n        // Allow one request to be pending, so that we can create a texture buffer for that in advance of loading actually beginning\n        if (pendingTextureRequests.length === 0) {\n          for (i = 0; i < program.currentNodes.length; i++) {\n            var node = program.currentNodes[i];\n            if (!node.texture && !node.textureLoad) {\n              node.textureLoad = true;\n            \n              setTimeout(processNextTile, 0, node);\n                        \n              // Only process one tile per frame to improve responsiveness\n              break;\n            }\n          }\n        }\n            \n        // Draw tiles\n        multiresDraw();\n      }\n        \n      if (params.returnImage !== undefined) {\n        return canvas.toDataURL('image/png');\n      }\n    };\n    \n    /**\n     * Check if images are loading.\n     * @memberof Renderer\n     * @instance\n     * @returns {boolean} Whether or not images are loading.\n     */\n    this.isLoading = function() {\n      if (gl && imageType == 'multires') {\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (!program.currentNodes[i].textureLoaded) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n    \n    /**\n     * Retrieve renderer's canvas.\n     * @memberof Renderer\n     * @instance\n     * @returns {HTMLElement} Renderer's canvas.\n     */\n    this.getCanvas = function() {\n      return canvas;\n    };\n    \n    /**\n     * Sorting method for multires nodes.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Base tiles first, then higher timestamp first.\n     */\n    function multiresNodeSort(a, b) {\n      // Base tiles are always first\n      if (a.level == 1 && b.level != 1) {\n        return -1;\n      }\n      if (b.level == 1 && a.level != 1) {\n        return 1;\n      }\n        \n      // Higher timestamp first\n      return b.timestamp - a.timestamp;\n    }\n    \n    /**\n     * Sorting method for multires node rendering.\n     * @private\n     * @param {MultiresNode} a - First node.\n     * @param {MultiresNode} b - Second node.\n     * @returns {number} Lower zoom levels first, then closest to center first.\n     */\n    function multiresNodeRenderSort(a, b) {\n      // Lower zoom levels first\n      if (a.level != b.level) {\n        return a.level - b.level;\n      }\n        \n      // Lower distance from center first\n      return a.diff - b.diff;\n    }\n    \n    /**\n     * Draws multires nodes.\n     * @private\n     */\n    function multiresDraw() {\n      if (!program.drawInProgress) {\n        program.drawInProgress = true;\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        for ( var i = 0; i < program.currentNodes.length; i++ ) {\n          if (program.currentNodes[i].textureLoaded > 1) {\n            //var color = program.currentNodes[i].color;\n            //gl.uniform4f(program.colorUniform, color[0], color[1], color[2], 1.0);\n                    \n            // Bind vertex buffer and pass vertices to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(program.currentNodes[i].vertices), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.vertPosLocation, 3, gl.FLOAT, false, 0, 0);\n                    \n            // Prep for texture\n            gl.bindBuffer(gl.ARRAY_BUFFER, cubeVertTexCoordBuf);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n                    \n            // Bind texture and draw tile\n            gl.bindTexture(gl.TEXTURE_2D, program.currentNodes[i].texture); // Bind program.currentNodes[i].texture to TEXTURE0\n            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n          }\n        }\n        program.drawInProgress = false;\n      }\n    }\n\n    /**\n     * Creates new multires node.\n     * @constructor\n     * @private\n     * @param {number[]} vertices - Node's verticies.\n     * @param {string} side - Node's cube face.\n     * @param {number} level - Node's zoom level.\n     * @param {number} x - Node's x position.\n     * @param {number} y - Node's y position.\n     * @param {string} path - Node's path.\n     */\n    function MultiresNode(vertices, side, level, x, y, path) {\n      this.vertices = vertices;\n      this.side = side;\n      this.level = level;\n      this.x = x;\n      this.y = y;\n      this.path = path.replace('%s',side).replace('%l',level).replace('%x',x).replace('%y',y);\n    }\n\n    /**\n     * Test if multires node is visible. If it is, add it to current nodes,\n     * load its texture, and load appropriate child nodes.\n     * @private\n     * @param {number[]} rotPersp - Rotated perspective matrix.\n     * @param {MultiresNode} node - Multires node to check.\n     * @param {number} pitch - Pitch to check at.\n     * @param {number} yaw - Yaw to check at.\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function testMultiresNode(rotPersp, node, pitch, yaw, hfov) {\n      if (checkSquareInView(rotPersp, node.vertices)) {\n        // Calculate central angle between center of view and center of tile\n        var v = node.vertices;\n        var x = v[0] + v[3] + v[6] + v[ 9];\n        var y = v[1] + v[4] + v[7] + v[10];\n        var z = v[2] + v[5] + v[8] + v[11];\n        var r = Math.sqrt(x*x + y*y + z*z);\n        var theta = Math.asin(z / r);\n        var phi = Math.atan2(y, x);\n        var ydiff = phi - yaw;\n        ydiff += (ydiff > Math.PI) ? -2 * Math.PI : (ydiff < -Math.PI) ? 2 * Math.PI : 0;\n        ydiff = Math.abs(ydiff);\n        node.diff = Math.acos(Math.sin(pitch) * Math.sin(theta) + Math.cos(pitch) * Math.cos(theta) * Math.cos(ydiff));\n            \n        // Add node to current nodes and load texture if needed\n        var inCurrent = false;\n        for (var k = 0; k < program.nodeCache.length; k++) {\n          if (program.nodeCache[k].path == node.path) {\n            inCurrent = true;\n            program.nodeCache[k].timestamp = program.nodeCacheTimestamp++;\n            program.nodeCache[k].diff = node.diff;\n            program.currentNodes.push(program.nodeCache[k]);\n            break;\n          }\n        }\n        if (!inCurrent) {\n          //node.color = [Math.random(), Math.random(), Math.random()];\n          node.timestamp = program.nodeCacheTimestamp++;\n          program.currentNodes.push(node);\n          program.nodeCache.push(node);\n        }\n            \n        // TODO: Test error\n        // Create child nodes\n        if (node.level < program.level) {\n          var cubeSize = image.cubeResolution * Math.pow(2, node.level - image.maxLevel);\n          var numTiles = Math.ceil(cubeSize * image.invTileResolution) - 1;\n          var doubleTileSize = cubeSize % image.tileResolution * 2;\n          var lastTileSize = (cubeSize * 2) % image.tileResolution;\n          if (lastTileSize === 0) {\n            lastTileSize = image.tileResolution;\n          }\n          if (doubleTileSize === 0) {\n            doubleTileSize = image.tileResolution * 2;\n          }\n          var f = 0.5;\n          if (node.x == numTiles || node.y == numTiles) {\n            f = 1.0 - image.tileResolution / (image.tileResolution + lastTileSize);\n          }\n          var i = 1.0 - f;\n          var children = [];\n          var vtmp, ntmp;\n          var f1 = f, f2 = f, f3 = f, i1 = i, i2 = i, i3 = i;\n          // Handle non-symmetric tiles\n          if (lastTileSize < image.tileResolution) {\n            if (node.x == numTiles && node.y != numTiles) {\n              f2 = 0.5;\n              i2 = 0.5;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            } else if (node.x != numTiles && node.y == numTiles) {\n              f1 = 0.5;\n              i1 = 0.5;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0.5;\n                i3 = 0.5;\n              }\n            }\n          }\n          // Handle small tiles that have fewer than four children\n          if (doubleTileSize <= image.tileResolution) {\n            if (node.x == numTiles) {\n              f1 = 0;\n              i1 = 1;\n              if (node.side == 'l' || node.side == 'r') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n            if (node.y == numTiles) {\n              f2 = 0;\n              i2 = 1;\n              if (node.side == 'd' || node.side == 'u') {\n                f3 = 0;\n                i3 = 1;\n              }\n            }\n          }\n                \n          vtmp = [           v[0],             v[1],             v[2],\n            v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n            v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n            v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3\n          ];\n          ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2, image.fullpath);\n          children.push(ntmp);\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[3]*i1,    v[1]*f+v[4]*i,  v[2]*f3+v[5]*i3,\n              v[3],             v[4],             v[5],\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.x == numTiles && doubleTileSize <= image.tileResolution) &&\n                    !(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[3]*f+v[6]*i,  v[4]*f2+v[7]*i2,  v[5]*f3+v[8]*i3,\n              v[6],             v[7],             v[8],\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2+1, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          if (!(node.y == numTiles && doubleTileSize <= image.tileResolution)) {\n            vtmp = [  v[0]*f+v[9]*i, v[1]*f2+v[10]*i2, v[2]*f3+v[11]*i3,\n              v[0]*f1+v[6]*i1,  v[1]*f2+v[7]*i2,  v[2]*f3+v[8]*i3,\n              v[9]*f1+v[6]*i1,   v[10]*f+v[7]*i, v[11]*f3+v[8]*i3,\n              v[9],            v[10],            v[11]\n            ];\n            ntmp = new MultiresNode(vtmp, node.side, node.level + 1, node.x*2, node.y*2+1, image.fullpath);\n            children.push(ntmp);\n          }\n          for (var j = 0; j < children.length; j++) {\n            testMultiresNode(rotPersp, children[j], pitch, yaw, hfov);\n          }\n        }\n      }\n    }\n    \n    /**\n     * Creates cube vertex array.\n     * @private\n     * @returns {number[]} Cube vertex array.\n     */\n    function createCube() {\n      return [-1,  1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, // Front face\n        1,  1,  1, -1,  1,  1, -1, -1,  1,  1, -1,  1, // Back face\n        -1,  1,  1,  1,  1,  1,  1,  1, -1, -1,  1, -1, // Up face\n        -1, -1, -1,  1, -1, -1,  1, -1,  1, -1, -1,  1, // Down face\n        -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1,  1, // Left face\n        1,  1, -1,  1,  1,  1,  1, -1,  1,  1, -1, -1  // Right face\n      ];\n    }\n    \n    /**\n     * Creates 3x3 identity matrix.\n     * @private\n     * @returns {number[]} Identity matrix.\n     */\n    function identityMatrix3() {\n      return [\n        1, 0, 0,\n        0, 1, 0,\n        0, 0, 1\n      ];\n    }\n    \n    /**\n     * Rotates a 3x3 matrix.\n     * @private\n     * @param {number[]} m - Matrix to rotate.\n     * @param {number[]} angle - Angle to rotate by in radians.\n     * @param {string} axis - Axis to rotate about (`x`, `y`, or `z`).\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotateMatrix(m, angle, axis) {\n      var s = Math.sin(angle);\n      var c = Math.cos(angle);\n      if (axis == 'x') {\n        return [\n          m[0], c*m[1] + s*m[2], c*m[2] - s*m[1],\n          m[3], c*m[4] + s*m[5], c*m[5] - s*m[4],\n          m[6], c*m[7] + s*m[8], c*m[8] - s*m[7]\n        ];\n      }\n      if (axis == 'y') {\n        return [\n          c*m[0] - s*m[2], m[1], c*m[2] + s*m[0],\n          c*m[3] - s*m[5], m[4], c*m[5] + s*m[3],\n          c*m[6] - s*m[8], m[7], c*m[8] + s*m[6]\n        ];\n      }\n      if (axis == 'z') {\n        return [\n          c*m[0] + s*m[1], c*m[1] - s*m[0], m[2],\n          c*m[3] + s*m[4], c*m[4] - s*m[3], m[5],\n          c*m[6] + s*m[7], c*m[7] - s*m[6], m[8]\n        ];\n      }\n    }\n    \n    /**\n     * Turns a 3x3 matrix into a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Expanded matrix.\n     */\n    function makeMatrix4(m) {\n      return [\n        m[0], m[1], m[2],    0,\n        m[3], m[4], m[5],    0,\n        m[6], m[7], m[8],    0,\n        0,    0,    0,    1\n      ];\n    }\n    \n    /**\n     * Transposes a 4x4 matrix.\n     * @private\n     * @param {number[]} m - Input matrix.\n     * @returns {number[]} Transposed matrix.\n     */\n    function transposeMatrix4(m) {\n      return [\n        m[ 0], m[ 4], m[ 8], m[12],\n        m[ 1], m[ 5], m[ 9], m[13],\n        m[ 2], m[ 6], m[10], m[14],\n        m[ 3], m[ 7], m[11], m[15]\n      ];\n    }\n    \n    /**\n     * Creates a perspective matrix.\n     * @private\n     * @param {number} hfov - Desired horizontal field of view.\n     * @param {number} aspect - Desired aspect ratio.\n     * @param {number} znear - Near distance.\n     * @param {number} zfar - Far distance.\n     * @returns {number[]} Generated perspective matrix.\n     */\n    function makePersp(hfov, aspect, znear, zfar) {\n      var fovy = 2 * Math.atan(Math.tan(hfov/2) * gl.drawingBufferHeight / gl.drawingBufferWidth);\n      var f = 1 / Math.tan(fovy/2);\n      return [\n        f/aspect,   0,  0,  0,\n        0,   f,  0,  0,\n        0,   0,  (zfar+znear)/(znear-zfar), (2*zfar*znear)/(znear-zfar),\n        0,   0, -1,  0\n      ];\n    }\n    \n    /**\n     * Processes a loaded texture image into a WebGL texture.\n     * @private\n     * @param {Image} img - Input image.\n     * @param {WebGLTexture} tex - Texture to bind image to.\n     */\n    function processLoadedTexture(img, tex) {\n      gl.bindTexture(gl.TEXTURE_2D, tex);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n    \n    var pendingTextureRequests = [];\n\n    // Based on http://blog.tojicode.com/2012/03/javascript-memory-optimization-and.html\n    var loadTexture = (function() {\n      var cacheTop = 4;   // Maximum number of concurrents loads\n      var textureImageCache = {};\n      var crossOrigin;\n\n      function TextureImageLoader() {\n        var self = this;\n        this.texture = this.callback = null;\n        this.image = new Image();\n        this.image.crossOrigin = crossOrigin ? crossOrigin : 'anonymous';\n        var loadFn = (function() {\n          if (self.image.width > 0 && self.image.height > 0) { // ignore missing tile to supporting partial image\n            processLoadedTexture(self.image, self.texture);\n            self.callback(self.texture, true);\n          } else {\n            self.callback(self.texture, false);\n          }\n          releaseTextureImageLoader(self);\n        });\n        this.image.addEventListener('load', loadFn);\n        this.image.addEventListener('error', loadFn); // ignore missing tile file to support partial image, otherwise retry loop causes high CPU load\n      };\n\n      TextureImageLoader.prototype.loadTexture = function(src, texture, callback) {\n        this.texture = texture;\n        this.callback = callback;\n        this.image.src = src;\n      };\n\n      function PendingTextureRequest(node, src, texture, callback) {\n        this.node = node;\n        this.src = src;\n        this.texture = texture;\n        this.callback = callback;\n      };\n\n      function releaseTextureImageLoader(til) {\n        if (pendingTextureRequests.length) {\n          var req = pendingTextureRequests.shift();\n          til.loadTexture(req.src, req.texture, req.callback);\n        } else\n        {textureImageCache[cacheTop++] = til;}\n      }\n\n      for (var i = 0; i < cacheTop; i++)\n      {textureImageCache[i] = new TextureImageLoader();}\n\n      return function(node, src, callback, _crossOrigin) {\n        crossOrigin = _crossOrigin;\n        var texture = gl.createTexture();\n        if (cacheTop)\n        {textureImageCache[--cacheTop].loadTexture(src, texture, callback);}\n        else\n        {pendingTextureRequests.push(new PendingTextureRequest(node, src, texture, callback));}\n        return texture;\n      };\n    })();\n\n    /**\n     * Loads image and creates texture for a multires node / tile.\n     * @private\n     * @param {MultiresNode} node - Input node.\n     */\n    function processNextTile(node) {\n      loadTexture(node, encodeURI(node.path + '.' + image.extension), function(texture, loaded) {\n        node.texture = texture;\n        node.textureLoaded = loaded ? 2 : 1;\n      }, globalParams.crossOrigin);\n    }\n    \n    /**\n     * Finds and applies optimal multires zoom level.\n     * @private\n     * @param {number} hfov - Horizontal field of view to check at.\n     */\n    function checkZoom(hfov) {\n      // Find optimal level\n      var newLevel = 1;\n      while ( newLevel < image.maxLevel &&\n            gl.drawingBufferWidth > image.tileResolution *\n            Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707 ) {\n        newLevel++;\n      }\n        \n      // Apply change\n      program.level = newLevel;\n    }\n    \n    /**\n     * Rotates perspective matrix.\n     * @private\n     * @param {number[]} p - Perspective matrix.\n     * @param {number[]} r - Rotation matrix.\n     * @returns {number[]} Rotated matrix.\n     */\n    function rotatePersp(p, r) {\n      return [\n        p[ 0]*r[0], p[ 0]*r[1], p[ 0]*r[ 2],     0,\n        p[ 5]*r[4], p[ 5]*r[5], p[ 5]*r[ 6],     0,\n        p[10]*r[8], p[10]*r[9], p[10]*r[10], p[11],\n        -r[8],      -r[9],      -r[10],     0\n      ];\n    }\n    \n    /**\n     * Applies rotated perspective matrix to a 3-vector\n     * (last element is inverted).\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input 3-vector.\n     * @returns {number[]} Resulting 4-vector.\n     */\n    function applyRotPerspToVec(m, v) {\n      return [\n        m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2],\n        m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2],\n        m[11] + m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2],\n        1/(m[12]*v[0] + m[13]*v[1] + m[14]*v[2])\n      ];\n    }\n    \n    /**\n     * Checks if a vertex is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Input vertex.\n     * @returns {number} 1 or -1 if the vertex is or is not visible,\n     *      respectively.\n     */\n    function checkInView(m, v) {\n      var vpp = applyRotPerspToVec(m, v);\n      var winX = vpp[0]*vpp[3];\n      var winY = vpp[1]*vpp[3];\n      var winZ = vpp[2]*vpp[3];\n      var ret = [0, 0, 0];\n        \n      if ( winX < -1 )\n      {ret[0] = -1;}\n      if ( winX > 1 )\n      {ret[0] = 1;}\n      if ( winY < -1 )\n      {ret[1] = -1;}\n      if ( winY > 1 )\n      {ret[1] = 1;}\n      if ( winZ < -1 || winZ > 1 )\n      {ret[2] = 1;}\n      return ret;\n    }\n    \n    /**\n     * Checks if a square (tile) is visible.\n     * @private\n     * @param {number[]} m - Rotated perspective matrix.\n     * @param {number[]} v - Square's vertex array.\n     * @returns {boolean} Whether or not the square is visible.\n     */\n    function checkSquareInView(m, v) {\n      var check1 = checkInView(m, v.slice(0, 3));\n      var check2 = checkInView(m, v.slice(3, 6));\n      var check3 = checkInView(m, v.slice(6, 9));\n      var check4 = checkInView(m, v.slice(9, 12));\n      var testX = check1[0] + check2[0] + check3[0] + check4[0];\n      if ( testX == -4 || testX == 4 )\n      {return false;}\n      var testY = check1[1] + check2[1] + check3[1] + check4[1];\n      if ( testY == -4 || testY == 4 )\n      {return false;}\n      var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n      return testZ != 4;\n        \n\n    }\n\n    /**\n     * On iOS (iPhone 5c, iOS 10.3), this WebGL error occurs when the canvas is\n     * too big. Unfortuately, there's no way to test for this beforehand, so we\n     * reduce the canvas size if this error is thrown.\n     * @private\n     */\n    function handleWebGLError1286() {\n      console.log('Reducing canvas size due to error 1286!');\n      canvas.width = Math.round(canvas.width / 2);\n      canvas.height = Math.round(canvas.height / 2);\n    }\n  }\n\n  // Vertex shader for equirectangular and cube\n  var v = [\n    'attribute vec2 a_texCoord;',\n    'varying vec2 v_texCoord;',\n\n    'void main() {',\n    // Set position\n    'gl_Position = vec4(a_texCoord, 0.0, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Vertex shader for multires\n  var vMulti = [\n    'attribute vec3 a_vertCoord;',\n    'attribute vec2 a_texCoord;',\n\n    'uniform mat4 u_cubeMatrix;',\n    'uniform mat4 u_perspMatrix;',\n\n    'varying mediump vec2 v_texCoord;',\n\n    'void main(void) {',\n    // Set position\n    'gl_Position = u_perspMatrix * u_cubeMatrix * vec4(a_vertCoord, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n    '}'\n  ].join('');\n\n  // Fragment shader\n  var fragEquiCubeBase = [\n    'precision mediump float;',\n\n    'uniform float u_aspectRatio;',\n    'uniform float u_psi;',\n    'uniform float u_theta;',\n    'uniform float u_f;',\n    'uniform float u_h;',\n    'uniform float u_v;',\n    'uniform float u_vo;',\n    'uniform float u_rot;',\n\n    'const float PI = 3.14159265358979323846264;',\n\n    // Texture\n    'uniform sampler2D u_image;',\n    'uniform samplerCube u_imageCube;',\n\n    // Coordinates passed in from vertex shader\n    'varying vec2 v_texCoord;',\n\n    // Background color (display for partial panoramas)\n    'uniform vec4 u_backgroundColor;',\n\n    'void main() {',\n    // Map canvas/camera to sphere\n    'float x = v_texCoord.x * u_aspectRatio;',\n    'float y = v_texCoord.y;',\n    'float sinrot = sin(u_rot);',\n    'float cosrot = cos(u_rot);',\n    'float rot_x = x * cosrot - y * sinrot;',\n    'float rot_y = x * sinrot + y * cosrot;',\n    'float sintheta = sin(u_theta);',\n    'float costheta = cos(u_theta);',\n    'float a = u_f * costheta - rot_y * sintheta;',\n    'float root = sqrt(rot_x * rot_x + a * a);',\n    'float lambda = atan(rot_x / root, a / root) + u_psi;',\n    'float phi = atan((rot_y * costheta + u_f * sintheta) / root);',\n  ].join('\\n');\n\n  // Fragment shader\n  var fragCube = fragEquiCubeBase + [\n    // Look up color from texture\n    'float cosphi = cos(phi);',\n    'gl_FragColor = textureCube(u_imageCube, vec3(cosphi*sin(lambda), sin(phi), cosphi*cos(lambda)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragEquirectangular = fragEquiCubeBase + [\n    // Wrap image\n    'lambda = mod(lambda + PI, PI * 2.0) - PI;',\n\n    // Map texture to sphere\n    'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));',\n\n    // Look up color from texture\n    // Map from [-1,1] to [0,1] and flip y-axis\n    'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)',\n    'gl_FragColor = u_backgroundColor;',\n    'else',\n    'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));',\n    '}'\n  ].join('\\n');\n\n  // Fragment shader\n  var fragMulti = [\n    'varying mediump vec2 v_texCoord;',\n    'uniform sampler2D u_sampler;',\n    //'uniform mediump vec4 u_color;',\n\n    'void main(void) {',\n    // Look up color from texture\n    'gl_FragColor = texture2D(u_sampler, v_texCoord);',\n    //    'gl_FragColor = u_color;',\n    '}'\n  ].join('');\n\n  return {\n    renderer: function(container, image, imagetype, dynamic) {\n      return new Renderer(container, image, imagetype, dynamic);\n    }\n  };\n\n})(window, document);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pannellum/js/libpannellum.js","module.exports = __webpack_public_path__ + \"alma.ce3e3084.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/alma.jpg\n// module id = rH3c\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = rplX\n// module chunks = 0","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 0","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = se3Y\n// module chunks = 0","var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    }\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * @file m3u8/parse-stream.js\n */\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    }\n\n    // split the key and value\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1);\n    // trim whitespace and remove optional quotes around the value\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n  return result;\n};\n\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0;\n\n    // strip whitespace\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    }\n\n    // URIs\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    }\n\n    // Comments\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    }\n\n    // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n    line = line.replace('\\r', '');\n\n    // Tags\n    match = /^#EXTM3U/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n      if (match[2]) {\n        event.title = match[2];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n          event.attributes.RESOLUTION = resolution;\n        }\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-ENDLIST/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        // parse the IV string into a Uint32Array\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n      this.trigger('data', event);\n      return;\n    }\n\n    // unknown tag type\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * @file m3u8/parser.js\n */\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n    _this.lineStream.pipe(_this.parseStream);\n\n    /* eslint-disable consistent-this */\n    var self = _this;\n    /* eslint-enable consistent-this */\n    var uris = [];\n    var currentUri = {};\n    // if specified, the active EXT-X-MAP definition\n    var currentMap = void 0;\n    // if specified, the active decryption key\n    var _key = void 0;\n    var noop = function noop() {};\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    };\n    // group segments into numbered timelines delineated by discontinuities\n    var currentTimeline = 0;\n\n    // the manifest is empty until the parse stream begins delivering data\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    };\n\n    // update the manifest with the m3u8 entry from the parse stream\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              }\n              // clear the active encryption key\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              }\n\n              // setup an encryption key for upcoming segments\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              }\n\n              // find the media group, creating defaults as necessary\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']];\n\n              // collect the rendition metadata\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              }\n\n              // insert the new rendition\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri);\n\n          // if no explicit duration was declared, use the target duration\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          }\n          // annotate with encryption information, if necessary\n          if (_key) {\n            currentUri.key = _key;\n          }\n          currentUri.timeline = currentTimeline;\n          // annotate with initialization segment information, if necessary\n          if (currentMap) {\n            currentUri.map = currentMap;\n          }\n\n          // prepare for the next URI\n          currentUri = {};\n        },\n        comment: function comment() {\n          // comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data;\n            // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n    return _this;\n  }\n\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/m3u8-parser/dist/m3u8-parser.es.js\n// module id = sg9Q\n// module chunks = 0","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-callable/index.js\n// module id = vRXZ\n// module chunks = 0","/**\n * mpd-parser\n * @version 0.6.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\nimport URLToolkit from 'url-toolkit';\nimport window from 'global/window';\n\nvar version = \"0.6.1\";\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }];\n    // targetDuration should be the same duration as the only segment\n    attributes.duration = attributes.sourceDuration;\n  }\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + ' (' + role + ')';\n    }\n\n    // skip if we already have the highest quality audio for a language\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      'default': role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text';\n\n    // skip if we already have subtitles\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      'default': false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  }\n\n  // grab all master attributes\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === undefined ? 0 : _dashPlaylists$0$attr2;\n\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = dashPlaylists.filter(videoOnly).map(formatVideoPlaylist);\n  var audioPlaylists = dashPlaylists.filter(audioOnly);\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar isObject = function isObject(obj) {\n  return !!obj && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n\n    Object.keys(source).forEach(function (key) {\n\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  }\n\n  // if the base URL is relative then combine with the current location\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location.href, baseUrl);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === undefined ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === undefined ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === undefined ? '' : _ref$range;\n\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === undefined ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp;\n\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === undefined ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === undefined ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({ number: number, duration: duration / timescale, time: time, timeline: timeline });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  'static': function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n\n\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === undefined ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === undefined ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === undefined ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === undefined ? Infinity : _attributes$timeShift;\n\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === undefined ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === undefined ? 1 : _attributes$startNumb;\n\n\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === undefined ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === undefined ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1;\n\n    // final segment may be less than full segment duration\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return '' + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? { sourceURL: '', range: '' } : _attributes$initializ;\n\n\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ;\n\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n\n  segment.map = initSegment;\n\n  return segment;\n};\n\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === undefined ? [] : _attributes$segmentUr;\n\n  // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo = void 0;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    }\n    // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n  }).filter(function (segment) {\n    return segment;\n  });\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === undefined ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === undefined ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === undefined ? '' : _attributes$indexRang,\n      duration = attributes.duration;\n\n  // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({ baseUrl: baseUrl, source: baseUrl, range: indexRange });\n\n  segment.map = initSegment;\n\n  // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  }\n\n  // This is used for mediaSequence\n  segment.number = 0;\n\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n\n  var segmentAttributes = void 0;\n  var segmentsFn = void 0;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return { attributes: attributes };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline);\n\n  // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === undefined ? 1 : _segmentAttributes$ti;\n\n\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60;\n\n  // P10Y10M10DT10H10M10.1S\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/;\n\n  // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\n// TODO: maybe order these in some way that makes it easy to find specific attributes\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n\n    a[e.name] = parseFn(e.value);\n\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({ tag: 'SegmentURL' }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0];\n\n  // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = { sourceURL: template.initialization };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n\n  return segmentInfo;\n};\n\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, { baseUrl: baseUrl })\n      };\n    });\n  };\n};\n\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = { attributes: attributes };\n\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = { role: parseAttributes(role) };\n\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, { contentProtection: contentProtection });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, periodIndex) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var periodAttributes = merge(mpdAttributes, periodAtt, { periodIndex: periodIndex });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\nvar inheritAttributes = function inheritAttributes(mpd) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$manifestUri = options.manifestUri,\n      manifestUri = _options$manifestUri === undefined ? '' : _options$manifestUri,\n      _options$NOW = options.NOW,\n      NOW = _options$NOW === undefined ? Date.now() : _options$NOW,\n      _options$clientOffset = options.clientOffset,\n      clientOffset = _options$clientOffset === undefined ? 0 : _options$clientOffset;\n\n  var periods = findChildren(mpd, 'Period');\n\n  if (periods.length !== 1) {\n    // TODO add support for multiperiod\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mpd-parser/dist/mpd-parser.es.js\n// module id = vmOg\n// module chunks = 0","/** @license React v16.5.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.async_mode\"):60111,y=n?Symbol.for(\"react.forward_ref\"):60112;n&&Symbol.for(\"react.placeholder\");\nvar z=\"function\"===typeof Symbol&&Symbol.iterator;function A(a,b,d,c,e,g,h,f){if(!a){a=void 0;if(void 0===b)a=Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var k=[d,c,e,g,h,f],l=0;a=Error(b.replace(/%s/g,function(){return k[l++]}));a.name=\"Invariant Violation\"}a.framesToPop=1;throw a;}}\nfunction B(a){for(var b=arguments.length-1,d=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)d+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);A(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",d)}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?B(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,d){this.props=a;this.context=b;this.refs=D;this.updater=d||C}var H=G.prototype=new F;\nH.constructor=G;m(H,E.prototype);H.isPureReactComponent=!0;var I={current:null,currentDispatcher:null},J=Object.prototype.hasOwnProperty,K={key:!0,ref:!0,__self:!0,__source:!0};\nfunction L(a,b,d){var c=void 0,e={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)J.call(b,c)&&!K.hasOwnProperty(c)&&(e[c]=b[c]);var f=arguments.length-2;if(1===f)e.children=d;else if(1<f){for(var k=Array(f),l=0;l<f;l++)k[l]=arguments[l+2];e.children=k}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===e[c]&&(e[c]=f[c]);return{$$typeof:p,type:a,key:g,ref:h,props:e,_owner:I.current}}\nfunction M(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,d,c){if(P.length){var e=P.pop();e.result=a;e.keyPrefix=b;e.func=d;e.context=c;e.count=0;return e}return{result:a,keyPrefix:b,func:d,context:c,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,d,c){var e=typeof a;if(\"undefined\"===e||\"boolean\"===e)a=null;var g=!1;if(null===a)g=!0;else switch(e){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return d(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){e=a[h];var f=b+T(e,h);g+=S(e,f,d,c)}else if(null===a||\"object\"!==typeof a?f=null:(f=z&&a[z]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),h=\n0;!(e=a.next()).done;)e=e.value,f=b+T(e,h++),g+=S(e,f,d,c);else\"object\"===e&&(d=\"\"+a,B(\"31\",\"[object Object]\"===d?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":d,\"\"));return g}function U(a,b,d){return null==a?0:S(a,\"\",b,d)}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function V(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,d){var c=a.result,e=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,d,function(a){return a}):null!=a&&(N(a)&&(a=M(a,e+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+d)),c.push(a))}function W(a,b,d,c,e){var g=\"\";null!=d&&(g=(\"\"+d).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,e);U(a,aa,b);R(b)}function ba(a,b){var d=I.currentDispatcher;null===d?B(\"277\"):void 0;return d.readContext(a,b)}\nvar X={Children:{map:function(a,b,d){if(null==a)return a;var c=[];W(a,c,null,b,d);return c},forEach:function(a,b,d){if(null==a)return a;b=Q(null,null,b,d);U(a,V,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];W(a,b,null,function(a){return a});return b},only:function(a){N(a)?void 0:B(\"143\");return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,Provider:null,Consumer:null,unstable_read:null};a.Provider={$$typeof:v,_context:a};a.Consumer=a;a.unstable_read=ba.bind(null,a);return a},forwardRef:function(a){return{$$typeof:y,render:a}},Fragment:r,StrictMode:t,unstable_AsyncMode:x,unstable_Profiler:u,createElement:L,cloneElement:function(a,b,d){null===a||void 0===a?B(\"267\",a):void 0;var c=void 0,e=m({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=I.current);void 0!==b.key&&(g=\"\"+b.key);\nvar k=void 0;a.type&&a.type.defaultProps&&(k=a.type.defaultProps);for(c in b)J.call(b,c)&&!K.hasOwnProperty(c)&&(e[c]=void 0===b[c]&&void 0!==k?k[c]:b[c])}c=arguments.length-2;if(1===c)e.children=d;else if(1<c){k=Array(c);for(var l=0;l<c;l++)k[l]=arguments[l+2];e.children=k}return{$$typeof:p,type:a.type,key:g,ref:h,props:e,_owner:f}},createFactory:function(a){var b=L.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.5.2\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:I,\nassign:m}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = vttU\n// module chunks = 0","module.exports = __webpack_public_path__ + \"jfk.b1884d3a.mp4\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./demo/src/images/jfk.mp4\n// module id = xbFh\n// module chunks = 0","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js\n// module id = yevv\n// module chunks = 0","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/mux.js/lib/mp4/track-decode-info.js\n// module id = zGuD\n// module chunks = 0"],"sourceRoot":""}